#! /bin/bash
# -*- coding: utf-8 -*-
# In Odoo multi-version installation set specific Odoo version as default
# Tool for internal use
#
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2019 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com
# This free software is released under GNU Affero GPL3


# READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
# export READLINK
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=""
for p in $TDIR $TDIR/.. $TDIR/../.. $HOME/venv_tools/bin $HOME/venv_tools/lib $HOME/tools; do
  [[ -d $p ]] && PYPATH=$(find $(readlink -f $p) -maxdepth 3 -name z0librc)
  [[ -n $PYPATH ]] && PYPATH=$(dirname $PYPATH) && break
done
PYPATH=$(echo -e "import os,sys;p=[os.path.dirname(x) for x in '$PYPATH'.split()];p.extend([x for x in os.environ['PATH'].split(':') if x not in p and x.startswith('$HOME')]);p.extend([x for x in sys.path if x not in p]);print(' '.join(p))"|python)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0lib/z0librc ]]; then
    . $d/z0lib/z0librc
    Z0LIBDIR=$d/z0lib
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  elif [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found!"
  exit 72
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$($READLINK -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"

__version__="0.3.2.1"


OPTOPTS=(h        I         n            O         U        V           v)
OPTDEST=(opt_help opt_id    opt_dry_run  odoo_ver  opt_usr opt_version opt_verbose)
OPTACTI=(1        "="       1            "=>"      1       "*>"        1)
OPTDEFL=(1        "odoo"    0            "9"       0       ""          0)
OPTMETA=("help"   "id-name" "do nothing" "version" "usr"   "version"   "verbose")
OPTHELP=("this help"\
 "set id name (odoo or openerp, default is odoo)"\
 "do nothing (dry-run)"\
 "select odoo version: may be 7, 8 or 9"\
 "change postgres user too"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs "$@"
if [[ "$opt_version" ]]; then
  echo "$__version__"
  exit 0
fi
if [[ $opt_help -gt 0 ]]; then
  print_help "Set a specific Odoo version as default\nSee product_bld_ods and product commands for furthermore info"\
  "(C) 2015-2019 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Odoo\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi


cp_n_upd () {
    local src="$1"
    local tgt=$(echo "$src"|sed -e "s:odoo$odoo_ver:odoo:")
    local tmp="$(basename $tgt).tmp"
    local bak="$tgt.bak"
	if [ ! -f $src ]; then
	  echo "File $src not found!"
	  exit 1
	fi
	if [ -f $tmp ]; then
	  rm -f $tmp
	fi
	while IFS=\| read -r line; do
	  if [[ $line =~ ^data_dir[[:space:]]*=[[:space:]]*.*Odoo$odoo_ver ]]; then
	    line=$(echo "$line"|sed -e "s:Odoo$odoo_ver:Odoo:")
	  elif [[ $line =~ ^db_user[[:space:]]*=[[:space:]]*.*odoo$odoo_ver ]]; then
	    if [ $opt_usr -gt 0 ]; then
	      line=$(echo "$line"|sed -e "s:odoo$odoo_ver:odoo:")
	    fi
	  elif [[ $line =~ ^logfile[[:space:]]*=[[:space:]]*.*odoo$odoo_ver ]]; then
	    line=$(echo "$line"|sed -e "s:odoo$odoo_ver:odoo:")
	  elif [[ $line =~ ^pidfile[[:space:]]*=[[:space:]]*.*odoo$odoo_ver ]]; then
	    line=$(echo "$line"|sed -e "s:odoo$odoo_ver:odoo:")
	  elif [[ $line =~ ^xmlrpc_port[[:space:]]*=[[:space:]][0-9]* ]]; then
	    line="xmlrpc_port = 8069"
	  elif [[ $line =~ ^NAME=.*odoo$odoo_ver.* ]]; then
	    line=$(echo "$line"|sed -e "s:odoo$odoo_ver:odoo:")
	  elif [[ $line =~ .*odoo$odoo_ver-server.conf.* ]]; then
	    line=$(echo "$line"|sed -e "s:odoo$odoo_ver:odoo:")
	  elif [[ $line =~ .*odoo$odoo_ver-server.pid.* ]]; then
	    line=$(echo "$line"|sed -e "s:odoo$odoo_ver:odoo:")
	  elif [[ $line =~ .*odoo$odoo_ver-server.log.* ]]; then
	    line=$(echo "$line"|sed -e "s:odoo$odoo_ver:odoo:")
	  fi
	  echo "$line">>$tmp
	done < "$src"
	if [ -x $src ]; then
	  chmod +x $tmp
	fi
	if [ $opt_dry_run -eq 0 ]; then
	  mv -f $tgt $bak
	  mv -f $tmp $tgt
	else
	  echo "See $tmp to discover how to script works"
	fi
}

if [ $opt_dry_run -eq 0 ]; then
  service odoo-server restart
fi
for f in /etc/odoo/odoo${odoo_ver}-server.conf /etc/init.d/odoo${odoo_ver}-server; do
  cp_n_upd "$f"
done
if [ $opt_dry_run -eq 0 ]; then
  service odoo-server restart
fi
