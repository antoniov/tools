#! /bin/bash
# Write text in wiki format from product output
#
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2019 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com

THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../.. $TDIR/../../z0lib $TDIR/../../z0lib/z0lib $HOME/dev $HOME/tools ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi

__version__="0.3.1.14"

# main
OPTOPTS=(h        n            s       T       V           v)
OPTDEST=(opt_help opt_dry_run  opt_shl opt_txt opt_version opt_verbose)
OPTACTI=(1        1            1       "="     "*>"        1)
OPTDEFL=(0        0            0       ""      ""          0)
OPTMETA=("help"   "do nothing" "highl" "txtid" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "use syntaxhighlight"\
 "write no statement texts"\
 "show version"\
 "verbose mode")
OPTARGS=(opt_inp)

parseoptargs "$@"
if [ "$opt_version" ]; then
  echo "$__version__"
  exit 0
fi
if [ $opt_help -gt 0 ]; then
  print_help "Write wiki text from produtc output"\
  "(C) 2015-2019 by zeroincombenze(R)\nhttp://www.zeroincombenze.it\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
sts=0
if [ -z "$opt_inp" -o ! -f "$opt_inp" ]; then
  opt_inp="-"
fi
if [ $opt_shl -eq 0 ]; then
  pfx=" "
else
  pfx=""
fi
(($opt_shl))&& echo "<syntaxhighlight lang=\"bash\">"
while IFS=\| read l; do
  if [ -n "$l" ]; then
    if [ "${l:0:1}" == ">" -o "${l:0:1}" == "\$" ]; then
      echo "$pfx${l:2}"
    elif [ "${l:0:1}" == "#" ]; then
      echo "$pfx$l"
    elif [ -n "$opt_txt" ]; then
      echo "$pfx$opt_txt$l"
    fi
  else
    echo "$pfx$l"
  fi
done < <(cat -- $opt_inp)
(($opt_shl))&& echo "</syntaxhighlight>"
exit $sts
