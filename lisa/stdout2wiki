#! /bin/bash
# Write text in wiki format from product output
#
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2019 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com

# READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
# export READLINK
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=""
for p in $TDIR $TDIR/.. $TDIR/../.. $HOME/venv_tools/bin $HOME/venv_tools/lib $HOME/tools; do
  [[ -d $p ]] && PYPATH=$(find $(readlink -f $p) -maxdepth 3 -name z0librc)
  [[ -n $PYPATH ]] && break
done
PYPATH=$(echo -e "import os,sys;p=[os.path.dirname(x) for x in '$PYPATH'.split()];p.extend([x for x in os.environ['PATH'].split(':') if x not in p and not x.startswith('/usr') and not x.startswith('/sbin') and not x.startswith('/bin')]);p.extend([x for x in sys.path if x not in p]);print(' '.join(p))"|python)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"

__version__="0.3.2.1"

# main
OPTOPTS=(h        n            s       T       V           v)
OPTDEST=(opt_help opt_dry_run  opt_shl opt_txt opt_version opt_verbose)
OPTACTI=(1        1            1       "="     "*>"        1)
OPTDEFL=(0        0            0       ""      ""          0)
OPTMETA=("help"   "do nothing" "highl" "txtid" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "use syntaxhighlight"\
 "write no statement texts"\
 "show version"\
 "verbose mode")
OPTARGS=(opt_inp)

parseoptargs "$@"
if [[ "$opt_version" ]]; then
  echo "$__version__"
  exit 0
fi
if [[ $opt_help -gt 0 ]]; then
  print_help "Write wiki text from produtc output"\
  "(C) 2015-2019 by zeroincombenze(R)\nhttp://www.zeroincombenze.it\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
sts=0
if [ -z "$opt_inp" -o ! -f "$opt_inp" ]; then
  opt_inp="-"
fi
if [ $opt_shl -eq 0 ]; then
  pfx=" "
else
  pfx=""
fi
(($opt_shl))&& echo "<syntaxhighlight lang=\"bash\">"
while IFS=\| read l; do
  if [ -n "$l" ]; then
    if [ "${l:0:1}" == ">" -o "${l:0:1}" == "\$" ]; then
      echo "$pfx${l:2}"
    elif [ "${l:0:1}" == "#" ]; then
      echo "$pfx$l"
    elif [ -n "$opt_txt" ]; then
      echo "$pfx$opt_txt$l"
    fi
  else
    echo "$pfx$l"
  fi
done < <(cat -- $opt_inp)
(($opt_shl))&& echo "</syntaxhighlight>"
exit $sts
