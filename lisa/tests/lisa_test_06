#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on lisa
# Check for update
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  elif [ -d $d/z0lib ]; then
    . $d/z0lib/z0librc
    Z0LIBDIR=$d/z0lib
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $HOME/tools/zerobug $HOME/dev ${PYPATH//:/ } . .." "zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.3.0.10

test_run () {
# test_run(msg,package,disto,cmd)
    # set -x #debug
    TPRODUCT="$RUNDIR/lisa -T"
    local msg="$1"
    if [ "$2" == "." ]; then
      local Package="_"
    else
      local Package="$2"
    fi
    local Disto="$3"
    local cmd="$4"
    local FH=
    local opt_e="-E$Disto"
    local opt_ij="-I$Package,wget,gcc,git"
    if [ "$Disto" == "." ]; then
        local FH=$Real_FH
        local Disto=$Real_DISTO
        local opt_e=
    elif [ "$Disto" == "Ubuntu12" -o "$Disto" == "Ubuntu14" ]; then
      local FH="Debian"
    elif [ "$Disto" == "CentOS6" -o "$Disto" == "CentOS7" ]; then
      local FH="RHEL"
    fi
    if [ "$Package" == "httpd" ]; then
      if [ "$Disto" == "Ubuntu12" -o "$Disto" == "Ubuntu14" ]; then
        local Package="apache2"
      fi
      local opt_ij="-I$Package -Jvsftpd"
    elif [ "$Package" == "apache2" ]; then
      if [ "$Disto" == "CentOS6" -o "$Disto" == "CentOS7" ]; then
        local Package="httpd"
      fi
      local opt_ij="-I$Package -Jvsftpd"
    elif [ "$Package" == "pip" ]; then
      local opt_ij="-I$Package,python-pip"
    elif [ "$Package" == "python-pip" ]; then
      local opt_ij="-I$Package,python-pip"
    elif [ "$Package" == "postgresql-server" ]; then
      if [ "$FH" == "Debian" ]; then
        local Package="postgresql"
      fi
      local opt_ij="-I$Package -Jpostgresql-client-common,postgresql-contrib"
    elif [ "$Package" == "postgresql" ]; then
      if [ "$FH" == "RHEL" ]; then
        local Package="postgresql-server"
      fi
      local opt_ij="-I$Package -Jpostgresql-client-common,postgresql-contrib"
    elif [ "$Package" == "postgres" ]; then
      if [ "$FH" == "Debian" ]; then
        local Package="postgresql"
      elif [ "$FH" == "RHEL" ]; then
        local Package="postgresql-server"
      fi
      local opt_ij="-I$Package -Jpostgresql-client-common,postgresql-contrib"
    elif [ "$Package" == "openssh" ]; then
      local Package="openssh-server"
      opt_ij="-I$Package,openssh-client,openssh-clients,mod_ssl,mod_proxy_html,iptables-services,bind-utils"
    elif [ "$Package" == "openssh-server" ]; then
      opt_ij="-I$Package,openssh-client,openssh-clients,mod_ssl,mod_proxy_html,iptables-services,bind-utils"
    elif [ "$Package" == "python" ]; then
      opt_ij="-Jpython-wheel,wheel -I$Package,python-setuptools,setuptools,python-pip,pip,python-virtualenv,virtualenv,readline,libreadline6,libxslt-python,python-libxslt1,libxml2,python-libxml2,libxml2-python,psycopg2,python-psycopg2,simplejson,xlwt,PyYAML,gdata,python-ldap,lxml,pytz"
    elif [ "$Package" == "wkhtmltopdf" ]; then
      opt_ij="-I$Package,wget,xorg-x11-fonts-Type1,xorg-x11-fonts-75dpi"
    fi
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $TESTDIR/res/${Package}__${Disto}.06.test ]; then
        TESTOUT=$TESTDIR/res/${Package}__${Disto}.06.test
      elif [ -f $TESTDIR/res/${Package}__${FH}.06.test ]; then
        TESTOUT=$TESTDIR/res/${Package}__${FH}.06.test
      elif [ -f $TESTDIR/res/${Package}.06.test ]; then
        TESTOUT=$TESTDIR/res/${Package}.06.test
      else
        TESTOUT=
        echo "File test comparison ${Package}__${Disto} not found!"
      fi
      rm -f $TESTDIR/lisa.out
      eval $TPRODUCT $opt_e update $2 $opt_ij>$TESTDIR/lisa.out
    fi
    # set +x #debug
    ci-test "$msg" "$TESTOUT" "$TESTDIR/lisa.out" "$cmd"
    return $s
}

test_01() {
if [ ${opt_dry_run:-0} -eq 0 ]; then
  rm -f $TESTDIR/res/*.06.test
  cat <<EOF >$TESTDIR/res/___RHEL.06.test
> yum -y update
EOF
  cat <<EOF >$TESTDIR/res/___Debian.06.test
> apt-get -y update
> apt-get -y upgrade
EOF
  cat <<EOF >$TESTDIR/res/lisa.06.test
> cd /tmp
> wget http://download.zeroincombenze.org/lisa.tar.gz
> tar -xf lisa.tar.gz
> ./setup.sh -nv
> mkdir -p /etc/lisa
> mkdir -p /etc/lisa/kbase
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa /usr/bin
> [ -x /usr/bin/lisa ] && chmod +x /usr/bin/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa.man /usr/bin
> [ -x /usr/bin/lisa.man ] && chmod +x /usr/bin/lisa.man
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa_bld_ods /usr/bin
> [ -x /usr/bin/lisa_bld_ods ] && chmod +x /usr/bin/lisa_bld_ods
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa_set_ods /usr/bin
> [ -x /usr/bin/lisa_set_ods ] && chmod +x /usr/bin/lisa_set_ods
> cp /opt/odoo/dev/pypi/lisa/lisa/stdout2wiki /usr/bin
> [ -x /usr/bin/stdout2wiki ] && chmod +x /usr/bin/stdout2wiki
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa.conf.sample /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server_Debian /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server_RHEL /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/kbase/LAMP.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/kbase/LAMP_security.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/kbase/lisa.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/kbase/odoo.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/kbase/postgresql.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/kbase/python.lish /etc/lisa
> cd /opt/odoo/dev/pypi/lisa/lisa
> _install_z0librc
> cp /opt/odoo/dev/pypi/lisa/lisa/odoorc /etc
> cd /opt/odoo/dev/pypi/lisa/lisa
> rm -f lisa.tar.gz
EOF
  # for f in lisa.conf lisa.conf.sample odoo-server_Debian odoo-server_RHEL odoo-server; do
  #   if [ -f $RUNDIR/$f ]; then
  #     echo "> cp $RUNDIR/$f /etc/lisa">>$TESTDIR/res/lisa.06.test
  #  fi
  # done
  # for f in $RUNDIR/*.lish; do
  #   echo "> cp $f /etc/lisa">>$TESTDIR/res/lisa.06.test
  # done
  # echo "> cd $RUNDIR">>$TESTDIR/res/lisa.06.test
  # echo "> _install_z0librc">>$TESTDIR/res/lisa.06.test
  # echo "> cd ..">>$TESTDIR/res/lisa.06.test
  # echo "> rm -f lisa.gz">>$TESTDIR/res/lisa.06.test
#
  cat <<EOF >$TESTDIR/res/apache2__Debian.06.test
> apt-get -y update
> apt-get -y upgrade apache2
> apt-get -y install vsftpd
> service apache2 restart
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
> service vsftpd start
> update-rc.d vsftpd enable
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT
EOF
  cat <<EOF >$TESTDIR/res/httpd__CentOS7.06.test
> yum -y update httpd
> yum -y install vsftpd
> systemctl restart httpd
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
> systemctl start vsftpd
> systemctl enable vsftpd
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT
EOF
  cat <<EOF >$TESTDIR/res/httpd__CentOS6.06.test
> yum -y update httpd
> service httpd restart
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
EOF
  cat <<EOF >$TESTDIR/res/postgresql-server__CentOS7.06.test
> yum -y update postgresql-server
> yum -y install postgresql-client-common
> yum -y install postgresql-contrib
> systemctl restart postgresql
EOF
  cat <<EOF >$TESTDIR/res/postgresql-server__CentOS6.06.test
> yum -y update postgresql-server
> yum -y install postgresql-client-common
> yum -y install postgresql-contrib
> service postgresql restart
EOF
  cat <<EOF >$TESTDIR/res/postgresql__Debian.06.test
> apt-get -y update
> apt-get -y upgrade postgresql
> apt-get -y install postgresql-client-common
> apt-get -y install postgresql-contrib
> service postgresql restart
EOF
  cat <<EOF >$TESTDIR/res/python-pip__CentOS6.06.test
> pip install 'pip' --upgrade
EOF
  cat <<EOF >$TESTDIR/res/python-pip__CentOS7.06.test
> pip install 'pip' --upgrade
> pip install 'wheel' --upgrade --no-warn-conflicts
EOF
  cat <<EOF >$TESTDIR/res/python-pip__Debian.06.test
> pip install 'pip' --upgrade
> pip install 'wheel' --upgrade --no-warn-conflicts
EOF
  cat <<EOF >$TESTDIR/res/pip__Debian.06.test
> pip install 'pip' --upgrade
> pip install 'wheel' --upgrade --no-warn-conflicts
EOF
  cat <<EOF >$TESTDIR/res/pip__CentOS6.06.test
> pip install 'pip' --upgrade
EOF
  cat <<EOF >$TESTDIR/res/pip__CentOS7.06.test
> pip install 'pip' --upgrade
> pip install 'wheel' --upgrade --no-warn-conflicts
EOF
  cat <<EOF >$TESTDIR/res/openssh-server__Debian.06.test
> apt-get -y update
> apt-get -y upgrade openssh-server
> apt-get -y upgrade openssh-client
> service ssh restart
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
  cat <<EOF >$TESTDIR/res/openssh-server__CentOS7.06.test
> yum -y update openssh-server
> yum -y update openssh-clients
> yum -y update mod_ssl
> yum -y update mod_proxy_html
> yum -y update iptables-services
> yum -y update bind-utils
> systemctl restart sshd
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
  cat <<EOF >$TESTDIR/res/openssh-server__CentOS6.06.test
> yum -y update openssh-server
> yum -y update openssh-clients
> yum -y update mod_ssl
> yum -y update mod_proxy_html
> yum -y update iptables-services
> yum -y update bind-utils
> service sshd restart
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
  cat <<EOF >$TESTDIR/res/wkhtmltopdf__Ubuntu14.06.test
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-trusty-amd64.deb
> apt-get -y update
> apt-get -y upgrade wkhtmltox-0.12.1_linux-trusty-amd64.deb
> rm -f wkhtmltox-0.12.1_linux-trusty-amd64.deb
EOF
  cat <<EOF >$TESTDIR/res/wkhtmltopdf__Ubuntu12.06.test
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-precise-i386.deb
> apt-get -y update
> apt-get -y upgrade wkhtmltox-0.12.1_linux-precise-i386.deb
> rm -f wkhtmltox-0.12.1_linux-precise-i386.deb
EOF
  cat <<EOF >$TESTDIR/res/wkhtmltopdf__CentOS7.06.test
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-centos7-amd64.rpm
> yum -y update wkhtmltox-0.12.1_linux-centos7-amd64.rpm
> rm -f wkhtmltox-0.12.1_linux-centos7-amd64.rpm
EOF
  cat <<EOF >$TESTDIR/res/wkhtmltopdf__CentOS6.06.test
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-centos6-i386.rpm
> yum -y update wkhtmltox-0.12.1_linux-centos6-i386.rpm
> rm -f wkhtmltox-0.12.1_linux-centos6-i386.rpm
EOF
fi
Real_FH=$(xuname "-f")
x=$(xuname "-v")
v=$(echo $x|awk -F. '{print $1}')
Real_DISTO=$(xuname "-d")$v

for Package in . lisa apache2 httpd\
  pip python-pip\
  postgres postgresql postgresql-server\
  openssh openssh-server wkhtmltopdf; do
  for Disto in . Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
     if [ "$Disto" == "." ]; then
       if [ "$Package" == "wkhtmltopdf" ]; then
         continue
       fi
       opt_e=
     else
       opt_e="-E$Disto"
     fi
     test_run "update $Package $opt_e" "$Package" "$Disto" "diff -Z"
  done
done

if [ ${opt_dry_run:-0} -eq 0 ]; then
  cat <<EOF >$TESTDIR/res/python__Debian.06.test
> apt-get -y install python-wheel
> pip install 'wheel' --upgrade --no-warn-conflicts
> apt-get -y install xorg-x11-fonts-Type1
> apt-get -y install xorg-x11-fonts-75dpi
> apt-get -y update
> apt-get -y upgrade python
> apt-get -y install ghostscript
> apt-get -y install libart-2.0-2
> apt-get -y install libcupsfilters1
> apt-get -y install python-unittest2
> apt-get -y install python-utidylib
> apt-get -y install python-vobject
> apt-get -y install python-werkzeug
> apt-get -y install docutils-common
> apt-get -y install docutils-doc
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-trusty-amd64.deb
> apt-get -y upgrade wkhtmltox-0.12.1_linux-trusty-amd64.deb
> rm -f wkhtmltox-0.12.1_linux-trusty-amd64.deb
EOF
  cat <<EOF >$TESTDIR/res/python__RHEL.06.test
> yum -y install python-wheel
> pip install 'wheel' --upgrade --no-warn-conflicts
#
> yum -y update python
> pip install 'setuptools' --upgrade --no-warn-conflicts
> yum -y update python-virtualenv
> pip install 'virtualenv' --upgrade --no-warn-conflicts
> yum -y update readline
> pip install 'psycopg2' --upgrade --no-warn-conflicts
> pip install 'simplejson' --upgrade --no-warn-conflicts
> pip install 'xlwt' --upgrade --no-warn-conflicts
> pip install 'PyYAML' --upgrade --no-warn-conflicts
> pip install 'gdata' --upgrade --no-warn-conflicts
> pip install 'python-ldap' --upgrade --no-warn-conflicts
> pip install 'pytz' --upgrade --no-warn-conflicts
> pip install 'requests' --upgrade --no-warn-conflicts
EOF
fi

for Package in python; do
  for Disto in Ubuntu14 CentOS7; do
     if [ "$Disto" == "." ]; then
       opt_e=
     else
       opt_e="-E$Disto"
     fi
     test_run "update $Package $opt_e" "$Package" "$Disto" "diff -Z"
  done
done
}

Z0BUG_setup() {
    [ -f /tmp/lisa.tar.gz ] && rm -f /tmp/lisa.tar.gz
    [ -d /tmp/lisa ] && rm -fR /tmp/lisa
    [ -f "/tmp/wkhtml*"  ] && rm -f /tmp/wkhtml*
    if [ -f "/tmp/lisa*"  ]; then
      echo "Test not executable!"
      echo "Please, remove lisa file/directory from /tmp"
      exit 1
    fi
    if [ -f "/tmp/wkhtml*"  ]; then
      echo "Test not executable!"
      echo "Please, remove wkhtmltopdf file from /tmp"
      exit 1
    fi
}


Z0BUG_init
parseoptest -l$TESTDIR/test_lisa.log "$@" "-O"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_oeLib:-0} -ne 0 ]; then
  ODOOLIBDIR=$(findpkg odoorc "$TDIR $TDIR/.. $HOME/tools/clodoo $HOME/dev ${PYPATH//:/ } . .." "clodoo")
  if [ -z "$ODOOLIBDIR" ]; then
    echo "Library file odoorc not found!"
    exit 2
  fi
  . $ODOOLIBDIR
fi


UT_LIST=""
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
