#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on lisa
# Check for install
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib . .. /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $TDIR/../zerobug $TDIR/../../zerobug  . .. $HOME/dev")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.2.1.22


test_run () {
# test_run(msg,package,disto,cmd,opt_d)
    TPRODUCT="$RUNDIR/lisa -T"
    local msg="$1"
    local Package="$2"
    local Disto="$3"
    local cmd="$4"
    local opt_d="$5"
    local FH=
    local opt_e="-E$Disto"
    local opt_ij="-J$Package,wget,gcc,git"
    if [ "$Disto" == "." ]; then
        local FH=$Real_FH
        local Disto=$Real_DISTO
        local opt_e=
    elif [ "$Disto" == "Ubuntu12" -o "$Disto" == "Ubuntu14" ]; then
      local FH="Debian"
    elif [ "$Disto" == "CentOS6" -o "$Disto" == "CentOS7" ]; then
      local FH="RHEL"
    fi
    if [ "$Package" == "httpd" ]; then
      if [ "$FH" == "Debian" ]; then
        local Package="apache2"
      fi
      opt_ij="-J$Package,vsftpd"
    elif [ "$Package" == "apache2" ]; then
      if [ "$FH" == "RHEL" ]; then
        local Package="httpd"
      fi
      opt_ij="-J$Package,vsftpd"
    elif [ "$Package" == "pip" -o "$Package" == "python-pip" ]; then
      opt_ij="-Jpip,python-pip"
    elif [ "$Package" == "postgresql-server" ]; then
      if [ "$FH" == "Debian" ]; then
        local Package="postgresql"
        opt_ij="-J$Package,postgresql-client-common,postgresql-contrib"
      elif [ "$FH" == "RHEL" ]; then
        opt_ij="-J$Package -Ipostgresql-client-common,postgresql-contrib"
      fi
    elif [ "$Package" == "postgresql" ]; then
      if [ "$FH" == "RHEL" ]; then
        local Package="postgresql-server"
        opt_ij="-J$Package -Ipostgresql-client-common,postgresql-contrib"
      fi
    elif [ "$Package" == "postgres" ]; then
      if [ "$FH" == "Debian" ]; then
        local Package="postgresql"
        opt_ij="-J$Package,postgresql-client-common,postgresql-contrib"
      elif [ "$FH" == "RHEL" ]; then
        local Package="postgresql-server"
        opt_ij="-J$Package -Ipostgresql-client-common,postgresql-contrib"
      fi
    elif [ "$Package" == "openssh" ]; then
      local Package="openssh-server"
      opt_ij="-J$Package,openssh-client,openssh-clients,mod_ssl,mod_proxy_html,iptables-services,bind-utils,telnet"
    elif [ "$Package" == "openssh-server" ]; then
      opt_ij="-J$Package,openssh-client,openssh-clients,mod_ssl,mod_proxy_html,iptables-services,bind-utils,telnet"
    elif [ "$Package" == "dateutil" -o "$Package" == "python-dateutil" ]; then
      opt_ij="-Jdateutil,python-dateutil,wget,gcc,git"
    elif [ "$Package" == "python" ]; then
      opt_ij="-e1 -I$Package,python-pip,pip,python-setuptools,setuptools -Jpython-wheel,wheel,python-virtualenv,virtualenv,readline,libreadline6,libxslt-python,python-libxslt1,libxml2,python-libxml2,libxml2-python,psycopg2,python-psycopg2,simplejson,xlwt,PyYAML,gdata,python-ldap,lxml,pytz,wkhtmltox_Debian"
    elif [ "$Package" == "wkhtmltopdf" ]; then
      opt_ij="-J$Package,wget,xorg-x11-fonts-Type1,xorg-x11-fonts-75dpi"
    fi
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $TESTDIR/res/${Package}__${Disto}.05.test ]; then
        TESTOUT=$TESTDIR/res/${Package}__${Disto}.05.test
      elif [ -f $TESTDIR/res/${Package}__${FH}.05.test ]; then
        TESTOUT=$TESTDIR/res/${Package}__${FH}.05.test
      elif [ -f $TESTDIR/res/${Package}.05.test ]; then
        TESTOUT=$TESTDIR/res/${Package}.05.test
      else
        TESTOUT=
        echo "File test comparison ${Package}__${Disto} not found!"
      fi
      rm -f $TESTDIR/lisa.out
      eval $TPRODUCT $opt_d $opt_e install $2 $opt_ij>$TESTDIR/lisa.out
    fi
    ci-test "$msg" "$TESTOUT" "$TESTDIR/lisa.out" "$cmd"
    return $s
}

test_01() {
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      rm -f $TESTDIR/res/*.05.test
      if [ "$PWD" != "$RUNDIR" ]; then
        local SETUP=$RUNDIR/setup.sh
      else
        local SETUP=./setup.sh
      fi 
      cat <<EOF >$TESTDIR/res/lisa__RHEL.05.test
> yum -y install wget
> yum -y install git
> $SETUP -nv
> mkdir -p /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa /usr/bin
> [ -x /usr/bin/lisa ] && chmod +x /usr/bin/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa.man /usr/bin
> [ -x /usr/bin/lisa.man ] && chmod +x /usr/bin/lisa.man
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa_bld_ods /usr/bin
> [ -x /usr/bin/lisa_bld_ods ] && chmod +x /usr/bin/lisa_bld_ods
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa_set_ods /usr/bin
> [ -x /usr/bin/lisa_set_ods ] && chmod +x /usr/bin/lisa_set_ods
> cp /opt/odoo/dev/pypi/lisa/lisa/stdout2wiki /usr/bin
> [ -x /usr/bin/stdout2wiki ] && chmod +x /usr/bin/stdout2wiki
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa.conf.sample /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server_Debian /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server_RHEL /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/LAMP.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/postgresql.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/python.lish /etc/lisa
> cd /opt/odoo/dev/pypi/lisa/lisa
> _install_z0librc
> cp /opt/odoo/dev/pypi/lisa/lisa/odoorc /etc
> cd /opt/odoo/dev/pypi/lisa/lisa
EOF
      cat <<EOF >$TESTDIR/res/lisa__Debian.05.test
> apt-get -y install wget
> apt-get -y install git
> $SETUP -nv
> mkdir -p /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa /usr/bin
> [ -x /usr/bin/lisa ] && chmod +x /usr/bin/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa.man /usr/bin
> [ -x /usr/bin/lisa.man ] && chmod +x /usr/bin/lisa.man
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa_bld_ods /usr/bin
> [ -x /usr/bin/lisa_bld_ods ] && chmod +x /usr/bin/lisa_bld_ods
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa_set_ods /usr/bin
> [ -x /usr/bin/lisa_set_ods ] && chmod +x /usr/bin/lisa_set_ods
> cp /opt/odoo/dev/pypi/lisa/lisa/stdout2wiki /usr/bin
> [ -x /usr/bin/stdout2wiki ] && chmod +x /usr/bin/stdout2wiki
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa.conf.sample /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server_Debian /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server_RHEL /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo-server /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/LAMP.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/lisa.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/odoo.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/postgresql.lish /etc/lisa
> cp /opt/odoo/dev/pypi/lisa/lisa/python.lish /etc/lisa
> cd /opt/odoo/dev/pypi/lisa/lisa
> _install_z0librc
> cp /opt/odoo/dev/pypi/lisa/lisa/odoorc /etc
> cd /opt/odoo/dev/pypi/lisa/lisa
EOF
      cat <<EOF >$TESTDIR/res/apache2__Debian.05.test
> apt-get -y install apache2
> apt-get -y install vsftpd
> service apache2 start
> update-rc.d apache2 enable
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
> service vsftpd start
> update-rc.d vsftpd enable
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT
EOF
      cat <<EOF >$TESTDIR/res/httpd__CentOS7.05.test
> yum -y install httpd
> yum -y install vsftpd
> systemctl start httpd
> systemctl enable httpd
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
> systemctl start vsftpd
> systemctl enable vsftpd
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT
EOF
      cat <<EOF >$TESTDIR/res/httpd__CentOS6.05.test
> yum -y install httpd
> service httpd start
> chkconfig httpd on
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
EOF
      cat <<EOF >$TESTDIR/res/postgresql-server__CentOS7.05.test
> yum -y install postgresql-server
# yum -y install postgresql-client-common
# yum -y install postgresql-contrib
> postgresql-setup initdb
> systemctl start postgresql
> systemctl enable postgresql
EOF
      cat <<EOF >$TESTDIR/res/postgresql-server__CentOS6.05.test
> yum -y install postgresql-server
# yum -y install postgresql-client-common
# yum -y install postgresql-contrib
> service postgresql initdb
> service postgresql start
> chkconfig postgresql on
EOF
      cat <<EOF >$TESTDIR/res/postgresql__Debian.05.test
> apt-get -y install postgresql
> apt-get -y install postgresql-client-common
> apt-get -y install postgresql-contrib
> service postgresql initdb
> service postgresql start
> update-rc.d postgresql enable
EOF
      cat <<EOF >$TESTDIR/res/pip__CentOS7.05.test
> yum -y install python-pip
> pip install pip --upgrade
EOF
      cat <<EOF >$TESTDIR/res/pip__CentOS6.05.test
> yum -y install python-pip
> pip install pip --upgrade
EOF
      cat <<EOF >$TESTDIR/res/pip__Debian.05.test
> apt-get -y install python-pip
> pip install pip --upgrade
EOF
      cat <<EOF >$TESTDIR/res/python-pip__CentOS7.05.test
> yum -y install python-pip
> pip install pip --upgrade
EOF
      cat <<EOF >$TESTDIR/res/python-pip__CentOS6.05.test
> yum -y install python-pip
> pip install pip --upgrade
EOF
      cat <<EOF >$TESTDIR/res/python-pip__Debian.05.test
> apt-get -y install python-pip
> pip install pip --upgrade
EOF
      cat <<EOF >$TESTDIR/res/openssh-server__Debian.05.test
> apt-get -y install openssh-server
> apt-get -y install openssh-client
> service ssh start
> update-rc.d ssh enable
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
      cat <<EOF >$TESTDIR/res/openssh-server__CentOS7.05.test
> yum -y install openssh-server
> yum -y install openssh-clients
> yum -y install mod_ssl
> yum -y install mod_proxy_html
> yum -y install iptables-services
> yum -y install bind-utils
> systemctl start sshd
> systemctl enable sshd
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
      cat <<EOF >$TESTDIR/res/openssh-server__CentOS6.05.test
> yum -y install openssh-server
> yum -y install openssh-clients
> yum -y install mod_ssl
> yum -y install mod_proxy_html
> yum -y install iptables-services
> yum -y install bind-utils
> service sshd start
> chkconfig sshd on
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
      cat <<EOF >$TESTDIR/res/wkhtmltopdf__Ubuntu14.05.test
> apt-get -y install xorg-x11-fonts-Type1
> apt-get -y install xorg-x11-fonts-75dpi
> apt-get -y install wget
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-trusty-amd64.deb
> apt-get -y install wkhtmltox-0.12.1_linux-trusty-amd64.deb
> rm -f wkhtmltox-0.12.1_linux-trusty-amd64.deb
EOF
      cat <<EOF >$TESTDIR/res/wkhtmltopdf__Ubuntu12.05.test
> apt-get -y install xorg-x11-fonts-Type1
> apt-get -y install xorg-x11-fonts-75dpi
> apt-get -y install wget
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-precise-i386.deb
> apt-get -y install wkhtmltox-0.12.1_linux-precise-i386.deb
> rm -f wkhtmltox-0.12.1_linux-precise-i386.deb
EOF
      cat <<EOF >$TESTDIR/res/wkhtmltopdf__CentOS7.05.test
> yum -y install xorg-x11-fonts-Type1
> yum -y install xorg-x11-fonts-75dpi
> yum -y install wget
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-centos7-amd64.rpm
> yum -y install wkhtmltox-0.12.1_linux-centos7-amd64.rpm
> rm -f wkhtmltox-0.12.1_linux-centos7-amd64.rpm
EOF
      cat <<EOF >$TESTDIR/res/wkhtmltopdf__CentOS6.05.test
> yum -y install xorg-x11-fonts-Type1
> yum -y install xorg-x11-fonts-75dpi
> yum -y install wget
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-centos6-i386.rpm
> yum -y install wkhtmltox-0.12.1_linux-centos6-i386.rpm
> rm -f wkhtmltox-0.12.1_linux-centos6-i386.rpm
EOF
      cat <<EOF >$TESTDIR/res/dateutil__Debian.05.test
> pip install python-dateutil
EOF
      cat <<EOF >$TESTDIR/res/dateutil__CentOS6.05.test
> yum -y install wget
> cd /tmp
> wget https://pypi.python.org/packages/source/p/python-dateutil//python-dateutil-1.5.tar.gz#md5=0dcb1de5e5cad69490a3b6ab63f0cfa5
> pip install python-dateutil-1.5.tar.gz
> rm -f python-dateutil-1.5.tar.gz
EOF
      cat <<EOF >$TESTDIR/res/dateutil__CentOS7.05.test
> pip install python-dateutil
EOF
      cat <<EOF >$TESTDIR/res/python-dateutil__Debian.05.test
> pip install python-dateutil
EOF
      cat <<EOF >$TESTDIR/res/python-dateutil__CentOS6.05.test
> yum -y install wget
> cd /tmp
> wget https://pypi.python.org/packages/source/p/python-dateutil//python-dateutil-1.5.tar.gz#md5=0dcb1de5e5cad69490a3b6ab63f0cfa5
> pip install python-dateutil-1.5.tar.gz
> rm -f python-dateutil-1.5.tar.gz
EOF
      cat <<EOF >$TESTDIR/res/python-dateutil__CentOS7.05.test
> pip install python-dateutil
EOF
    fi
    Real_FH=$(xuname "-f")
    x=$(xuname "-v")
    v=$(echo $x|awk -F. '{print $1}')
    Real_DISTO=$(xuname "-d")$v

    for Package in lisa apache2 httpd\
      pip python-pip\
      postgres postgresql postgresql-server\
      openssh openssh-server wkhtmltopdf dateutil python-dateutil; do
      # for Disto in . Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
      for Disto in Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
         if [ "$Disto" == "." ]; then
           if [ "$Package" == "wkhtmltopdf" ]; then
             continue
           fi
           opt_e=
         else
           opt_e="-E$Disto"
         fi
         test_run "install $Package $opt_e" "$Package" "$Disto" "diff"
      done
    done

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTDIR/res/openssh-server__Debian.05.test
> apt-get -y install openssh-server
> apt-get -y install openssh-client
> apt-get -y install telnet
> service ssh start
> update-rc.d ssh enable
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
      cat <<EOF >$TESTDIR/res/openssh-server__CentOS7.05.test
> yum -y install openssh-server
> yum -y install openssh-clients
> yum -y install mod_ssl
> yum -y install mod_proxy_html
> yum -y install iptables-services
> yum -y install bind-utils
> yum -y install telnet
> systemctl start sshd
> systemctl enable sshd
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
      cat <<EOF >$TESTDIR/res/openssh-server__CentOS6.05.test
> yum -y install openssh-server
> yum -y install openssh-clients
> yum -y install telnet
> yum -y install mod_ssl
> yum -y install mod_proxy_html
> yum -y install iptables-services
> yum -y install bind-utils
> service sshd start
> chkconfig sshd on
> iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
EOF
    fi

    for Package in openssh-server; do
      for Disto in Ubuntu14 CentOS7; do
         if [ "$Disto" == "." ]; then
           opt_e=
         else
           opt_e="-E$Disto"
         fi
         test_run "install -D $Package $opt_e" "$Package" "$Disto" "diff" "-D"
      done
    done

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTDIR/res/python__Debian.05.test
> apt-get -y install python-wheel
> pip install wheel --upgrade
> apt-get -y install xorg-x11-fonts-Type1
> apt-get -y install xorg-x11-fonts-75dpi
# apt-get -y install python
> apt-get -y install ghostscript
> apt-get -y install libart-2.0-2
> apt-get -y install libcupsfilters1
> apt-get -y install python-unittest2
> apt-get -y install python-utidylib
> apt-get -y install python-vobject
> apt-get -y install python-werkzeug
> apt-get -y install docutils-common
> apt-get -y install docutils-doc
> cd /tmp
> wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-trusty-amd64.deb
# apt-get -y install wkhtmltox-0.12.1_linux-trusty-amd64.deb
> rm -f wkhtmltox-0.12.1_linux-trusty-amd64.deb
EOF
      cat <<EOF >$TESTDIR/res/python__RHEL.05.test
> yum -y install python-wheel
> pip install wheel --upgrade
# yum -y install python
# yum -y install python-setuptools
> pip install setuptools --upgrade
> yum -y install python-virtualenv
> pip install virtualenv
> yum -y install readline
> yum -y install python-psycopg2
> pip install psycopg2 --upgrade
> pip install simplejson
> pip install xlwt
> pip install PyYAML
> pip install gdata
> yum -y install python-ldap
> pip install python-ldap --upgrade
> pip install pytz
# pip install requests
EOF
    fi

    for Package in python; do
      for Disto in Ubuntu14 CentOS7; do
         if [ "$Disto" == "." ]; then
           opt_e=
         else
           opt_e="-E$Disto"
         fi
         test_run "install $Package $opt_e" "$Package" "$Disto" "diff"
      done
    done
}

Z0BUG_setup() {
    if [ "$PWD" != "$RUNDIR" ]; then
      [ -f ./setup.sh ] && rm -f ./setup.sh
      local CWD=$PWD
      cd $RUNDIR
      $RUNDIR/lisa build lisa -q
      cd $CWD
    fi
    [ -f /tmp/lisa.tar.gz ] && rm -f /tmp/lisa.tar.gz
    [ -d /tmp/lisa ] && rm -fR /tmp/lisa
    [ -f "/tmp/wkhtml*"  ] && rm -f /tmp/wkhtml*
    if [ -f "/tmp/lisa*"  ]; then
      echo "Test not executable!"
      echo "Please, remove lisa file/directory from /tmp"
      exit 1
    fi
    if [ -f "/tmp/wkhtml*"  ]; then
      echo "Test not executable!"
      echo "Please, remove wkhtmltopdf file from /tmp"
      exit 1
    fi
}


Z0BUG_init
parseoptest -l$TESTDIR/test_lisa.log "$@" 
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_tjlib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg travisrc "$TDIR $TDIR/.. $TDIR/../travis_emulator $TDIR/../../travis_emulator . .. $HOME/dev")
  if [ -z "$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . $TRAVISLIBDIR
fi
if [ ${opt_oelib:-0} -ne 0 ]; then
  ODOOLIBDIR=$(findpkg odoorc "$TDIR $TDIR/.. $TDIR/../clodoo $TDIR/../../clodoo . .. $HOME/dev")
  if [ -z "$ODOOLIBDIR" ]; then
    echo "Library file odoorc not found!"
    exit 2
  fi
  . $ODOOLIBDIR
fi
UT1_LIST=""
UT_LIST=""
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
