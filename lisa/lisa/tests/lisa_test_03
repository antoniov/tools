#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on lisa
# Check for whatis
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
# Based on template 2.0.0
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script $0 requires bash 4.0+!" && exit 4
if [[ -z $HOME_DEVEL || ! -d $HOME_DEVEL ]]; then
  [[ -d $HOME/odoo/devel ]] && HOME_DEVEL="$HOME/odoo/devel" || HOME_DEVEL="$HOME/devel"
fi
[[ -x $TDIR/../bin/python3 ]] && PYTHON=$(readlink -f $TDIR/../bin/python3) || [[ -x $TDIR/python3 ]] && PYTHON="$TDIR/python3" || PYTHON=$(which python3 2>/dev/null) || PYTHON="python"
[[ -z $PYPATH ]] && PYPATH=$(echo -e "import os,sys\no=os.path\na=o.abspath\nj=o.join\nd=o.dirname\nb=o.basename\nf=o.isfile\np=o.isdir\nC=a('"$TDIR"')\nD='"$HOME_DEVEL"'\nif not p(D) and '/devel/' in C:\n D=C\n while b(D)!='devel':  D=d(D)\nN='venv_tools'\nU='setup.py'\nO='tools'\nH=o.expanduser('~')\nT=j(d(D),O)\nR=j(d(D),'pypi') if b(D)==N else j(D,'pypi')\nW=D if b(D)==N else j(D,'venv')\nS='site-packages'\nX='scripts'\ndef pt(P):\n P=a(P)\n if b(P) in (X,'tests','travis','_travis'):\n  P=d(P)\n if b(P)==b(d(P)) and f(j(P,'..',U)):\n  P=d(d(P))\n elif b(d(C))==O and f(j(P,U)):\n  P=d(P)\n return P\ndef ik(P):\n return P.startswith((H,D,K,W)) and p(P) and p(j(P,X)) and f(j(P,'__init__.py')) and f(j(P,'__main__.py'))\ndef ak(L,P):\n if P not in L:\n  L.append(P)\nL=[C]\nK=pt(C)\nfor B in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n for P in [C]+sys.path+os.environ['PATH'].split(':')+[W,R,T]:\n  P=pt(P)\n  if B==b(P) and ik(P):\n   ak(L,P)\n   break\n  elif ik(j(P,B,B)):\n   ak(L,j(P,B,B))\n   break\n  elif ik(j(P,B)):\n   ak(L,j(P,B))\n   break\n  elif ik(j(P,S,B)):\n   ak(L,j(P,S,B))\n   break\nak(L,os.getcwd())\nprint(' '.join(L))\n"|$PYTHON)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$(readlink -e $d)
    break
  fi
done
[[ -z "$Z0LIBDIR" ]] && echo "Library file z0librc not found in <$PYPATH>!" && exit 72
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
[[ -z "$Z0TLIBDIR" ]] && echo "Library file z0testrc not found!" && exit 72
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

# DIST_CONF=$(findpkg ".z0tools.conf" "$PYPATH")
# TCONF="$HOME/.z0tools.conf"
CFG_init "ALL"
link_cfg_def
link_cfg $DIST_CONF $TCONF
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "DIST_CONF=$DIST_CONF" && echo "TCONF=$TCONF"
get_pypi_param ALL
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"

__version__=2.0.0.3

test_run() {
# test_run(msg,package,disto,cmd)
    # set -x #debug
    TPRODUCT="$RUNDIR/lisa -T"
    local msg="$1"
    local Package="$2"
    local Disto="$3"
    local cmd="$4"
    local FH=
    local opt_e="-E$Disto"
    opt_ij=
    if [ "$Disto" == "." ]; then
        local FH=$Real_FH
        local Disto=$Real_DISTO
        local opt_e=
    elif [ "$Disto" == "Ubuntu12" -o "$Disto" == "Ubuntu14" ]; then
      local FH="Debian"
    elif [ "$Disto" == "CentOS6" -o "$Disto" == "CentOS7" ]; then
      local FH="RHEL"
    fi
    if [ "$Package" == "httpd" ]; then
      if [ "$Disto" == "Ubuntu12" -o "$Disto" == "Ubuntu14" ]; then
        local Package="apache2"
      fi
    elif [ "$Package" == "apache2" ]; then
      if [ "$Disto" == "CentOS6" -o "$Disto" == "CentOS7" ]; then
        local Package="httpd"
      fi
    elif [ "$Package" == "mysql" ]; then
      if [ "$Disto" == "CentOS7" ]; then
         local Package="mariadb"
      else
        local Package="mysql-server"
      fi
    elif [ "$Package" == "mariadb" -o "$Package" == "mariadb-server" ]; then
      if [ "$Disto" == "CentOS6" -o "$FH" == "Debian" ]; then
        local Package="mysql-server"
      fi
    elif [ "$Package" == "php" -a "$FH" == "Debian" ]; then
      local Package="php5"
    elif [ "$Package" == "php5" -a "$FH" == "RHEL" ]; then
      local Package="php"
    elif [ "$Package" == "openssh" ]; then
      local Package="openssh-server"
    elif [ "$Package" == "postgresql-server" ]; then
      opt_ij="-g"
    fi
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $TESTDIR/res/${Package}__${Disto}.03.test ]; then
        TESTOUT=$TESTDIR/res/${Package}__${Disto}.03.test
      elif [ -f $TESTDIR/res/${Package}__${FH}.03.test ]; then
        TESTOUT=$TESTDIR/res/${Package}__${FH}.03.test
      elif [ -f $TESTDIR/res/${Package}.03.test ]; then
        TESTOUT=$TESTDIR/res/${Package}.03.test
      else
        TESTOUT=
        echo "File test comparison ${Package}__${Disto} not found!"
      fi
      rm -f $TESTDIR/lisa.out
      eval $TPRODUCT $opt_e $opt_ij whatis $2>$TESTDIR/lisa.out
    fi
    # set +x #debug
    ci-test "$msg" "$TESTOUT" "$TESTDIR/lisa.out" "$cmd"
    return $s
}

test_01() {
if [ ${opt_dry_run:-0} -eq 0 ]; then
  rm -f $TESTDIR/res/*.03.test
  cat <<EOF >$TESTDIR/res/lisa.03.test
EOF
echo "lisa (by wget)($RUNDIR/lisa -V)">>$TESTDIR/res/lisa.03.test
  cat <<EOF >$TESTDIR/res/LAMP__Debian.03.test
build-essential (by apt-get)
libffi-dev (by apt-get)
libssl-dev (by apt-get)
python-dev (by apt-get)
python-openssl (by apt-get)
urllib3 (by pip)
cryptography (by pip)
pyOpenSSL (by apt-get/pip)
idna (by pip)
certifi (by pip)
openssh-server (by apt-get)
- TCP port 22
apache2 (by apt-get)(apachectl -v)
- TCP port 80
- TCP port 443
mysql-server (by apt-get)(mysql --version)
postgresql (by apt-get)(psql --version)
php5 (by apt-get)(php5 -v)
python (by apt-get)(python --version)
vim (by apt-get)
EOF
  cat <<EOF >$TESTDIR/res/LAMP__CentOS6.03.test
epel-release (by yum)
yum-utils (by yum)
openssl-devel (by yum)
libffi-devel (by yum)
pyasn1 (by pip)
ndg-httpsclient (by pip)
urllib3 (by pip)
cryptography (by pip)
pyOpenSSL (by yum/pip)
idna (by pip)
certifi (by pip)
openssh-server (by yum)
- TCP port 22
httpd (by yum)(apachectl -v)
- TCP port 80
- TCP port 443
mysql-server (by yum)(mysql --version)
postgresql-server (by yum)(psql --version)
php (by yum)(php -v)
python (by yum)(python --version)
EOF
  cat <<EOF >$TESTDIR/res/LAMP__CentOS7.03.test
epel-release (by yum)
yum-utils (by yum)
redhat-rpm-config (by yum)
libffi-devel (by yum)
openssl-devel (by yum)
python-devel (by yum)
pyasn1 (by pip)
ndg-httpsclient (by pip)
urllib3 (by pip)
cryptography (by pip)
pyOpenSSL (by yum/pip)
idna (by pip)
certifi (by pip)
openssh-server (by yum)
- TCP port 22
httpd (by yum)(apachectl -v)
- TCP port 80
- TCP port 443
mariadb (by yum)(mysql --version)
postgresql-server (by yum)(psql --version)
php (by yum)(php -v)
python (by yum)(python --version)
EOF
  cat <<EOF >$TESTDIR/res/LAMP_security__Debian.03.test
build-essential (by apt-get)
libffi-dev (by apt-get)
libssl-dev (by apt-get)
python-dev (by apt-get)
--ghostscript (by apt-get)
--libart-2.0-2 (by apt-get)
--libcupsfilters1 (by apt-get)
--python-unittest2 (by apt-get)
--python-utidylib (by apt-get)
--python-vobject (by apt-get)
--python-werkzeug (by apt-get)
--docutils-common (by apt-get)
--docutils-doc (by apt-get)
--wkhtmltopdf (by wget)(wkhtmltopdf --version)
python-openssl (by apt-get)
urllib3 (by pip)
cryptography (by pip)
pyOpenSSL (by apt-get/pip)
idna (by pip)
certifi (by pip)
EOF
  cat <<EOF >$TESTDIR/res/LAMP_security__CentOS7.03.test
redhat-rpm-config (by yum)
libffi-devel (by yum)
openssl-devel (by yum)
python-devel (by yum)
--setuptools (by pip)
--python-virtualenv (by yum)
--virtualenv (by pip)
--readline (by yum)
--psycopg2 (by yum/pip)
--simplejson (by pip)
--xlwt (by pip)
--PyYAML (by pip)
--gdata (by pip)
--python-ldap (by pip)
--pytz (by pip)
--requests (by pip)
pyasn1 (by pip)
ndg-httpsclient (by pip)
urllib3 (by pip)
cryptography (by pip)
pyOpenSSL (by yum/pip)
idna (by pip)
certifi (by pip)
EOF
  cat <<EOF >$TESTDIR/res/LAMP_security__CentOS6.03.test
openssl-devel (by yum)
libffi-devel (by yum)
pyasn1 (by pip)
ndg-httpsclient (by pip)
urllib3 (by pip)
cryptography (by pip)
pyOpenSSL (by yum/pip)
idna (by pip)
certifi (by pip)
EOF
  cat <<EOF >$TESTDIR/res/httpd__CentOS7.03.test
httpd (by yum)(apachectl -v)
- TCP port 80
- TCP port 443
--vsftpd (by yum)
--- TCP port 21
EOF
  cat <<EOF >$TESTDIR/res/httpd__CentOS6.03.test
httpd (by yum)(apachectl -v)
- TCP port 80
- TCP port 443
EOF
  cat <<EOF >$TESTDIR/res/apache2.03.test
apache2 (by apt-get)(apachectl -v)
- TCP port 80
- TCP port 443
--vsftpd (by apt-get)
--- TCP port 21
EOF
  cat <<EOF >$TESTDIR/res/pip__Debian.03.test
pip (by apt-get/pip)(pip --version)
--wheel (by apt-get/pip)
EOF
  cat <<EOF >$TESTDIR/res/pip__CentOS7.03.test
pip (by yum/pip)(pip --version)
--wheel (by yum/pip)
EOF
  cat <<EOF >$TESTDIR/res/pip__CentOS6.03.test
pip (by yum/pip)(pip --version)
EOF
  cat <<EOF >$TESTDIR/res/python-pip__Debian.03.test
python-pip (by apt-get/pip)
EOF
  cat <<EOF >$TESTDIR/res/python-pip__CentOS7.03.test
python-pip (by yum/pip)
EOF
  cat <<EOF >$TESTDIR/res/python-pip__CentOS6.03.test
python-pip (by yum/pip)
EOF
  cat <<EOF >$TESTDIR/res/mysql-server__Debian.03.test
mysql-server (by apt-get)(mysql --version)
--libapache2-mod-auth-mysql (by apt-get)
EOF
  cat <<EOF >$TESTDIR/res/mariadb__CentOS7.03.test
mariadb (by yum)(mysql --version)
--mariadb-server (by yum)(mysql --version)
EOF
  cat <<EOF >$TESTDIR/res/mysql-server__CentOS7.03.test
mariadb-server (by yum)(mysql --version)
EOF
  cat <<EOF >$TESTDIR/res/mariadb-server__CentOS7.03.test
mariadb-server (by yum)(mysql --version)
EOF
  cat <<EOF >$TESTDIR/res/mysql-server__CentOS6.03.test
mysql-server (by yum)(mysql --version)
--libapache2-mod-auth-mysql (by yum)
EOF
  cat <<EOF >$TESTDIR/res/postgres__Debian.03.test
postgresql (by apt-get)(psql --version)
--postgresql-client-common (by apt-get)
--postgresql-contrib (by apt-get)
EOF
  cat <<EOF >$TESTDIR/res/postgres__RHEL.03.test
postgresql-server (by yum)(psql --version)
--postgresql-client-common (by yum)
--postgresql-contrib (by yum)
EOF
  cat <<EOF >$TESTDIR/res/postgresql__Debian.03.test
postgresql (by apt-get)(psql --version)
--postgresql-client-common (by apt-get)
--postgresql-contrib (by apt-get)
EOF
  cat <<EOF >$TESTDIR/res/postgresql__RHEL.03.test
postgresql-server (by yum)(psql --version)
--postgresql-client-common (by yum)
--postgresql-contrib (by yum)
EOF
  cat <<EOF >$TESTDIR/res/postgresql-server__Debian.03.test
postgresql (by apt-get)(psql --version)
--postgresql-client-common (by apt-get)
--postgresql-contrib (by apt-get)
--pgadmin3 (by apt-get)
EOF
  cat <<EOF >$TESTDIR/res/postgresql-server__RHEL.03.test
postgresql-server (by yum)(psql --version)
--postgresql-client-common (by yum)
--postgresql-contrib (by yum)
--pgadmin3 (by yum)
EOF
  cat <<EOF >$TESTDIR/res/php__RHEL.03.test
php (by yum)(php -v)
--php-mysql (by yum)
--php-common (by yum)
--php-xml (by yum)
--php-cli (by yum)
EOF
  cat <<EOF >$TESTDIR/res/php5__Debian.03.test
php5 (by apt-get)(php5 -v)
--php5-mysql (by apt-get)
--php5-common (by apt-get)
--php5-xml (by apt-get)
--php5-cli (by apt-get)
EOF
  cat <<EOF >$TESTDIR/res/openssh-server__RHEL.03.test
openssh-server (by yum)
- TCP port 22
--openssh-clients (by yum)(ssh -V)
--mod_ssl (by yum)
--mod_proxy_html (by yum)
--iptables-services (by yum)
--bind-utils (by yum)
EOF
  cat <<EOF >$TESTDIR/res/openssh-server__Debian.03.test
openssh-server (by apt-get)
- TCP port 22
--openssh-client (by apt-get)(ssh -V)
EOF
fi
Real_FH=$(xuname "-f")
x=$(xuname "-v")
v=$(echo $x|awk -F. '{print $1}')
Real_DISTO=$(xuname "-d")$v

for Package in lisa LAMP LAMP_security apache2 httpd pip python-pip\
 mysql mysql-server mariadb mariadb-server\
 postgres postgresql postgresql-server php php5\
 openssh openssh-server; do
  for Disto in . Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
     if [ "$Disto" == "." ]; then
       opt_e=
     else
       opt_e="-E$Disto"
     fi
     test_run "whatis $Package $opt_e" "$Package" "$Disto" "diff"
  done
done
}

Z0BUG_init
parseoptest -l$TESTDIR/test_lisa.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts
for p in z0librc odoorc travisrc zarrc z0testrc; do
  if [[ -f $RUNDIR/$p ]]; then
    [[ $p == "z0librc" ]] && Z0LIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "odoorc" ]] && ODOOLIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "travisrc" ]] && TRAVISLIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "zarrc" ]] && ZARLIB="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "z0testrc" ]] && Z0TLIBDIR="$RUNDIR" && source $RUNDIR/$p
  fi
done


UT1_LIST=""
UT_LIST=""
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
