#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on lisa
# Check for status, version and others
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
# Based on template 2.0.0
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script $0 requires bash 4.0+!" && exit 4
if [[ -z $HOME_DEVEL || ! -d $HOME_DEVEL ]]; then
  [[ -d $HOME/odoo/devel ]] && HOME_DEVEL="$HOME/odoo/devel" || HOME_DEVEL="$HOME/devel"
fi
[[ -x $TDIR/../bin/python3 ]] && PYTHON=$(readlink -f $TDIR/../bin/python3) || [[ -x $TDIR/python3 ]] && PYTHON="$TDIR/python3" || PYTHON=$(which python3 2>/dev/null) || PYTHON="python"
[[ -z $PYPATH ]] && PYPATH=$(echo -e "import os,sys\no=os.path\na=o.abspath\nj=o.join\nd=o.dirname\nb=o.basename\nf=o.isfile\np=o.isdir\nC=a('"$TDIR"')\nD='"$HOME_DEVEL"'\nif not p(D) and '/devel/' in C:\n D=C\n while b(D)!='devel':  D=d(D)\nN='venv_tools'\nU='setup.py'\nO='tools'\nH=o.expanduser('~')\nT=j(d(D),O)\nR=j(d(D),'pypi') if b(D)==N else j(D,'pypi')\nW=D if b(D)==N else j(D,'venv')\nS='site-packages'\nX='scripts'\ndef pt(P):\n P=a(P)\n if b(P) in (X,'tests','travis','_travis'):\n  P=d(P)\n if b(P)==b(d(P)) and f(j(P,'..',U)):\n  P=d(d(P))\n elif b(d(C))==O and f(j(P,U)):\n  P=d(P)\n return P\ndef ik(P):\n return P.startswith((H,D,K,W)) and p(P) and p(j(P,X)) and f(j(P,'__init__.py')) and f(j(P,'__main__.py'))\ndef ak(L,P):\n if P not in L:\n  L.append(P)\nL=[C]\nK=pt(C)\nfor B in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n for P in [C]+sys.path+os.environ['PATH'].split(':')+[W,R,T]:\n  P=pt(P)\n  if B==b(P) and ik(P):\n   ak(L,P)\n   break\n  elif ik(j(P,B,B)):\n   ak(L,j(P,B,B))\n   break\n  elif ik(j(P,B)):\n   ak(L,j(P,B))\n   break\n  elif ik(j(P,S,B)):\n   ak(L,j(P,S,B))\n   break\nak(L,os.getcwd())\nprint(' '.join(L))\n"|$PYTHON)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$(readlink -e $d)
    break
  fi
done
[[ -z "$Z0LIBDIR" ]] && echo "Library file z0librc not found in <$PYPATH>!" && exit 72
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
[[ -z "$Z0TLIBDIR" ]] && echo "Library file z0testrc not found!" && exit 72
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

# DIST_CONF=$(findpkg ".z0tools.config" "$PYPATH")
# TCONF="$HOME/.z0tools.config"
CFG_init "ALL"
link_cfg_def
link_cfg $DIST_CONF $TCONF
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "DIST_CONF=$DIST_CONF" && echo "TCONF=$TCONF"
get_pypi_param ALL
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"

__version__=2.0.2

test_run () {
# test_run(msg,package,disto,cmd)
    TPRODUCT="$RUNDIR/lisa -T"
    local msg="$1"
    local Package="$2"
    local Disto="$3"
    local cmd="$4"
    local FH=
    local opt_e="-E$Disto"
    local opt_ij=
    if [ "$Disto" == "." ]; then
        local FH=$Real_FH
        local Disto=$Real_DISTO
        local opt_e=
    elif [ "$Disto" == "Ubuntu12" -o "$Disto" == "Ubuntu14" ]; then
      local FH="Debian"
    elif [ "$Disto" == "CentOS6" -o "$Disto" == "CentOS7" ]; then
      local FH="RHEL"
    fi
    if [ "$Package" == "httpd" ]; then
      if [ "$FH" == "Debian" ]; then
        local Package="apache2"
      fi
      if [ "$3" != "." ]; then
        opt_ij="-I$Package"
      fi
      # if [ "$cmd" == "status" ]; then
        apachectl -v &>/dev/null
        if [ $? -ne 0 ]; then
          opt_ij=
        fi
      # fi
    elif [ "$Package" == "apache2" ]; then
      if [ "$FH" == "RHEL" ]; then
        local Package="httpd"
      fi
      if [ "$3" != "." ]; then
        opt_ij="-I$Package"
      fi
      # if [ "$cmd" == "status" ]; then
        apachectl -v &>/dev/null
        if [ $? -ne 0 ]; then
          opt_ij=
        fi
      # fi
    elif [ "$Package" == "python" ]; then
       opt_ij="-I$Package -d0"
    fi
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $TESTDIR/res/${Package}__${Disto}.04.test ]; then
        TESTOUT=$TESTDIR/res/${Package}__${Disto}.04.test
      elif [ -f $TESTDIR/res/${Package}__${FH}.04.test ]; then
        TESTOUT=$TESTDIR/res/${Package}__${FH}.04.test
      elif [ -f $TESTDIR/res/${Package}.04.test ]; then
        TESTOUT=$TESTDIR/res/${Package}.04.test
      else
        TESTOUT=
        echo "File test comparison ${Package}__${Disto} not found!"
      fi
      rm -f $TESTDIR/lisa.out
      if [ "$cmd" == "status" ]; then
        eval $TPRODUCT $opt_e status $2 $opt_ij>$TESTDIR/lisa.out
      elif [ "$cmd" == "version" ]; then
        eval $TPRODUCT $opt_e version $2 $opt_ij>$TESTDIR/lisa.out
      fi
    fi
    test_result "$msg" "$TESTOUT" "$TESTDIR/lisa.out" "diff"
    return $s
}

test_01() {
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      rm -f $TESTDIR/res/*.04.test
      x=$(apachectl -v 2>/dev/null|head -n1)
      apachectl -v &>/dev/null
      sts=$?
      if [ -n "$x" -a $sts -eq 0 ]; then
        echo "apache2: installed by apt-get">$TESTDIR/res/apache2.04.test
        echo "httpd: installed by yum">$TESTDIR/res/httpd.04.test
        if [ "$Real_FH" == "Debian" ]; then
          x=$(dpkg -s vsftpd|grep "Version"|head -n1|awk -F: '{print $2}')
        elif [ "$Real_FH" == "RHEL" ]; then
          x=$(yum info vsftpd|grep "Version"|head -n1|awk -F: '{print $2}')
        fi
        x=$(echo $x)
        if [ -n "$x" ]; then
          echo "--vsftpd: installed by apt-get">>$TESTDIR/res/apache2.04.test
          echo "--vsftpd: installed by yum">>$TESTDIR/res/httpd.04.test
        else
          echo "--vsftpd could be installed by apt-get">>$TESTDIR/res/apache2.04.test
          echo "--vsftpd could be installed by yum">>$TESTDIR/res/httpd.04.test
        fi
      else
        echo "apache2 could be installed by apt-get">$TESTDIR/res/apache2.04.test
        echo "httpd could be installed by yum">$TESTDIR/res/httpd.04.test
      fi
      x=$(python --version 2>&1|awk '{print $2}')
      python --version &>/dev/null
      sts=$?
      if [ -n "$x" -a $sts -eq 0 ]; then
        if [ "$Real_FH" == "RHEL" ]; then
          echo "python: installed by yum">$TESTDIR/res/python.04.test
        else
          echo "python: installed by apt-get">$TESTDIR/res/python.04.test
        fi
      else
        if [ "$Real_FH" == "RHEL" ]; then
          echo "python could be installed by yum">$TESTDIR/res/python.04.test
        else
          echo "python could be installed by apt-get">$TESTDIR/res/python.04.test
        fi
      fi
    fi

    for Package in apache2 httpd python; do
      for Disto in . Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
         if [ "$Disto" == "." ]; then
           opt_e=
         else
           opt_e="-E$Disto"
         fi
         if [ "$Disto" == "$Real_DISTO" ]; then
           test_run "status $Package $opt_e" "$Package" "$Disto" "status"
         fi
      done
    done

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      rm -f $TESTDIR/res/*.04.test
      x=$(apachectl -v 2>/dev/null|head -n1)
      apachectl -v &>/dev/null
      sts=$?
      if [ -n "$x" -a $sts -eq 0 ]; then
        if [ "$Real_FH" == "Debian" ]; then
          echo "apache2: $x">$TESTDIR/res/apache2.04.test
        fi
        if [ "$Real_FH" == "RHEL" ]; then
          echo "httpd: $x">$TESTDIR/res/httpd.04.test
        fi
      else
        echo "apache2 should be installed by apt-get">$TESTDIR/res/apache2.04.test
        echo "httpd should be installed by yum">$TESTDIR/res/httpd.04.test
      fi
      if [ "$Real_FH" == "Debian" ]; then
        x=$(dpkg -s vsftpd 2>/dev/null|grep "Version"|head -n1|awk -F: '{print $2}')
      elif [ "$Real_FH" == "RHEL" ]; then
        x=$(yum info vsftpd 2>/dev/null|grep "Version"|head -n1|awk -F: '{print $2}')
      fi
      x=$(echo $x)
      if [ -n "$x" ]; then
        echo "--vsftpd: $x">>$TESTDIR/res/apache2.04.test
        echo "--vsftpd: $x">>$TESTDIR/res/httpd.04.test
      else
        echo "--vsftpd should be installed by apt-get">>$TESTDIR/res/apache2.04.test
        echo "--vsftpd should be installed by yum">>$TESTDIR/res/httpd.04.test
      fi
      x=$(python --version 2>&1)
      sts=$?
      if [ -n "$x" -a $sts -eq 0 ]; then
        echo "python: $x">$TESTDIR/res/python.04.test
        echo "python: $x">$TESTDIR/res/python.04.test
      else
        echo "python: .(python --version)">$TESTDIR/res/python.04.test
        echo "python: .(python --version)">$TESTDIR/res/python.04.test
      fi
    fi

    for Package in apache2 httpd python; do
      for Disto in . Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
         if [ "$Disto" == "." ]; then
           opt_e=
         else
           opt_e="-E$Disto"
         fi
         if [ "$Disto" == "$Real_DISTO" ]; then
           test_run "version $Package $opt_e" "$Package" "$Disto" "version"
         fi
      done
    done
}

Z0BUG_setup() {
    Real_FH=$(xuname "-f")
    x=$(xuname "-v")
    v=$(echo $x|awk -F. '{print $1}')
    Real_DISTO=$(xuname "-d")$v
    export PYTHONWARNINGS="ignore"
}


Z0BUG_init
parseoptest -l$TESTDIR/test_lisa.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts
for p in z0librc odoorc travisrc zarrc z0testrc; do
  if [[ -f $RUNDIR/$p ]]; then
    [[ $p == "z0librc" ]] && Z0LIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "odoorc" ]] && ODOOLIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "travisrc" ]] && TRAVISLIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "zarrc" ]] && ZARLIB="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "z0testrc" ]] && Z0TLIBDIR="$RUNDIR" && source $RUNDIR/$p
  fi
done


UT1_LIST=""
UT_LIST=""
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
