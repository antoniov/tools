#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on lisa
# Check for ALIASes
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script cvt_script requires bash 4.0+!" && exit 4
[[ -d "$HOME/dev" ]] && HOME_DEV="$HOME/dev" || HOME_DEV="$HOME/devel"
PYPATH=$(echo -e "import os,sys;\nTDIR='"$TDIR"';HOME_DEV='"$HOME_DEV"'\nHOME=os.environ.get('HOME');y=os.path.join(HOME_DEV,'pypi');t=os.path.join(HOME,'tools')\ndef apl(l,p,x):\n  d2=os.path.join(p,x,x)\n  d1=os.path.join(p,x)\n  if os.path.isdir(d2):\n   l.append(d2)\n  elif os.path.isdir(d1):\n   l.append(d1)\nl=[TDIR]\nfor x in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n if TDIR.startswith(y):\n  apl(l,y,x)\n elif TDIR.startswith(t):\n  apl(l,t,x)\nl=l+os.environ['PATH'].split(':')\np=set()\npa=p.add\np=[x for x in l if x and x.startswith(HOME) and not (x in p or pa(x))]\nprint(' '.join(p))\n"|python)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

__version__=0.3.2

test_run() {
# test_run(msg package disto cmd)
    TPRODUCT="$RUNDIR/lisa -T"
    local msg="$1"
    local Package=$(echo "$2"|grep -Eo '[^!<=>]*'|head -n1)
    local Disto="$3"
    local cmd="$4"
    local FH=
    local opt_e="-E$Disto"
    if [[ "$Disto" == "." ]]; then
        local FH=$Real_FH
        local Disto=$Real_DISTO
        local opt_e=
    elif [[ $Disto =~ ^Ubuntu ]]; then
        local FH="Debian"
    elif [[ $Disto =~ CentOS ]]; then
        local FH="RHEL"
    fi
    if [[ "$FH" == "RHEL" ]]; then
      TRES=${TEST_RHEL[$Package]}
    elif [[ "$FH" == "Debian" ]]; then
      TRES=${TEST_Debian[$Package]}
    else
      TRES=
    fi
    if [[ -z "$TRES" ]]; then
      if [[ "$Disto" == "Ubuntu12" ]]; then
        TRES=${TEST_Ubuntu12[$Package]}
      elif [[ "$Disto" == "Ubuntu14" ]]; then
        TRES=${TEST_Ubuntu14[$Package]}
      elif [[ "$Disto" == "Ubuntu16" ]]; then
        TRES=${TEST_Ubuntu16[$Package]}
      elif [[ "$Disto" == "Ubuntu18" ]]; then
        TRES=${TEST_Ubuntu18[$Package]}
      elif [[ "$Disto" == "Ubuntu20" ]]; then
        TRES=${TEST_Ubuntu20[$Package]}
      elif [[ "$Disto" == "CentOS7" ]]; then
        TRES=${TEST_CentOS7[$Package]}
      elif [[ "$Disto" == "CentOS6" ]]; then
        TRES=${TEST_CentOS6[$Package]}
      fi
    fi
    if [[ "$cmd" == "realname" ]]; then
      if [[ -z "$TRES" ]]; then
        TRES=$Package
      elif [[ $TRES =~ = ]]; then
        :
      else
        TRES="$2=$TRES"
      fi
    fi
    if [[ ${opt_dry_run:-0} -eq 0 ]]; then
      if [[ "$cmd" == "vfycmd" && -z "$opt_e" ]]; then
        RES=$(eval $RUNDIR/lisa tellme $Package "$cmd")
      else
        RES=$(eval $TPRODUCT $opt_e tellme $2 "$cmd")
      fi
    fi
    ci-test "$msg" "$TRES" "$RES"
    return $s
}

test_01() {
    Real_FH=$(xuname "-f")
    x=$(xuname "-v")
    v=$(echo $x|awk -F. '{print $1}')
    Real_DISTO=$(xuname "-d")$v

    declare -A TEST_Debian TEST_RHEL TEST_CentOS7 TEST_CentOS6 TEST_Ubuntu20 TEST_Ubuntu18 TEST_Ubuntu16 TEST_Ubuntu14 TEST_Ubuntu12
    TEST_CentOS7[LAMP]="LAMP=(LAMP epel-release yum-utils LAMP_security openssh-server httpd mariadb postgresql-server php python)"
    TEST_CentOS6[LAMP]="LAMP=(LAMP epel-release yum-utils LAMP_security openssh-server httpd mysql-server postgresql-server php python)"
    TEST_Debian[LAMP]="LAMP=(LAMP LAMP_security openssh-server apache2 mysql-server postgresql php5 python vim)"
    TEST_RHEL[apache2]="httpd"
    TEST_Debian[httpd]="apache2"
    TEST_CentOS7[mysql]="mariadb"
    TEST_CentOS6[mysql]="mysql-server"
    TEST_CentOS7[mysql-server]="mariadb-server"
    TEST_Debian[mysql]="mysql-server"
    TEST_CentOS6[mariadb]="mysql-server"
    TEST_CentOS6[mariadb-server]="mysql-server"
    TEST_Debian[mariadb]="mysql-server"
    TEST_Debian[mariadb-server]="mysql-server"
    TEST_RHEL[postgres]="postgresql-server"
    TEST_RHEL[postgresql]="postgresql-server"
    TEST_Debian[postgres]="postgresql"
    TEST_Debian[postgresql-server]="postgresql"
    TEST_Debian[php]="php5"
    TEST_RHEL[php5]="php"
    TEST_Debian[openssh]="openssh-server"
    TEST_RHEL[openssh]="openssh-server"
    TEST_Debian[libxml2-python]="python-libxml2"
    TEST_RHEL[python-libxml2]="libxml2-python"

    for Package in lisa LAMP apache2 httpd pip python-pip\
     mysql mysql-server mariadb mariadb-server\
     postgres postgresql postgresql-server php php5\
     openssh openssh-server\
     python-libxml2 libxml2-python; do
      for Disto in . Ubuntu20 Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
         if [ "$Disto" == "." ]; then
           opt_e=
         else
           opt_e="-E$Disto"
         fi
         test_run "realname $Package $opt_e" "$Package" "$Disto" "realname"
      done
    done

    declare -A TEST_Debian TEST_RHEL TEST_CentOS7 TEST_CentOS6 TEST_Ubuntu20 TEST_Ubuntu18 TEST_Ubuntu16 TEST_Ubuntu14 TEST_Ubuntu12
    TEST_Debian[apache2]="apt-get"
    TEST_Debian[httpd]="apt-get"
    TEST_RHEL[apache2]="yum"
    TEST_RHEL[httpd]="yum"
    TEST_Debian[os0]="pip"
    TEST_RHEL[os0]="pip"
    TEST_Debian[odoo]="git"
    TEST_RHEL[odoo]="git"

    for Package in apache2 httpd os0 odoo; do
      for Disto in . Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
         if [ "$Disto" == "." ]; then
           opt_e=
         else
           opt_e="-E$Disto"
         fi
         test_run "installer $Package $opt_e" "$Package" "$Disto" "installer"
      done
    done
    Package=odoo!!pip
    Disto=.
    opt_e=
    TEST_Debian[odoo]="pip"
    TEST_RHEL[odoo]="pip"
    test_run "installer $Package $opt_e" "$Package" "$Disto" "installer"

    declare -A TEST_Debian TEST_RHEL TEST_CentOS7 TEST_CentOS6 TEST_Ubuntu20 TEST_Ubuntu18 TEST_Ubuntu16 TEST_Ubuntu14 TEST_Ubuntu12

    # TODO: adjust test for execution in VENV
    # for Package in lisa; do
    #   for Disto in . Ubuntu14 CentOS7 Ubuntu12 CentOS6; do
    #      if [ "$Disto" == "." ]; then
    #        opt_e=
    #        TEST_Debian[lisa]="/usr/bin/lisa -V"
    #        TEST_RHEL[lisa]="/usr/bin/lisa -V"
    #      else
    #        opt_e="-E$Disto"
    #        TEST_Debian[lisa]="$RUNDIR/lisa -V"
    #        TEST_RHEL[lisa]="$RUNDIR/lisa -V"
    #      fi
    #      test_run "vfycmd $Package $opt_e" "$Package" "$Disto" "vfycmd"
    #   done
    # done
}

Z0BUG_init
parseoptest -l$TESTDIR/test_lisa.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts


UT1_LIST=""
UT_LIST=""
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
