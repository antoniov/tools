Help on module os0core:

NAME
    os0core

FILE
    /opt/odoo/dev/pypi/os0/os0/os0core.py

DESCRIPTION
    !@package docstring
    OS routines for Linux, OpenVMS and Windows
    
    This module expands standard os.py module.
    os0 is platform independent and can run on Linux, OpenVMS and Linux.
    See http://www.zeroincombenze.eu about os differences.
    
    This exports:
      - osx.setlfilename set local filename from URI (linux) filename
    
    URI filename conversion rules
    Case                Linux              Windows            OpenVMS
    Simple file         myfile.ext         myfile.ext         myfile.ext
    Abs pathname        /root/myfile.ext   oot\myfile.ext   [root]myfile.ext
    Rel pathname        lib/myfile.ext     lib\myfile.ext     [.lib]myfile.ext
    CWD pathname        ./myfile.ext       .\myfile.ext       []myfile.ext
    Updir pathname      ../myfile.ext      ..\myfile.ext      [-]myfile.ext
    Root file           /myfile.ext        \myfile.ext        [000000]myfile.ext
    dotted pathname     /u/os.1.0/a.b.c    \u\os.1.0/a.b.c    [u.os^.1^.0]a^.^.b.c
    hidden/leading dot  .myfile            .myfile            .myfile ??
    
    executable          myfile             myfile.exe         myfile.exe
    command file        myfile             myfile.bat         myfile.com
    directory           mydir/             mydir              mydir.DIR
    
    dev null            /dev/null          nul                NL0:
    dev/disk/myfile     /dev/disk/myfile   c:\myfile          disk:[000000]myfile
    system disk         /c/temp/myfile     c:       emp\myfile     c:[temp]myfile
    
    Notes:
    1.URL username (user@) is not supported by this version
    2.URL port number o service (http: ftp:) is not supported by this version
    3.URL server domain (//server) is not supported by this version
    4.URL character encoding (%%20) is not supported by this version
    5.Linux has not disk device in pathname; in order to manager Windows and
      OpenVMS devices here is used /dev/disk where disk may be a letter in Windows
      or a name in OpenVMS.
      Both Windows and OpenVMS use colon (:) at the end of disk device in local
      pathname (see last but one example above)
    6.Here is also implemented a brief form for disk device, if exist on hosting
      machine
      Brief form is /dev/pathname like /c/windows/ or /sys$sysdevice/sys0/
      This brief form may be not universal translatable (see last example above)
    7.Updir (..) may be recursive -> ../../myfile -> ..\..\myfile -> [-.-]myfile
    8.Home dir (~/myfile) is no supported by this version
    9.OpenVMS logical names use dollar sign, such as sys$sysdevice;
      in Linux dollar start a macro
      Need to verify about some trouble
    10.OpenVMS files have version; syntax is 'myfile.exe;ver' where ';ver'
       can be omitted
       No any other OS has this feature, so in version of module there is no
       support for filename version

CLASSES
    Os0
    
    class Os0
     |  Methods defined here:
     |  
     |  __init__(self, doinit=False)
     |      Module initialization
     |  
     |  extract_device(self, filename)
     |      Extract device name form path name (Windows and OpenVMS)
     |  
     |  muteshell(self, cmd, simulate=False, tlog=False, keepout=False)
     |      Execute script file using OS shell and redirect output into file
     |      @simulate:        if true, simulate command without execute it
     |      @tlog:            class object with wlog method to trace; may be null
     |      @keepout:         if true, do not delete redirect output file
     |                        (ignored if simulate)
     |  
     |  nakedname(self, fn)
     |      Return nakedename (without extension)
     |  
     |  set_debug_mode(self, dbg_mode=None)
     |      Set debug mode for tracelog
     |  
     |  set_logger(self, file_log, new=False, echo=False)
     |      Set up python logger
     |      @file_log:        filename with or w/o path
     |      @new:             if True, create a new empty tracelog file
     |      @echo:            echo message onto console
     |  
     |  set_tlog_file(self, filename, new=False, dir4debug=None, echo=False)
     |      Set tracelog filename
     |      If filename has not path, path is set to
     |      /var/log for Poisx/Linux, otherwise homedir
     |      @filename:        filename with or w/o path
     |      @new:             if True, create a new empty tracelog file
     |      @echo:            echo message onto console
     |  
     |  setlfilename(self, filename, cnv_type=None)
     |      Convert URI name into local filename
     |  
     |  setlfn_linux(self, filename, cnv_type)
     |      Posix/Linux local filename
     |  
     |  setlfn_vms(self, filename, cnv_type)
     |      OpenVMs local filename
     |  
     |  setlfn_win(self, filename, cnv_type)
     |      Windows local filename
     |  
     |  str2bool(self, t, dflt)
     |      Convert text to bool
     |  
     |  trace_debug(self, *args)
     |      Likw wlog but only if debug mode is active
     |  
     |  trace_msg(self, txt, dbg_mode=None)
     |  
     |  wlog(self, *args)
     |      Write a log/debug message onto tracelog file
     |  
     |  wlog1(self, *args)
     |      Write a log/debug message onto tracelog file
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  version

DATA
    __version__ = '1.0.1'

VERSION
    1.0.1


