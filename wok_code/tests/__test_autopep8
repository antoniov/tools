#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on devel-tools
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
# Based on template 2.0.0
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script $0 requires bash 4.0+!" && exit 4
if [[ -z $HOME_DEVEL || ! -d $HOME_DEVEL ]]; then
  [[ -d $HOME/odoo/devel ]] && HOME_DEVEL="$HOME/odoo/devel" || HOME_DEVEL="$HOME/devel"
fi
[[ -x $TDIR/../bin/python3 ]] && PYTHON=$(readlink -f $TDIR/../bin/python3) || [[ -x $TDIR/python3 ]] && PYTHON="$TDIR/python3" || PYTHON=$(which python3 2>/dev/null) || PYTHON="python"
[[ -z $PYPATH ]] && PYPATH=$(echo -e "import os,sys\no=os.path\na=o.abspath\nj=o.join\nd=o.dirname\nb=o.basename\nf=o.isfile\np=o.isdir\nC=a('"$TDIR"')\nD='"$HOME_DEVEL"'\nif not p(D) and '/devel/' in C:\n D=C\n while b(D)!='devel':  D=d(D)\nN='venv_tools'\nU='setup.py'\nO='tools'\nH=o.expanduser('~')\nT=j(d(D),O)\nR=j(d(D),'pypi') if b(D)==N else j(D,'pypi')\nW=D if b(D)==N else j(D,'venv')\nS='site-packages'\nX='scripts'\ndef pt(P):\n P=a(P)\n if b(P) in (X,'tests','travis','_travis'):\n  P=d(P)\n if b(P)==b(d(P)) and f(j(P,'..',U)):\n  P=d(d(P))\n elif b(d(C))==O and f(j(P,U)):\n  P=d(P)\n return P\ndef ik(P):\n return P.startswith((H,D,K,W)) and p(P) and p(j(P,X)) and f(j(P,'__init__.py')) and f(j(P,'__main__.py'))\ndef ak(L,P):\n if P not in L:\n  L.append(P)\nL=[C]\nK=pt(C)\nfor B in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n for P in [C]+sys.path+os.environ['PATH'].split(':')+[W,R,T]:\n  P=pt(P)\n  if B==b(P) and ik(P):\n   ak(L,P)\n   break\n  elif ik(j(P,B,B)):\n   ak(L,j(P,B,B))\n   break\n  elif ik(j(P,B)):\n   ak(L,j(P,B))\n   break\n  elif ik(j(P,S,B)):\n   ak(L,j(P,S,B))\n   break\nak(L,os.getcwd())\nprint(' '.join(L))\n"|$PYTHON)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$(readlink -e $d)
    break
  fi
done
[[ -z "$Z0LIBDIR" ]] && echo "Library file z0librc not found in <$PYPATH>!" && exit 72
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
[[ -z "$Z0TLIBDIR" ]] && echo "Library file z0testrc not found!" && exit 72
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

# DIST_CONF=$(findpkg ".z0tools.conf" "$PYPATH")
# TCONF="$HOME/.z0tools.conf"
CFG_init "ALL"
link_cfg_def
link_cfg $DIST_CONF $TCONF
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "DIST_CONF=$DIST_CONF" && echo "TCONF=$TCONF"
get_pypi_param ALL
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"

__version__=2.0.1


test_01() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_01
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    TEST2P8=$TESTDIR/res/$TESTFN.2p8
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat << EOF > $TEST2P8
#
a:
    \$name =
    [0]:   A
    [6.1]: a
c:
    class \$name
    [0]:    my_class
    [8.0]:  MyClass
    [10.0]: MyClass
EOF
        cat <<EOF >$TESTSRC
from openerp.osv import orm, fields
A = 1
B = A
class my_class(osv.osv):
    pass

EOF
    fi
    # Validate against Odoo 6.1
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields
a = 1
B = A
class my_class(osv.osv):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b6.1 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b6.1 $TESTSRC -o $TESTOUT" "$TESTRES" "$TESTOUT" "diff"
    # Validate against Odoo 7.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields
a = 1
B = A
class my_class(orm.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b7.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b7.0 $TESTSRC -o $TESTOUT" "$TESTRES" "$TESTOUT" "diff"
    # Validate against Odoo 8.0 -u
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields
a = 1
B = A
class MyClass(orm.Model):
    pass
EOF
        $RUNDIR/topep8 -qAANu -F6.1 -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AANu -F6.1 -b8.0 $TESTSRC -o $TESTOUT" "$TESTRES" "$TESTOUT" "diff"
    # Validate against Odoo 8.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b8.0 $TESTSRC -o $TESTOUT" "$TESTRES" "$TESTOUT" "diff"
    # Validate against Odoo 9.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b9.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b9.0 $TESTSRC -o $TESTOUT" "$TESTRES" "$TESTOUT" "diff"
    # Validate against Odoo 10.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from odoo import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b10.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 11.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
from odoo import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b11.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b11.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 12.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
from odoo import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b12.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b12.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
}


test_02() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_02
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    TEST2P8=$TESTDIR/res/$TESTFN.2p8
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TEST2P8
#
a:
    \$name =
    [0]:   A
    [6.1]: a
c:
    class \$name
    [6.1]:    my_class
    [8.0]: MyClass
EOF
        cat <<EOF >$TESTSRC
# -*- coding: utf-8 -*-
from odoo import models, fields

A = 1
B = A

class MyClass(models.Model):
EOF
    fi
    # Validate against Odoo 6.1
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields

a = 1
B = A

class my_class(osv.osv):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b6.1 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b6.1" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 7.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields

a = 1
B = A

class my_class(orm.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b7.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b7.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 8.0 -u
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields

a = 1
B = A

class MyClass(orm.Model):
EOF
        $RUNDIR/topep8 -qAANu -F10.0 -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AANu -F10.0 -b8.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 8.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b8.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 9.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b9.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b9.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 10.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from odoo import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b10.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 11.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
from odoo import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b11.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b11.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 12.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
from odoo import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -b12.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -b12.0" "$TESTOUT" "$TESTRES" "diff"
}


test_03() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_03
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
# (C) OpenERP (http://openerp.com)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).
#
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
# (C) Odoo (https://odoo.com)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).
#
EOF
        $RUNDIR/topep8 -qAA -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -b10.0 'odoo.com'" "$TESTOUT" "$TESTRES" "diff"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
# (C) OpenERP (http://openerp.com)
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
# (C) Odoo (https://odoo.com)
#
# License LGPL-3.0 or later (https://www.gnu.org/licenses/lgpl).
#
EOF
        $RUNDIR/topep8 -qAA -Ggpl -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -Ggpl -b10.0 'odoo.com'" "$TESTOUT" "$TESTRES" "diff"
}


test_04() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_04
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
    einv_type_model = self.env['italy.ade.invoice.type']
EOF
        # OCA Italy changed e-invoice document type
        # from fatturapa.document_type (in fatturapa) to fiscal.document.type
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
    einv_type_model = self.env['fiscal.document.type']
EOF
        $RUNDIR/topep8 -qAAN -b10.0 -Rto_oca $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -b10.0 -Rto_oca 'italy.ade.invoice.type'" "$TESTOUT" "$TESTRES" "diff"
    # Reverse test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        $RUNDIR/topep8 -qAAN -b10.0 -Rto_zero $TESTOUT -o $TESTOUT
    fi
    test_result "topep8 -AAN -b10.0 -Rto_zero 'italy.ade.invoice.type'" "$TESTRES" "$TESTOUT" "diff"
    #
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
from odoo.addons.l10n_it_fatturapa.models.account import RELATED_DOCUMENT_TYPES
    einv_type_model = self.\\
        env['fiscal.document.type']
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from odoo.addons.l10n_it_einvoice_base.models.account import RELATED_DOCUMENT_TYPES
    einv_type_model = self.\\
        env['italy.ade.invoice.type']
EOF
        $RUNDIR/topep8 -qAA -b10.0 -Rto_zero $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -b10.0 -Rto_zero '\\'" "$TESTOUT" "$TESTRES" "diff"
}


test_05() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_05
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
    name = fields.Char()
    date = fields.Date('Date')
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
    _columns = {
        'name': fields.char(),
        'date': fields.date('Date'),
    }
EOF
        $RUNDIR/topep8 -qAA -F10.0 -b7.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -F10.0 -b7.0 'fields'" "$TESTOUT" "$TESTRES" "diff"
    #
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
    _columns = {
        'name': fields.char(),
        'date': fields.date('Date'),
    }
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-

    name = fields.char()
    date = fields.date('Date')
EOF
        $RUNDIR/topep8 -qAA -F7.0 -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -F7.0 -b10.0 'fields'" "$TESTOUT" "$TESTRES" "diff"
}


Z0BUG_setup() {
    [[ ! -d $TESTDIR/res ]] && mkdir $TESTDIR/res
    $RUNDIR/build_cmd $RUNDIR/to_pep8.py
}


Z0BUG_init
parseoptest -l$TESTDIR/test_wok_code.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts
for p in z0librc odoorc travisrc zarrc z0testrc; do
  if [[ -f $RUNDIR/$p ]]; then
    [[ $p == "z0librc" ]] && Z0LIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "odoorc" ]] && ODOOLIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "travisrc" ]] && TRAVISLIBDIR="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "zarrc" ]] && ZARLIB="$RUNDIR" && source $RUNDIR/$p
    [[ $p == "z0testrc" ]] && Z0TLIBDIR="$RUNDIR" && source $RUNDIR/$p
  fi
done


UT1_LIST=""
UT_LIST=""
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
