#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on travis emulator
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../.. $HOME/dev $HOME/tools ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  elif [ -d $d/z0lib ] && [ -e $d/z0lib/z0librc ]; then
    . $d/z0lib/z0librc
    Z0LIBDIR=$d/z0lib
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $HOME/tools/zerobug $HOME/dev ${PYPATH//:/ } . .." "zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.1.17


#//Only human upgradable code/
test_01() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_cvt_01
    TESTSRC=$TESTDIR/res/$TESTFN
    TESTRES=$TESTDIR/res/$TESTFN.test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTSRC
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs \$@
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
EOF
      cat <<EOF >$TESTRES
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
PYPATH=\$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs "\$@"
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
EOF
      chmod +x $TESTSRC
      $RUNDIR/cvt_script -kqwy $TESTSRC
    fi
    test_result "cvt_script $TESTSRC" "$TESTSRC" "$TESTRES" "diff"
}

test_02() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_cvt_02
    TESTSRC=$TESTDIR/res/$TESTFN
    TESTRES=$TESTDIR/res/$TESTFN.test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTSRC
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs \$@
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
EOF
      cat <<EOF >$TESTRES
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
PYPATH=\$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
ODOOLIBDIR=\$(findpkg odoorc "\$TDIR \$TDIR/.. \$HOME/tools/clodoo \$HOME/dev \${PYPATH//:/ } . .." "clodoo")
if [ -z "\$ODOOLIBDIR" ]; then
  echo "Library file odoorc not found!"
  exit 2
fi
. \$ODOOLIBDIR

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs "\$@"
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
EOF
      chmod +x $TESTSRC
      $RUNDIR/cvt_script -kqwy -O $TESTSRC
    fi
    test_result "cvt_script -O $TESTSRC" "$TESTSRC" "$TESTRES" "diff"
}

test_03() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_cvt_03
    TESTSRC=$TESTDIR/res/$TESTFN
    TESTRES=$TESTDIR/res/$TESTFN.test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTSRC
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs \$@
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
EOF
      cat <<EOF >$TESTRES
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
PYPATH=\$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TRAVISLIBDIR=\$(findpkg travisrc "\$TDIR \$TDIR/.. \$HOME/tools/travis_emulator \$HOME/dev \${PYPATH//:/ } . .." "travis_emulator")
if [ -z "\$TRAVISLIBDIR" ]; then
  echo "Library file travisrc not found!"
  exit 2
fi
. \$TRAVISLIBDIR

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs "\$@"
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
EOF
      chmod +x $TESTSRC
      $RUNDIR/cvt_script -kqwy -J $TESTSRC
    fi
    test_result "cvt_script -J $TESTSRC" "$TESTSRC" "$TESTRES" "diff"
}

test_04() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_cvt_04
    TESTSRC=$TESTDIR/res/$TESTFN
    TESTRES=$TESTDIR/res/$TESTFN.test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTSRC
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs \$@
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
EOF
      cat <<EOF >$TESTRES
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
PYPATH=\$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
ZARLIB=\$(findpkg zarrc "\$TDIR \$TDIR/.. \$HOME/tools/zar \$HOME/dev \${PYPATH//:/ } . ..")
if [ -z "\$ZARLIB" ]; then
  echo "Library file zarrc not found!"
  exit 2
fi
. \$ZARLIB

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs "\$@"
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
EOF
      chmod +x $TESTSRC
      $RUNDIR/cvt_script -kqwy -Z $TESTSRC
    fi
    test_result "cvt_script -Z $TESTSRC" "$TESTSRC" "$TESTRES" "diff"
}

test_05() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_cvt_05
    TESTSRC=$TESTDIR/res/$TESTFN
    TESTRES=$TESTDIR/res/$TESTFN.test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTSRC
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs \$@
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi

Z0BUG_init
parseoptest -l\$TESTDIR/test_wok_code.log "\$@"
sts=\$?
if [ \$sts -ne 127 ]; then
  exit \$sts
fi
UT1_LIST=""
UT_LIST=""
if [ "\$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "\$UT1_LIST" "\$UT_LIST"
sts=\$?
if [ "\$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit \$sts
EOF
      cat <<EOF >$TESTRES
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
PYPATH=\$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)
Z0TLIBDIR=\$(findpkg z0testrc "\$TDIR \$TDIR/.. \$HOME/tools/zerobug \$HOME/dev \${PYPATH//:/ } . .." "zerobug")
if [ -z "\$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. \$Z0TLIBDIR
Z0TLIBDIR=\$(dirname \$Z0TLIBDIR)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs "\$@"
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi

Z0BUG_init
parseoptest -l\$TESTDIR/test_UNKNOWN.log "\$@"
sts=\$?
if [ \$sts -ne 127 ]; then
  exit \$sts
fi

UT1_LIST=""
UT_LIST=""
if [ "\$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "\$UT1_LIST" "\$UT_LIST"
sts=\$?
if [ "\$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit \$sts
EOF
      chmod +x $TESTSRC
      $RUNDIR/cvt_script -kqwy -U $TESTSRC
    fi
    test_result "cvt_script -U $TESTSRC" "$TESTSRC" "$TESTRES" "diff"
}

test_06() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_cvt_06
    TESTSRC=$TESTDIR/res/$TESTFN
    TESTRES=$TESTDIR/res/$TESTFN.test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTSRC
#! /bin/bash
# -*- coding: utf-8 -*-
# Example of script
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs \$@
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi

do_something
EOF
      cat <<EOF >$TESTRES
#! /bin/bash
# -*- coding: utf-8 -*-
# Example of script
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
PYPATH=\$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
ODOOLIBDIR=\$(findpkg odoorc "\$TDIR \$TDIR/.. \$HOME/tools/clodoo \$HOME/dev \${PYPATH//:/ } . .." "clodoo")
if [ -z "\$ODOOLIBDIR" ]; then
  echo "Library file odoorc not found!"
  exit 2
fi
. \$ODOOLIBDIR
TRAVISLIBDIR=\$(findpkg travisrc "\$TDIR \$TDIR/.. \$HOME/tools/travis_emulator \$HOME/dev \${PYPATH//:/ } . .." "travis_emulator")
if [ -z "\$TRAVISLIBDIR" ]; then
  echo "Library file travisrc not found!"
  exit 2
fi
. \$TRAVISLIBDIR
ZARLIB=\$(findpkg zarrc "\$TDIR \$TDIR/.. \$HOME/tools/zar \$HOME/dev \${PYPATH//:/ } . ..")
if [ -z "\$ZARLIB" ]; then
  echo "Library file zarrc not found!"
  exit 2
fi
. \$ZARLIB
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs "\$@"
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi

do_something
EOF
      chmod +x $TESTSRC
      $RUNDIR/cvt_script -kqwy -JOTZ $TESTSRC
    fi
    test_result "cvt_script -JOTZ $TESTSRC" "$TESTSRC" "$TESTRES" "diff"
}

test_07() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_cvt_07
    TESTSRC=$TESTDIR/res/$TESTFN
    TESTRES=$TESTDIR/res/$TESTFN.test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTSRC
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs \$@
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi

Z0BUG_init
parseoptest -l\$TESTDIR/test_wok_code.log "\$@"
sts=\$?
if [ \$sts -ne 127 ]; then
  exit \$sts
fi
UT1_LIST=""
UT_LIST=""
if [ "\$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "\$UT1_LIST" "\$UT_LIST"
sts=\$?
if [ "\$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit \$sts
EOF
      cat <<EOF >$TESTRES
#! /bin/bash
# -*- coding: utf-8 -*-
# Template of wok_code unit test
#
THIS=\$(basename "\$0")
TDIR=\$(readlink -f \$(dirname \$0))
PYPATH=\$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in \$TDIR \$TDIR/.. \$TDIR/../.. \$HOME/dev \$HOME/tools \${PYPATH//:/ } /etc; do
  if [ -e \$d/z0librc ]; then
    . \$d/z0librc
    Z0LIBDIR=\$d
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  elif [ -d \$d/z0lib ] && [ -e \$d/z0lib/z0librc ]; then
    . \$d/z0lib/z0librc
    Z0LIBDIR=\$d/z0lib
    Z0LIBDIR=\$(readlink -e \$Z0LIBDIR)
    break
  fi
done
if [ -z "\$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=\$(findpkg "" "\$TDIR . .." "tests")
RUNDIR=\$(readlink -e \$TESTDIR/..)
Z0TLIBDIR=\$(findpkg z0testrc "\$TDIR \$TDIR/.. \$HOME/tools/zerobug \$HOME/dev \${PYPATH//:/ } . .." "zerobug")
if [ -z "\$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. \$Z0TLIBDIR
Z0TLIBDIR=\$(dirname \$Z0TLIBDIR)

__version__=0.1.17

OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        1            "*>"        -1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=()

parseoptargs "\$@"
if [ "\$opt_version" ]; then
  echo "\$__version__"
  exit 0
fi
if [ \$opt_help -gt 0 ]; then
  print_help "Unit test cvt_script"\
  "(C) 2017-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi

Z0BUG_init
parseoptest -l\$TESTDIR/test_UNKNOWN.log "\$@" "-JOZ"
sts=\$?
if [ \$sts -ne 127 ]; then
  exit \$sts
fi
if [ \${opt_oeLib:-0} -ne 0 ]; then
  ODOOLIBDIR=\$(findpkg odoorc "\$TDIR \$TDIR/.. \$HOME/tools/clodoo \$HOME/dev \${PYPATH//:/ } . .." "clodoo")
  if [ -z "\$ODOOLIBDIR" ]; then
    echo "Library file odoorc not found!"
    exit 2
  fi
  . \$ODOOLIBDIR
fi
if [ \${opt_tjLib:-0} -ne 0 ]; then
  TRAVISLIBDIR=\$(findpkg travisrc "\$TDIR \$TDIR/.. \$HOME/tools/travis_emulator \$HOME/dev \${PYPATH//:/ } . .." "travis_emulator")
  if [ -z "\$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . \$TRAVISLIBDIR
fi
if [ \$opt_zLib -ne 0 ]; then
  ZARLIB=\$(findpkg zarrc "\$TDIR \$TDIR/.. \$HOME/tools/zar \$HOME/dev \${PYPATH//:/ } . ..")
  if [ -z "\$ZARLIB" ]; then
    echo "Library file zarrc not found!"
    exit 2
  fi
  . \$ZARLIB
fi

UT1_LIST=""
UT_LIST=""
if [ "\$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "\$UT1_LIST" "\$UT_LIST"
sts=\$?
if [ "\$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit \$sts
EOF
      chmod +x $TESTSRC
      $RUNDIR/cvt_script -kqwy -JOUZT $TESTSRC
    fi
    test_result "cvt_script -JOUZT $TESTSRC" "$TESTSRC" "$TESTRES" "diff"
}


Z0BUG_setup() {
    :
}
#//Enable.auto.upgrade.code/

Z0BUG_init
parseoptest -l$TESTDIR/test_cvt_code.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi





UT1_LIST=""
UT_LIST=""
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
