#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on devel-tools
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
# Based on template 1.0.5
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script $0 requires bash 4.0+!" && exit 4
HOME_DEV="$HOME/devel"
[[ -x $TDIR/../bin/python ]] && PYTHON=$(readlink -f $TDIR/../bin/python) || [[ -x $TDIR/python ]] && PYTHON="$TDIR/python" || PYTHON="python"
[[ -z $PYPATH ]] && PYPATH=$(echo -e "C='"$TDIR"'\nD='"$HOME_DEV"'\nimport os,sys\no=os.path\na=o.abspath\nj=o.join\nd=o.dirname\nb=o.basename\nf=o.isfile\np=o.isdir\nH=o.expanduser('~')\nT=j(H,'tools')\nR=j(H,'pypi') if b(D)=='venv_tools' else j(H,D,'pypi')\nW=D if b(D)=='venv_tools' else j(D,'venv')\ndef apl(L,P,B):\n if P:\n  if p(j(P,B,B)) and p(j(P,B,B,'scripts')) and f(j(P,B,B,'__init__')):\n   L.append(j(P,B,B))\n   return 1\n  elif j(P,B):\n   L.append(j(P,B))\n   return 1\n return 0\nL=[C]\nif b(C) in ('scripts','tests','travis','_travis'):\n C=a(j(C,'..'))\n L.append(C)\nif b(C)==d(C) and f(j(C,'..','setup.py')):\n C=a(j(C,'..'))\nP=os.environ['PATH'].split(':')\nV= ''\nfor X in sys.path:\n if not p(T) and p(j(X,'tools')):\n  T=j(X,'tools')\n if not V and b(X)=='site-packages':\n  V=X\nfor B in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n if p(j(C,B)):\n  F=apl(L,C,B)\n else:\n  F=0\n  for X in P:\n   if p(j(X,B)):\n    F=apl(L,X,B)\n    break\n  if not F:\n   F=apl(L,V,B)\n  if not F:\n   apl(L,T,B)\nL=L+[os.getcwd()]+P\np=set()\npa=p.add\np=[x for x in L if x and x.startswith((H,D,C)) and not (x in p or pa(x))]\nprint(' '.join(p))\n"|$PYTHON)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$(readlink -e $d)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found in <$PYPATH>!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

DIST_CONF=$(findpkg ".z0tools.conf" "$PYPATH")
TCONF="$HOME/.z0tools.conf"
CFG_init "ALL"
link_cfg_def
link_cfg $DIST_CONF $TCONF
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "DIST_CONF=$DIST_CONF" && echo "TCONF=$TCONF"
get_pypi_param ALL
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"

__version__=1.0.5.1


test_01() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_01
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    TEST2P8=$TESTDIR/res/$TESTFN.2p8
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat << EOF > $TEST2P8
#
a:
    \$name =
    [0]:   A
    [6.1]: a
c:
    class \$name
    [0]:    my_class
    [8.0]:  MyClass
    [10.0]: MyClass
EOF
        cat <<EOF >$TESTSRC
from openerp.osv import orm, fields
A = 1
B = A
class my_class(osv.osv):
    pass

EOF
    fi
    # Validate against Odoo 6.1
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields
a = 1
B = A
class my_class(osv.osv):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b6.1 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b6.1 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 7.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields
a = 1
B = A
class my_class(orm.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b7.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b7.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 8.0 -u
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields
a = 1
B = A
class MyClass(orm.Model):
    pass
EOF
        $RUNDIR/topep8 -qAANu -F6.1 -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AANu -F6.1 -b8.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 8.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b8.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 9.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b9.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b9.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 10.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from odoo import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b10.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 11.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
from odoo import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b11.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b11.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 12.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
from odoo import models, fields
a = 1
B = A
class MyClass(models.Model):
    pass
EOF
        $RUNDIR/topep8 -qAAN -F6.1 -b12.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F6.1 -b12.0 $TESTSRC -o $TESTOUT" "$TESTOUT" "$TESTRES" "diff"
}


test_02() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_02
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    TEST2P8=$TESTDIR/res/$TESTFN.2p8
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TEST2P8
#
a:
    \$name =
    [0]:   A
    [6.1]: a
c:
    class \$name
    [6.1]:    my_class
    [8.0]: MyClass
EOF
        cat <<EOF >$TESTSRC
# -*- coding: utf-8 -*-
from odoo import models, fields

A = 1
B = A

class MyClass(models.Model):
EOF
    fi
    # Validate against Odoo 6.1
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields

a = 1
B = A

class my_class(osv.osv):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b6.1 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b6.1" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 7.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields

a = 1
B = A

class my_class(orm.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b7.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b7.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 8.0 -u
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp.osv import orm, fields

a = 1
B = A

class MyClass(orm.Model):
EOF
        $RUNDIR/topep8 -qAANu -F10.0 -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AANu -F10.0 -b8.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 8.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b8.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 9.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from openerp import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b9.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b9.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 10.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from odoo import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b10.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 11.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
from odoo import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -F10.0 -b11.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -F10.0 -b11.0" "$TESTOUT" "$TESTRES" "diff"
    # Validate against Odoo 12.0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        cat <<EOF >$TESTRES
from odoo import models, fields

a = 1
B = A

class MyClass(models.Model):
EOF
        $RUNDIR/topep8 -qAAN -b12.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -b12.0" "$TESTOUT" "$TESTRES" "diff"
}


test_03() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_03
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
# (C) OpenERP (http://openerp.com)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).
#
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
# (C) Odoo (https://odoo.com)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).
#
EOF
        $RUNDIR/topep8 -qAA -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -b10.0 'odoo.com'" "$TESTOUT" "$TESTRES" "diff"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
# (C) OpenERP (http://openerp.com)
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
# (C) Odoo (https://odoo.com)
#
# License LGPL-3.0 or later (https://www.gnu.org/licenses/lgpl).
#
EOF
        $RUNDIR/topep8 -qAA -Ggpl -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -Ggpl -b10.0 'odoo.com'" "$TESTOUT" "$TESTRES" "diff"
}


test_04() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_04
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
    einv_type_model = self.env['italy.ade.invoice.type']
EOF
        # OCA Italy changed e-invoice document type
        # from fatturapa.document_type (in fatturapa) to fiscal.document.type
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
    einv_type_model = self.env['fiscal.document.type']
EOF
        $RUNDIR/topep8 -qAAN -b10.0 -Rto_oca $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AAN -b10.0 -Rto_oca 'italy.ade.invoice.type'" "$TESTOUT" "$TESTRES" "diff"
    # Reverse test
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        $RUNDIR/topep8 -qAAN -b10.0 -Rto_zero $TESTOUT -o $TESTOUT
    fi
    test_result "topep8 -AAN -b10.0 -Rto_zero 'italy.ade.invoice.type'" "$TESTRES" "$TESTOUT" "diff"
    #
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
from odoo.addons.l10n_it_fatturapa.models.account import RELATED_DOCUMENT_TYPES
    einv_type_model = self.\\
        env['fiscal.document.type']
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
from odoo.addons.l10n_it_einvoice_base.models.account import RELATED_DOCUMENT_TYPES
    einv_type_model = self.\\
        env['italy.ade.invoice.type']
EOF
        $RUNDIR/topep8 -qAA -b10.0 -Rto_zero $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -b10.0 -Rto_zero '\\'" "$TESTOUT" "$TESTRES" "diff"
}


test_05() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_05
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
    name = fields.Char()
    date = fields.Date('Date')
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-
    _columns = {
        'name': fields.char(),
        'date': fields.date('Date'),
    }
EOF
        $RUNDIR/topep8 -qAA -F10.0 -b7.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -F10.0 -b7.0 'fields'" "$TESTOUT" "$TESTRES" "diff"
    #
    if [ ${opt_dry_run:-0} -eq 0 ]; then
        rm -f $TESTOUT
        cat <<EOF >$TESTSRC
    _columns = {
        'name': fields.char(),
        'date': fields.date('Date'),
    }
EOF
        cat <<EOF >$TESTRES
# -*- coding: utf-8 -*-

    name = fields.char()
    date = fields.date('Date')
EOF
        $RUNDIR/topep8 -qAA -F7.0 -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "topep8 -AA -F7.0 -b10.0 'fields'" "$TESTOUT" "$TESTRES" "diff"
}


Z0BUG_setup() {
    [[ ! -d $TESTDIR/res ]] && mkdir $TESTDIR/res
    $RUNDIR/build_cmd $RUNDIR/to_pep8.py
}


Z0BUG_init
parseoptest -l$TESTDIR/test_wok_code.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts


UT1_LIST=""
UT_LIST=""
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts