#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on travis emulator
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
# Based on template 1.0.5
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script $0 requires bash 4.0+!" && exit 4
HOME_DEV="$HOME/devel"
[[ -x $TDIR/../bin/python ]] && PYTHON=$(readlink -f $TDIR/../bin/python) || [[ -x $TDIR/python ]] && PYTHON="$TDIR/python" || PYTHON="python"
[[ -z $PYPATH ]] && PYPATH=$(echo -e "C='"$TDIR"'\nD='"$HOME_DEV"'\nimport os,sys\no=os.path\na=o.abspath\nj=o.join\nd=o.dirname\nb=o.basename\nf=o.isfile\np=o.isdir\nH=o.expanduser('~')\nT=j(H,'tools')\nR=j(H,'pypi') if b(D)=='venv_tools' else j(H,D,'pypi')\nW=D if b(D)=='venv_tools' else j(D,'venv')\ndef apl(L,P,B):\n if P:\n  if p(j(P,B,B)) and p(j(P,B,B,'scripts')) and f(j(P,B,B,'__init__')):\n   L.append(j(P,B,B))\n   return 1\n  elif j(P,B):\n   L.append(j(P,B))\n   return 1\n return 0\nL=[C]\nif b(C) in ('scripts','tests','travis','_travis'):\n C=a(j(C,'..'))\n L.append(C)\nif b(C)==d(C) and f(j(C,'..','setup.py')):\n C=a(j(C,'..'))\nP=os.environ['PATH'].split(':')\nV= ''\nfor X in sys.path:\n if not p(T) and p(j(X,'tools')):\n  T=j(X,'tools')\n if not V and b(X)=='site-packages':\n  V=X\nfor B in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n if p(j(C,B)):\n  F=apl(L,C,B)\n else:\n  F=0\n  for X in P:\n   if p(j(X,B)):\n    F=apl(L,X,B)\n    break\n  if not F:\n   F=apl(L,V,B)\n  if not F:\n   apl(L,T,B)\nL=L+[os.getcwd()]+P\np=set()\npa=p.add\np=[x for x in L if x and x.startswith((H,D,C)) and not (x in p or pa(x))]\nprint(' '.join(p))\n"|$PYTHON)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$(readlink -e $d)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found in <$PYPATH>!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

DIST_CONF=$(findpkg ".z0tools.conf" "$PYPATH")
TCONF="$HOME/.z0tools.conf"
CFG_init "ALL"
link_cfg_def
link_cfg $DIST_CONF $TCONF
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "DIST_CONF=$DIST_CONF" && echo "TCONF=$TCONF"
get_pypi_param ALL
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"

__version__=1.0.7


#
# Modules Tree for tests (* means missed module)
# l10n-italy/l10n_it_base
#   |---- addons/sale
#   |       |---- */sales_team
#   |       |---- addons/account
#   |       |       |---- */base_setup
#   |       |       |---- */product
#   |       |       |---- */analytic
#   |       |       |---- */report (1)
#   |       |       \---- */web_planner
#   |       |---- */procurement
#   |       |---- (1) */report
#   |       \---- */web_tour
#   \---- addons/base (2)
# addons/web
#   \---- (2) addons/base
# unported/deprecated
#            \---- */website
#
test_01() {
    local TRES RES OPTS
    OPTS="-A mod $LCL_OE_ROOT"
    TRES=""
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A mod -R $LCL_OE_ROOT"
    TRES="account,base,l10n_it_base,sale,web"
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A mod $LCL_OE_ROOT/addons,$LCL_OE_PRJPATH"
    TRES="account,base,l10n_it_base,sale,web"
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A mod -R $LCL_OE_ROOT -M account,l10n_it_base,l10n_it_ade"
    TRES="account,l10n_it_base"
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A mod -RE $LCL_OE_ROOT -M account,l10n_it_base,l10n_it_ade"
    TRES="l10n_it_ade"
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A mod -R $LCL_OE_ROOT -B base"
    TRES="l10n_it_base,web"
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"
}

test_02() {
    local TRES RES OPTS
    OPTS="-A dep $LCL_OE_ROOT"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="account,analytic,base,base_setup,l10n_it_base,procurement,product,report,sale,sales_team,web,web_planner,web_tour"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep $LCL_OE_ROOT -R"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="account,analytic,base,base_setup,l10n_it_base,procurement,product,report,sale,sales_team,web,web_planner,web_tour"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep $LCL_OE_ROOT -1"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES=""
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep $LCL_OE_ROOT/addons,$LCL_OE_PRJPATH"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="account,analytic,base,base_setup,l10n_it_base,procurement,product,report,sale,sales_team,web,web_planner,web_tour"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep $LCL_OE_ROOT/addons,$LCL_OE_PRJPATH -M account,l10n_it_base,l10n_it_ade"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="account,analytic,base,base_setup,l10n_it_ade,l10n_it_base,procurement,product,report,sale,sales_team,web_planner,web_tour"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep -1 $LCL_OE_ROOT/addons,$LCL_OE_PRJPATH -M account,l10n_it_base,l10n_it_ade"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="account,analytic,base,base_setup,l10n_it_ade,l10n_it_base,product,report,sale,web_planner"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep $LCL_OE_ROOT -R -B base,sale"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="base,sale"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep $LCL_OE_ROOT/addons -1a -Maccount,sale"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="account,report"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep $LCL_OE_ROOT/addons,$LCL_OE_PRJPATH -PM account,l10n_it_base,l10n_it_ade"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="analytic,base,base_setup,procurement,product,report,sale,sales_team,web_planner,web_tour"
    test_result "od $OPTS" "$TRES" "$RES"
}

test_03() {
    local TRES RES OPTS
    OPTS="-A rev $LCL_OE_ROOT"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="base"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A rev -R $LCL_OE_ROOT"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="base,l10n_it_base,web"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A rev -R $LCL_OE_ROOT -B base"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="base,l10n_it_base,web"
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A rev -1 $LCL_OE_ROOT/addons,$LCL_OE_PRJPATH -B base"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    fi
    TRES="base,l10n_it_base,web"
    test_result "od $OPTS" "$TRES" "$RES"
}

test_04() {
    local TRES RES OPTS
    OPTS="-A jrq -1 $LCL_OE_ROOT/addons,$LCL_OE_PRJPATH -B base"
    TRES="web"
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep -Re $LCL_OE_ROOT"
    TRES="lxml,vatnumber"
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"

    OPTS="-A dep -Rx $LCL_OE_ROOT"
    TRES="wkhtmltox"
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"
}

test_05() {
    local TRES RES OPTS

    cat<<'EOF' >$TESTDIR/odoo_dependencies.log
 0 base
 1  web
-------------------- account (Not installable, missed base_setup,product,analytic,report,web_planner)
-------------------- sale (Not installable, missed sales_team,procurement,report,web_tour)
-------------------- l10n_it_base (Recursive chain)
******************** analytic (Missed dependency of account)
******************** base_setup (Missed dependency of account)
******************** procurement (Missed dependency of sale)
******************** product (Missed dependency of account)
******************** report (Missed dependency of account,sale)
******************** sales_team (Missed dependency of sale)
******************** web_planner (Missed dependency of account)
******************** web_tour (Missed dependency of sale)
EOF
    OPTS="-A tree $LCL_OE_ROOT -R"
    TRES=$(cat $TESTDIR/odoo_dependencies.log)
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"

    cat<<'EOF' >$TESTDIR/odoo_dependencies.log
-------------------- account (Not installable, missed base_setup,product,analytic,report,web_planner)
-------------------- sale (Not installable, missed sales_team,procurement,report,web_tour)
-------------------- l10n_it_base (Recursive chain)
******************** analytic (Missed dependency of account)
******************** base_setup (Missed dependency of account)
******************** procurement (Missed dependency of sale)
******************** product (Missed dependency of account)
******************** report (Missed dependency of account,sale)
******************** sales_team (Missed dependency of sale)
******************** web_planner (Missed dependency of account)
******************** web_tour (Missed dependency of sale)
EOF
    OPTS="-A tree $LCL_OE_ROOT -RE"
    TRES=$(cat $TESTDIR/odoo_dependencies.log)
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"
}

test_06() {
    local TRES RES OPTS
    if [[ ${opt_dry_run:-0} -eq 0 ]]; then
      # Create recursive chain: add module product which depends from sale
      mkdir -p $LCL_OE_ROOT/addons/product
      cat<<'EOF' >$LCL_OE_ROOT/addons/product/__manifest__.py
{
    'depends': ['sale'],
}
EOF
      cat<<'EOF' >$LCL_OE_ROOT/addons/product/__init__.py
# File generated just for test
EOF
    fi
    cat<<'EOF' >$TESTDIR/odoo_dependencies.log
 0 base
 1  web
-------------------- account (Not installable, missed base_setup,analytic,report,web_planner)
-------------------- sale (Not installable, missed sales_team,procurement,report,web_tour)
-------------------- l10n_it_base (Recursive chain)
-------------------- product (Recursive chain)
******************** analytic (Missed dependency of account)
******************** base_setup (Missed dependency of account)
******************** procurement (Missed dependency of sale)
******************** report (Missed dependency of sale,account)
******************** sales_team (Missed dependency of sale)
******************** web_planner (Missed dependency of account)
******************** web_tour (Missed dependency of sale)
EOF
    OPTS="-A tree $LCL_OE_ROOT -R"
    TRES=$(cat $TESTDIR/odoo_dependencies.log)
    [ ${opt_dry_run:-0} -eq 0 ] && RES=$($RUNDIR/odoo_dependencies.py $OPTS)
    test_result "od $OPTS" "$TRES" "$RES"
}

Z0BUG_setup() {
    local VERSION=10.0
    local ODOO_REPO=local/odoo
    LCL_OE_REPOS=l10n_italy
    LCL_OE_PKGNAME=l10n_it_base
    LCL_OE_ROOT=~/devel/odoo/$VERSION
    LCL_OE_PRJPATH=$LCL_OE_ROOT/$LCL_OE_REPOS
    LCL_OE_PKGPATH=$LCL_OE_PRJPATH/$LCL_OE_PKGNAME
    LCL_OE_PKGPATH2=$LCL_OE_ROOT/__unported__/deprecated
    [[ -d $LCL_OE_ROOT ]] && rm -fR $LCL_OE_ROOT
    mkdir -p $LCL_OE_ROOT
    mkdir -p $LCL_OE_ROOT/odoo
    touch $LCL_OE_ROOT/odoo-bin
    mkdir -p $LCL_OE_ROOT/addons
    mkdir -p $LCL_OE_ROOT/addons/base
    mkdir -p $LCL_OE_ROOT/addons/account
    mkdir -p $LCL_OE_ROOT/addons/sale
    mkdir -p $LCL_OE_ROOT/addons/web
    mkdir -p $LCL_OE_PRJPATH
    mkdir -p $LCL_OE_PKGPATH2
    mkdir -p $LCL_OE_PKGPATH
    cat<<'EOF' >$LCL_OE_ROOT/addons/base/__manifest__.py
{
    'depends': [],
}
EOF
    cat<<'EOF' >$LCL_OE_ROOT/addons/base/__init__.py
# File generated just for test
EOF
    cat<<'EOF' >$LCL_OE_PKGPATH/__manifest__.py
{
    'depends': ['base', 'sale'],
    'external_dependencies': {'python': ['vatnumber', 'lxml'],
                              'bin': ['wkhtmltox']}
}
EOF
    cat<<'EOF' >$LCL_OE_PKGPATH/__init__.py
# File generated just for test
EOF
    cat<<'EOF' >$LCL_OE_ROOT/addons/sale/__manifest__.py
{
    'depends': ['sales_team', 'account', 'procurement', 'report', 'web_tour'],
}
EOF
    cat<<'EOF' >$LCL_OE_ROOT/addons/sale/__init__.py
# File generated just for test
EOF
    cat<<'EOF' >$LCL_OE_ROOT/addons/account/__manifest__.py
{
    'depends' : ['base_setup', 'product', 'analytic', 'report', 'web_planner'],
}
EOF
    cat<<'EOF' >$LCL_OE_ROOT/addons/account/__init__.py
# File generated just for test
EOF
    cat<<'EOF' >$LCL_OE_ROOT/addons/web/__manifest__.py
{
    'depends' : ['base'],
}
EOF
    cat<<'EOF' >$LCL_OE_ROOT/addons/web/__init__.py
# File generated just for test
EOF
    cat<<'EOF' >$LCL_OE_PKGPATH2/__manifest__.py
{
    'depends': ['website'],
}
EOF
    cat<<'EOF' >$LCL_OE_PKGPATH2/__init__.py
# File generated just for test
EOF
}

Z0BUG_init
parseoptest -l$TESTDIR/test_wok_code.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts


UT1_LIST=""
UT_LIST=""
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts