#! /bin/bash
#
#__version__=1.0.1.18
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
RDME="README.md"
[[ -f README.rst ]] && RDME="README.rst"
if [[ ! -f $RDME ]]; then
    echo "Missed documentation file README.rst!"
    echo "Please, type:"
    echo "> please docs"
    echo ""
    echo "To supersede this lock use --no-verify switch"
    exit 1
fi
[[ -z "$GIT_NO_CHECK" ]] && GIT_NO_CHECK="^($HOME/tools)\$"
OCB=0
[[ -x ./odoo-bin || -x ./odoo/odoo-bin || -x ./openerp-server || -x ./odoo/openerp-server || -x ./server/openerp-server ]] && OCB=1
if [[ $OCB -ne 0 ]]; then
	  CMD='find ./addons ./odoo ./openerp -maxdepth 3 -type f -not -path "*/.git/*" -not -path "*/docs/*" -not -path "*/__build*" -not -path "*/__pycache__*" -not -path "*/.idea*" -not -path "*/i18n/*" -not -path "*/static/*" \( -name "__manifest__.py" -o -name "__openerp__.py" -o -name "README.rst" -o -name "README.md" \)  2>/dev/null'
else
	  CMD='find ./ -maxdepth 2 -type f -not -path "*/.git/*" -not -path "*/docs/*" -not -path "*/__build*" -not -path "*/__pycache__*" -not -path "*/.idea*" -not -path "*/i18n/*" -not -path "*/static/*" \( -name "__manifest__.py" -o -name "__openerp__.py" -o -name "README.rst" -o -name "README.md" \)  2>/dev/null'
fi
DIRS=$(eval $CMD|xargs dirname|xargs $READLINK -f|sort|uniq|tr "\n" " ")
RDME=""
[[ -f README.md ]] && RDME=README.md
[[ -f README.rst ]] && RDME=README.rst
sts=0
for d in $DIRS; do
    [[ $d =~ $GIT_NO_CHECK ]] && continue
    [[ ! -f $d/README.rst && ! -f $d/README.md ]] && echo -e "Module \e[1m$(basename $d)\e[0m without documentation; missed \e[33m$d/README.rst\e[0m" && sts=1 && continue
    FILES=""
    [[ -n $RDME ]] && FILES=$(find $d -type f -not -path "*/.git/*" -not -path "*/docs/*" -not -path "*/__build*" -not -path "*/__pycache__*" -not -path "*/.idea*" -not -path "*/i18n/*" -not -path "*/static/*" -not -name "*.pyc" -cnewer ./$RDME)
    [[ -n $FILES ]] && echo -e "Detected undocumented files of module \e[1m$(basename $d)\e[0m; type:\n\e[32mcd $d; please docs;\e[0m" && sts=1
done
if [[ -f .travis.yml && ! $PWD =~ $GIT_NO_CHECK ]]; then
    echo -e "\ntravis result:"
    travis summary
    [[ $? -ne 0 ]] && sts=1 && echo -e "\n\e[31mRepository not validated by travis\e[0m\nPlease type:\ntravis"
fi
if [[ $sts -ne 0 ]]; then
    echo ""
    echo "To exclude this control on this repository,"
    echo "add current path to GIT_NO_CHECK global variable."
    echo "i.e. export GIT_NO_CHECK=\"^($PWD)\$\""
    echo ""
    echo "To supersede this lock use --no-verify switch"
fi
exit $sts
