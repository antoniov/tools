#! /bin/bash
# -*- coding: utf-8 -*-
#
# Set Odoo Version in clodo files
# This free software is released under GNU Affero GPL3
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2018 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../.. $HOME/dev $HOME/tools ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  elif [ -d $d/z0lib ] && [ -e $d/z0lib/z0librc ]; then
    . $d/z0lib/z0librc
    Z0LIBDIR=$d/z0lib
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
ODOOLIBDIR=$(findpkg odoorc "$TDIR $TDIR/.. $HOME/tools/clodoo $HOME/dev ${PYPATH//:/ } . .." "clodoo")
if [ -z "$ODOOLIBDIR" ]; then
  echo "Library file odoorc not found!"
  exit 2
fi
. $ODOOLIBDIR
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)

__version__=0.3.7.23


set_ver() {
# set_ver(file odoo_fver db_name [xmlport] [child])
    if [ $opt_verbose -gt 0 ]; then
      echo "set_ver($1 ver=$2 db=$3 port=$4)"
    fi
    if [ -f "$1" ]; then
      local l rem1 rem2 chid lnemod addln prm val sfx prp cup ver fntmp
      local fn odoo_fver db_name xmlport
      fn=$1
      odoo_fver=$2
      if [ -z "$3" ]; then
        db_name=auto
      else
        db_name=$3
      fi
      [ -n "$4" ] && xmlport=$4 || xmlport=8069
      is_child=${5:-1}
      ver=_$odoo_fver
      fntmp=$fn.tmp
      if  [ -f $fntmp ]; then
        rm -f $fntmp
      fi
      addln=
      prp=
      empty=0
      found_lgi_user=0
      found_lgi_pwd=0
      while IFS="#" read -r l rem1; do
        IFS=; read lne rem2 <<<"$l"
        chid=${lne:0:1}
        lnemod="$lne"
        if [[ $lne =~ ^[[:space:]]*$ ]]; then
          :
        elif [ "$chid" == "[" ]; then
          prp=
        else
          IFS== read prm val <<<"$lne"
          # sfx=${prm: -4}
          sfx=_${prm##*_}
          # cup=${prm:0: -4}
          cup=${prm%_*}
          # echo "<<p=$prm; v=$val; x=$prp; s=$sfx; c=$cup>>" #debug
          if [ "$prm" == "oe_version" ]; then
            if [ $is_child -gt 0 ]; then
              lnemod=" "
            else
              lnemod="oe_version=$odoo_fver"
            fi
            # prp=
          elif [ "$prm" == "db_name" ] && [ -n "$db_name" -o $is_child -gt 0 ]; then
            if [ $is_child -gt 0 ]; then
              lnemod=" "
            else
              lnemod="db_name=$db_name"
            fi
            # prp=
          elif [ "$prm" == "login_user" ] && [ -n "$opt_lgiuser" -o $is_child -gt 0 ]; then
            if [ $is_child -gt 0 ]; then
              lnemod=" "
            else
              lnemod="login_user=$opt_lgiuser"
            fi
            found_lgi_user=1
            # prp=
          elif [ "$prm" == "login2_user" -a $is_child -gt 0 ]; then
            lnemod=" "
            # prp=
          elif [ "$prm" == "crypt_password" ] && [ -n "$opt_lgipwd" -o $is_child -gt 0 ]; then
            if [ $is_child -gt 0 ]; then
              lnemod=" "
            else
              lnemod="crypt_password=$opt_lgipwd"
            fi
            found_lgi_pwd=1
            # prp=
          elif [ "$prm" == "login2_password" -a $is_child -gt 0 ]; then
            lnemod=" "
            # prp=
          elif [ "$prm" == "set_passepartout" -a $opt_pp -ne -1 ]; then
            lnemod="set_passepartout=$opt_pp"
            # prp=
          elif [ "$prm" == "$prp" ]; then
            lnemod="  "
          elif [ "$prm" == "xmlrpc_port" ]; then
            if [ $is_child -gt 0 ]; then
              lnemod=" "
            else
              lnemod="xmlrpc_port=$xmlport"
            fi
          elif [ "$sfx" == "$ver" ]; then
            if [  $opt_fix -gt 0 ]; then
              addln="$cup=$val"
            fi
          else
            prp=
          fi
          if [[ $sfx =~ _(11\.0|10\.0|9\.0|8\.0|7\.0) ]]; then
            prp=$cup
            # echo "<<<$prp>>>"
          fi
        fi
        if [ "$lnemod" != "  " ]; then
          if [ -n "$rem1" ]; then
            if [ -n "$lnemod" ]; then
              lnemod="$lnemod #$rem1"
            else
              lnemod="#$rem1"
            fi
          fi
          if [ -n "$rem2" ]; then
            if [ -n "$lnemod" ]; then
              lnemod="$lnemod #$rem2"
            else
              lnemod="#$rem2"
            fi
          fi
          [ $empty -ne 0 -a -z "$lnemod" ] || echo "$lnemod">>$fntmp
          [ -z "$lnemod" ] && empty=1 || empty=0
        fi
        if [ -n "$addln" ]; then
          # echo "$addln"
          echo "$addln">>$fntmp
          empty=0
        fi
        addln=
      done < $fn
      if [ $found_lgi_user -eq 0 -a $is_child -eq 0 -a -n "$opt_lgiuser" ]; then
        lnemod="login_user=$opt_lgiuser"
        echo "$lnemod">>$fntmp
      fi
      if [ $found_lgi_pwd -eq 0 -a $is_child -eq 0 -a -n "$opt_lgipwd" ]; then
        lnemod="crypt_password=$opt_lgipwd"
        echo "$lnemod">>$fntmp
      fi
      if [ -n "$(diff -q $fn $fntmp)" ]; then
        if [ $opt_verbose -gt 0 ]; then
          diff --suppress-common-line -y $fn $fntmp
        fi
        if [ $opt_dry_run -eq 0 ]; then
          mv $fn $fn.bak
          mv $fntmp $fn
        fi
      else
        rm -f $fntmp
      fi
    fi
}


OPTOPTS=(h        D        E        F       f      k      K      m         n           p          q           r           u           V           v)
OPTDEST=(opt_help opt_defn opt_tenv opt_fix opt_fn opt_pp opt_pp opt_multi opt_dry_run opt_lgipwd opt_verbose opt_xmlport opt_lgiuser opt_version opt_verbose)
OPTACTI=(1        1        1        1       "="    0      1      1         1           "="        0           "="         "="         "*>"        "+")
OPTDEFL=(0        0        0        0       ""     -1     -1     -1        0           ""         -1          ""          ""          ""           -1)
OPTMETA=("help"   ""       ""       ""      "file" ""     ""     ""        ""          "passwd"   "quiet"     "port"      "user"      "version"   "verbose")
OPTHELP=("this help"\
 "update default config file"\
 "update test environment config file"\
 "fix value in child files"\
 "set specific filename to set"\
 "reset passepartout"\
 "set passepartout"\
 "multi-version odoo environment"\
 "do nothing (dry-run)"\
 "set odoo crypted password"\
 "silent mode"\
 "set xmprpc port (def=8069)"\
 "set odoo login username"\
 "show version"\
 "verbose mode")
OPTARGS=(odoo_vid db_name)

parseoptargs "$@"
discover_multi
if [ -n "$odoo_vid" ]; then
  odoo_fver=$(build_odoo_param FULLVER $odoo_vid)
  odoo_ver=$(build_odoo_param FULLVER $odoo_vid)
else
  odoo_fver=
  odoo_ver=
fi
if [ -z "$odoo_fver" ]; then
  opt_help=1
fi
if [ "$opt_version" ]; then
  echo "$__version__"
  exit $STS_SUCCESS
fi
if [ $opt_help -gt 0 ]; then
  print_help "Set Odoo version in clodoo configuration files"\
  "(C) 2015-2018 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Linux/dev\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit $STS_SUCCESS
fi
if [ "$odoo_vid" == "v7" ]; then
  confn=$odoo_vid
else
  confn=${odoo_fver//./-}
fi
confn="./confs/$confn"
if [ -n "$opt_lgipwd" ]; then
  opt_lgipwd=${opt_lgipwd//\\!/!}
fi
if [ $opt_defn -ne 0 ]; then
  set_ver $confn $odoo_fver $db_name $opt_xmlport "0"
elif [ -n "$opt_fn" ]; then
  set_ver $opt_fn $odoo_fver $db_name $opt_xmlport "0"
else
  set_ver ./clodoo.conf $odoo_fver $db_name $opt_xmlport "0"
  for f in code/*conf; do
    set_ver $f $odoo_fver $db_name $opt_xmlport "1"
  done
fi
if [ $opt_tenv ]; then
  set_ver ./inv2draft_n_restore.conf $odoo_fver $db_name $opt_xmlport "0"
fi
exit $STS_SUCCESS
