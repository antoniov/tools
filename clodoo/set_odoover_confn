#! /bin/bash
# -*- coding: utf-8 -*-
#
# Set Odoo Version in clodo files
# This free software is released under GNU Affero GPL3
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2017 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib . .. /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
ODOOLIBDIR=$(findpkg odoorc "$TDIR $TDIR/.. $TDIR/../clodoo $TDIR/../../clodoo . .. $HOME/dev /etc")
if [ -z "$ODOOLIBDIR" ]; then
  echo "Library file odoorc not found!"
  exit 2
fi
. $ODOOLIBDIR
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)

__version__=0.1.12


set_ver() {
# set_ver(file odoo_fver db_name [xmlport])
    if [ $opt_verbose -gt 0 ]; then
      echo "set_ver($1 ver=$2 db=$3 port=$4)"
    fi
    local l rem1 rem2 chid lnemod newln prm val sfx prp cup ver fntmp
    local fn odoo_fver db_name xmlport
    fn=$1
    odoo_fver=$2
    if [ -z "$3" ]; then
      db_name=auto
    else
      db_name=$3
    fi
    [ -n "$4" ] && xmlport=$4 || xmlport=8069
    ver=_$odoo_fver
    fntmp=$fn.tmp
    if  [ -f $fntmp ]; then
      rm -f $fntmp
    fi
    newln=
    prp=
    while IFS="#" read -r l rem1; do
      IFS=; read lne rem2 <<<"$l"
      chid=${lne:0:1}
      lnemod="$lne"
      if [[ $lne =~ ^[[:space:]]*$ ]]; then
        :
      elif [ "$chid" == "[" ]; then
        prp=
      else
        IFS== read prm val <<<"$lne"
        # sfx=${prm: -4}
        sfx=_${prm##*_}
        # cup=${prm:0: -4}
        cup=${prm%_*}
        # echo "<<p=$prm; v=$val; x=$prp; s=$sfx; c=$cup>>" #debug
        if [ "$prm" == "oe_version" ]; then
          lnemod="oe_version=$odoo_fver"
          # prp=
        elif [ "$prm" == "db_name" -a -n "$db_name" ]; then
          lnemod="db_name=$db_name"
          # prp=
        elif [ "$prm" == "login_user" -a -n "$opt_lgiuser" ]; then
          lnemod="login_user=$opt_lgiuser"
          # prp=
        elif [ "$prm" == "login_password" -a -n "$opt_lgipwd" ]; then
          lnemod="login_password=$opt_lgipwd"
          # prp=
        elif [ "$prm" == "set_passepartout" -a $opt_pp -ne -1 ]; then
          lnemod="set_passepartout=$opt_pp"
          # prp=
        elif [ "$prm" == "$prp" ]; then
          lnemod="  "
        elif [ "$prm" == "xmlrpc_port" ]; then
          lnemod="xmlrpc_port=$xmlport"
        elif [ "$sfx" == "$ver" ]; then
          newln="$cup=$val"
        else
          prp=
        fi
        if [[ $sfx =~ _(11\.0|10\.0|9\.0|8\.0|7\.0) ]]; then
          prp=$cup
          # echo "<<<$prp>>>"
        fi
      fi
      if [ "$lnemod" != "  " ]; then
        if [ -n "$rem1" ]; then
          if [ -n "$lnemod" ]; then
            lnemod="$lnemod #$rem1"
          else
            lnemod="#$rem1"
          fi
        fi
        if [ -n "$rem2" ]; then
          if [ -n "$lnemod" ]; then
            lnemod="$lnemod #$rem2"
          else
            lnemod="#$rem2"
          fi
        fi
        echo "$lnemod">>$fntmp
      fi
      if [ -n "$newln" ]; then
        # echo "$newln"
        echo "$newln">>$fntmp
      fi
      newln=
    done < $fn
    if [ -n "$(diff -q $fn $fntmp)" ]; then
      if [ $opt_verbose -gt 0 ]; then
        diff --suppress-common-line -y $fn $fntmp
      fi
      if [ $opt_dry_run -eq 0 ]; then
        mv $fn $fn.bak
        mv $fntmp $fn
      fi
    else
      rm -f $fntmp
    fi
}


OPTOPTS=(h        D        E        f      k      K      m         n           p          q           r           u           V           v)
OPTDEST=(opt_help opt_defn opt_tenv opt_fn opt_pp opt_pp opt_multi opt_dry_run opt_lgipwd opt_verbose opt_xmlport opt_lgiuser opt_version opt_verbose)
OPTACTI=(1        1        1        "="    0      1      1         1           "="        0           "="         "="         "*>"        "+")
OPTDEFL=(0        0        0        ""     -1     -1     -1        0           ""         -1          ""          ""          ""           -1)
OPTMETA=("help"   ""       ""       "file" ""     ""     ""        ""          "passwd"   "quiet"     "port"      "user"      "version"   "verbose")
OPTHELP=("this help"\
 "update default config file"\
 "update test environment config file"\
 "set specific filename to set"\
 "reset passepartout"\
 "set passepartout"\
 "multi-version odoo environment"\
 "do nothing (dry-run)"\
 "set odoo password"\
 "silent mode"\
 "set xmprpc port (def=8069)"\
 "set odoo login username"\
 "show version"\
 "verbose mode")
OPTARGS=(odoo_vid db_name)

parseoptargs "$@"
if [ -n "$odoo_vid" ]; then
  odoo_fver=$(build_odoo_param FULLVER $odoo_vid)
  odoo_ver=$(build_odoo_param FULLVER $odoo_vid)
  if [ $opt_multi -lt 0 ]; then
    c=0
    for v in 6.1 7.0 8.0 9.0 10.0 11.0; do
      for p in "" v odoo ODOO; do
        odoo_bin=$(build_odoo_param BIN $p$v search)
        if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
          ((c++))
        fi
      done
    done
    if [ $c -gt 2 ]; then
      opt_multi=1
    else
      opt_multi=0
    fi
  else
    odoo_fver=
    odoo_ver=
  fi
fi
if [ -z "$odoo_fver" ]; then
  opt_help=1
fi
if [ "$opt_version" ]; then
  echo "$__version__"
  exit $STS_SUCCESS
fi
if [ $opt_help -gt 0 ]; then
  print_help "Set Odoo version in clodoo configuration files"\
  "(C) 2015-2017 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Linux/dev\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit $STS_SUCCESS
fi
if [ -n "$opt_lgipwd" ]; then
  opt_lgipwd=${opt_lgipwd//\\!/!}
fi
if [ $opt_defn -ne 0 ]; then
  set_ver ./clodoo.conf $odoo_fver $db_name $opt_xmlport
elif [ -n "$opt_fn" ]; then
  set_ver $opt_fn $odoo_fver $db_name $opt_xmlport
else
  for f in conf/*conf; do
    set_ver ./clodoo.conf $odoo_fver $db_name $opt_xmlport
    set_ver $f $odoo_fver $db_name $opt_xmlport
  done
fi
if [ $opt_tenv ]; then
  set_ver ./inv2draft_n_restore.conf $odoo_fver $db_name $opt_xmlport
fi
exit $STS_SUCCESS
