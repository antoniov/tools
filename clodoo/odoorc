# -*- coding: utf-8 -*-
#
# Odoo Library
# Common function to manage Odoo
#
# Item to process (+ means can be searched):
# BIN          Name of file to execute Odoo (+)
# CONFN        Configuration filename (+)
# DDIR         Data directory
# FLOG         Log filename (+)
# FPID         PID filename (+)
# FULLVER      Odoo version, format like 11.0
# FULL_SVCNAME Pathname + filename to start/stop Odoo service (+)
# GIT_OPTS     Git switches to clone Odoo project
# GIT_ORG      URL of git organization of specific Odoo version
# GIT_ORGNM    Name of git organization of specific Odoo version
# GIT_PROT     Git protocol (git or https)
# GIT_URL      URL to download git project (ends with .git)
# HOME         Specific Odoo module home directory
# LCONFN       Local Configuration filename (+)
# MAJVER       Major Odoo version
# MANIFEST     Manifest filename (__openerp__.py or __manifest__.py)
# OPTS_ASM     Undocumented (deprecated)
# PARENTDIR    Parent directory of specific Odoo module (should be repositoy home directory)
# ROOT         Odoo home directory of specific vid/version
# ROROGIN      Remote git origin of Odoo repository
# RPCPORT      Xmlrpc port in multi-version environment
# RUPSTREAM    Remote git upstream of Odoo repository
# SVCNAME      Service name to start/stop Odoo service
# URL          URL to source git project
# URL_BRANCH   URL tp specifice version of source git project
# USER         Postgres username in multi-version environment
# VCS          If GIT repository return "git" otherwise return ""

#__version__=0.3.6.51


DEFMLIST="OCB account-analytic account_banking_cscs account-budgeting\
 account-closing account-consolidation account-financial-reporting\
 account-financial-tools account-fiscal-rule account_invoice_create_payment\
 account-invoice-reporting account-invoicing account-payment\
 account_payment_approve_invoice account-reconcile ansible-odoo apps-store\
 bank-payment bank-statement-import bank-statement-reconcile\
 business-requirement calendar commission community-data-files connector\
 connector-accountedge connector-cmis connector-ecommerce connector-infor\
 connector-interfaces connector-lengow connector-lims connector-magento\
 connector-magento-php-extension connector-odoo2odoo connector-prestashop\
 connector-redmine connector-sage connector-salesforce connector-telephony\
 connector-woocommerce contract crm cscs_addons currency ddmrp delivery-carrier\
 donation dotnet e-commerce edi event geospatial hr hr-timesheet\
 infrastructure-dns interface-github intrastat knowledge l10n-italy\
 l10n-italy-supplemental maintainer-quality-tools maintainer-tools\
 maintenance management-system manufacture manufacture-reporting\
 margin-analysis margin-analysis mis-builder multi-company oca-custom\
 oca-decorators odoorpc odoo-sentinel odoo-sphinx-autodoc OpenUpgrade\
 openupgradelib operating-unit partner-contact pos product-attribute\
 product-kitting product-variant project project-agile project-reporting\
 purchase-reporting purchase-workflow pylint-odoo queue reporting-engine\
 report-print-send rma runbot-addons sale-financial sale-reporting\
 sale-workflow server-auth server-backend server-brand server-env server-tools\
 server-ux social stock-logistics-barcode stock-logistics-reporting\
 stock-logistics-tracking stock-logistics-transport stock-logistics-warehouse\
 stock-logistics-workflow survey user_contributes vertical-abbey\
 vertical-agriculture vertical-association vertical-community\
 vertical-construction vertical-edition vertical-education vertical-hotel\
 vertical-isp vertical-medical vertical-ngo vertical-realestate vertical-travel\
 web webhook webkit-tools website website-cms website-themes zeroincombenze"
INVALID_MODNAMES="addons conf cover debian doc filestore history odoo openerp node_modules scripts server setup themes __to_remove"
REPT_ORG_MATRIX="acespritech/openerp_gantt_chart_modification,odoomrp/odoomrp-wip,"\
"OCA/project,OCA/project-service,OCA/sale-workflow,OCA/purchase-workflow,OCA/multi-company,"\
"OCA/commission,Odoo-Italia-Associazione/user_contributes,"\
"local/didotech_80,local/profiles,local/uncovered,local/mymodules,local/themes,local/woven_fabric,"\
"local/zeroincombenze,local/cscs_addons,local/account_banking_cscs,"\
"zeroincombenze/l10n-italy-supplemental,OCA/connector,OCA/social,OCA/event,"\
"OCA/pylint-odoo,OCA/operating-unit,OCA/manufacture,OCA/survey,OCA/rma,OCA/queue,"\
"OCA/e-commerce,OCA/delivery-carrier,OCA/contract,OCA/vertical-education,"\
"OCA/bank-statement-reconcile,OCA/vertical-isp,OCA/geospatial,"\
"OCA/account-fiscal-rule,OCA/vertical-association,OCA/runbot-addons,"\
"OCA/stock-logistics-reporting,OCA/project-reporting,OCA/edi,OCA/product-variant,"\
"OCA/manufacture-reporting,OCA/purchase-reporting,OCA/intrastat,OCA/sale-financial,"\
"OCA/interface-github,OCA/connector-odoo2odoo,OCA/webhook,OCA/product-kitting,"\
"OCA/account-reconcile,OCA/OpenUpgrade,OCA/account-analytic,OCA/server-brand,"\
"OCA/server-auth,OCA/maintainer-quality-tools,OCA/odoo-sentinel,OCA/openupgradelib,"\
"OCA/donation,OCA/server-ux,OCA/stock-logistics-transport,OCA/connector-interfaces,"\
"OCA/connector-infor,OCA/maintainer-tools,OCA/currency,OCA/connector-telephony,"\
"OCA/server-env,OCA/connector-prestashop,OCA/ddmrp,OCA/website-themes,"\
"OCA/ansible-odoo,OCA/mis-builder,OCA/connector-lengow,OCA/business-requirement,"\
"OCA/margin-analysis,OCA/connector-magento,OCA/connector-cmis,OCA/account-consolidation,"\
"OCA/connector-ecommerce,OCA/server-backend,OCA/vertical-medical,OCA/vertical-hotel,"\
"OCA/community-data-files,OCA/apps-store,OCA/project-agile,OCA/connector-woocommerce,"\
"OCA/account-budgeting,OCA/odoorpc,OCA/oca-custom,OCA/calendar,OCA/oca-decorators,"\
"OCA/vertical-ngo,OCA/connector-redmine,OCA/vertical-abbey,OCA/maintenance,"\
"OCA/odoo-sphinx-autodoc,OCA/vertical-travel,OCA/vertical-edition,"\
"OCA/vertical-construction,OCA/vertical-community,OCA/vertical-agriculture,"\
"OCA/infrastructure-dns,OCA/dotnet,OCA/connector-salesforce,OCA/connector-sage,"\
"OCA/connector-lims,OCA/connector-accountedge,OCA/vertical-realestate,"\
"OCA/connector-magento-php-extension"
REPT_EXCL_MATRIX="Odoo-Italia-Associazione/OCB,Odoo-Italia-Associazione/account-closing,"\
"Odoo-Italia-Associazione/account-financial-reporting,Odoo-Italia-Associazione/account-financial-tools,"\
"Odoo-Italia-Associazione/account-invoicing,Odoo-Italia-Associazione/account-payment,"\
"Odoo-Italia-Associazione/account-payment,Odoo-Italia-Associazione/connector,Odoo-Italia-Associazione/knowledge,"\
"Odoo-Italia-Associazione/l10n-italy-supplemental,Odoo-Italia-Associazione/partner-contact,"\
"Odoo-Italia-Associazione/product-attribute,Odoo-Italia-Associazione/reporting-engine,"\
"Odoo-Italia-Associazione/report-print-send,Odoo-Italia-Associazione/server-tools,"\
"Odoo-Italia-Associazione/stock-logistics-barcode,"\
"Odoo-Italia-Associazione/stock-logistics-tracking,Odoo-Italia-Associazione/stock-logistics-warehouse,"\
"Odoo-Italia-Associazione/stock-logistics-workflow,Odoo-Italia-Associazione/web,"\
"Odoo-Italia-Associazione/webkit-tools,Odoo-Italia-Associazione/website,"\
"Odoo-Italia-Associazione/account_invoice_create_payment,Odoo-Italia-Associazione/account_payment_approve_invoice,"\
"Odoo-Italia-Associazione/crm,Odoo-Italia-Associazione/website-cms,Odoo-Italia-Associazione/sale-reporting,"\
"Odoo-Italia-Associazione/bank-statement-import,Odoo-Italia-Associazione/account-invoice-reporting,"\
"Odoo-Italia-Associazione/hr,Odoo-Italia-Associazione/hr-timesheet,"\
"Odoo-Italia-Associazione/management-system,Odoo-Italia-Associazione/margin-analysis,Odoo-Italia-Associazione/pos,"\
"zeroincombenze/account_invoice_create_payment,zeroincombenze/account_payment_approve_invoice,"\
"zeroincombenze/website-cms,zeroincombenze/sale-reporting,zeroincombenze/bank-statement-import,"\
"zeroincombenze/account-invoice-reporting,zeroincombenze/hr,zeroincombenze/hr-timesheet,"\
"zeroincombenze/margin-analysis,zeroincombenze/pos,"

get_odoo_major_ver() {
    local v=$(echo "$1"|grep -Eo "[0-9]+"|head -n1)
    echo "$v"
}

get_odoo_full_ver() {
    local v=$(echo "$1"|grep -Eo '[0-9]+(\.[0-9])?'|head -n1)
    if [ "$v" == "6" ]; then
      echo "6.1"
    elif [ "${v: -2:1}" == "." ]; then
      echo "$v"
    else
      echo "$v.0"
    fi
}

find_odoo_ver() {
#find_odoo_ver(odoo_vid)
    local CWD=$PWD
    local ldir odoo_fver x
    [ -n "$1" ] && cd $1
    while [ -z "$odoo_fver" ]; do
      for ldir in $PWD/server/openerp $PWD/openerp $PWD/odoo; do
        if [[ -d $ldir && -f $ldir/release.py ]]; then
          pushd $ldir &>/dev/null
          x=$(echo -e "from __future__ import print_function\nimport release\nprint(release.version)\n"|python)
          odoo_fver=$(get_odoo_full_ver "$x")
          popd &>/dev/null
          break
        fi
      done
      if [ "$PWD" == "$HOME" ]; then
         break
      fi
      PWD=$(readlink -f $PWD/..)
    done
    cd $CWD
    echo "$odoo_fver"
}

build_odoo_param() {
# build_odoo_param(BIN|CONFN|DDIR|FLOG|FPID|FULLVER|FULL_SVCNAME|GIT_OPTS|GIT_ORG|GIT_ORGNM|GIT_PROT|GIT_URL|HOME|LCONFN|MAJVER|MANIFEST|OPTS_ASM|PARENTDIR|ROOT|RORIGIN|RPCPORT|RUPSTREAM|SVCNAME|UPSTREAM|URL|URL_BRANCH|USER|VCS
#                  vid [{search|debug|<rptname>|<modname>}] [oca|zero|zero-http|zero-git|oia|oia-git|oia-http])
    local ITEM=$1
    local odoo_fver odoo_ver odoo_vid MULTIVER RPTNAME
    local GIT_ORG GIT_ORGID GIT_ORGNM GIT_PROT GIT_OPTS OPTS_ASM
    local ODOO_UPSTREAM
    local p p1 p11 p2 p3 p4 ldir r x
    if [ "$ITEM" == "RUPSTREAM" -o "$ITEM" == "RORIGIN" -o "$ITEM" == "VCS" -o "$2" == "." ]; then
      RPTNAME=$(basename $PWD)
      if [[ $RPTNAME =~ ^(v|V|odoo|ODOO|ocb|OCB|oca|oia)?-?(11\.0|10\.0|9\.0|8\.0|7\.0|6\.1|11|10|9|8|7|6) ]]; then
        RPTNAME="OCB"
      fi
    else
      [ -z "$3" ] && RPTNAME="OCB" || RPTNAME=$3
    fi
    [ -z "$4" ] && GIT_ORGID="zero" || GIT_ORGID=$4
    if [ "$GIT_ORGID" == "zero" -o "$GIT_ORGID" == "zeroincombenze" ]; then
      if [[ $HOSTNAME =~ shs[a-z0-9]+ ]]; then
        GIT_ORGID=zero-git
      else
        GIT_ORGID=zero-http
      fi
    elif [ "$GIT_ORGID" == "oia" ]; then
      if [[ $HOSTNAME =~ shs[a-z0-9]+ ]]; then
        GIT_ORGID=oia-git
      else
        GIT_ORGID=oia-http
      fi
    fi
    if [ ${opt_mult:-0} -ne 0 -o ${opt_multi:-0} -ne 0 ]; then
      MULTIVER=1
    else
      MULTIVER=0
    fi
    if [ -n "$2" ]; then
      if [[ $2 =~ ^(v|V|odoo|ODOO|ocb|OCB|oca|oia)?-?(11\.0|10\.0|9\.0|8\.0|7\.0|6\.1|11|10|9|8|7|6) ]]; then
        odoo_fver=$(get_odoo_full_ver "$2")
      elif [[ "$2" == "OCB" ]]; then
        odoo_fver=$(find_odoo_ver "~/OCB")
      else
        odoo_fver=$(find_odoo_ver)
      fi
      if [[ -z "$odoo_fver" && $ODOO_BRANCH =~ (11\.0|10\.0|9\.0|8\.0|7\.0|6\.1) ]]; then
        odoo_fver=$ODOO_BRANCH
      fi
      odoo_ver=$(get_odoo_major_ver "$odoo_fver")
      odoo_vid="$2"
      if [[ -z "$odoo_fver" && ! "$ITEM" == "HOME" && ! "$2" == "." ]]; then
        echo "Invalid Odoo version $2!"
        # exit 1
      fi
    else
      odoo_ver=11
      odoo_fver=11.0
      odoo_vid=11.0
    fi
    if [[ "$ITEM" =~ (OPTS_ASM|GIT_OPTS|RORIGIN|GIT_ORG|GIT_ORGID|GIT_ORGNM|GIT_URL|RUPSTREAM|UPSTREAM|URL|URL_BRANCH|VCS) ]]; then
      if [[ " $RPTNAME " =~ " $INVALID_MODNAMES " ]]; then
        GIT_ORGNM=""
        GIT_PROT=""
        ODOO_UPSTREAM=
      elif [[ "$REPT_ORG_MATRIX," =~ "/$RPTNAME," ]]; then
        r=$(echo "$REPT_ORG_MATRIX,"|grep -Eo "[A-Za-z0-9_-]+/$RPTNAME,")
        r=${r:0: -1}
        IFS=/ read GIT_ORGNM x <<<$r
      elif [ "$GIT_ORGID" == "oca" ]; then
        GIT_ORGNM="OCA"
      elif [[ " zeroincombenze zero zero-git zero-http " =~ " $GIT_ORGID " ]]; then
        GIT_ORGNM="zeroincombenze"
      elif [[ " oia oia-git oia-http " =~ " $GIT_ORGID " ]]; then
        GIT_ORGNM="Odoo-Italia-Associazione"
      else
        echo "Invalid $GIT_ORGID Odoo org: must be one of oca|oia|oia-git|oia-http|zero|zero-git|zero-http!"
        # exit 1
      fi
      if [ "$GIT_ORGNM" == "OCA" ]; then
        GIT_PROT="https"
        ODOO_UPSTREAM=
      elif [ "$GIT_ORGNM" == "Odoo-Italia-Associazione" ]; then
        if [ "${GIT_ORGID: -4}" == "-git" ]; then
          GIT_PROT="git"
        else
          GIT_PROT="https"
        fi
        ODOO_UPSTREAM="https://github.com/OCA"
      elif [ "$GIT_ORGNM" == "zeroincombenze" ]; then
        if [ "${GIT_ORGID: -4}" == "-git" ]; then
          GIT_PROT="git"
        else
          GIT_PROT="https"
        fi
        ODOO_UPSTREAM="https://github.com/OCA"
      elif [ "$GIT_ORGNM" == "local" ]; then
        GIT_PROT=
        ODOO_UPSTREAM=
      else
        GIT_PROT="https"
        ODOO_UPSTREAM=
      fi
      if [ -n "$GIT_PROT" ]; then
        if [ "$GIT_PROT" == "git" ]; then
          GIT_ORG="git@github.com:$GIT_ORGNM"
          GIT_OPTS=""
          OPTS_ASM=
        else
          GIT_ORG="https://github.com/$GIT_ORGNM"
          GIT_OPTS="--depth 1 --single-branch"
          OPTS_ASM="-1"
        fi
      else
        GIT_ORG=""
        GIT_OPTS=""
        OPTS_ASM=
      fi
      if [ "$ITEM" == "GIT_ORG" ]; then
        echo "$GIT_ORG"
        return
      elif [ "$ITEM" == "GIT_ORGNM" ]; then
        echo "$GIT_ORGNM"
        return
      elif [ "$ITEM" == "URL" ]; then
        if [ -n "$GIT_ORG" ]; then
          echo "$GIT_ORG/$RPTNAME"
        else
          echo ""
        fi
        return
      elif [ "$ITEM" == "GIT_URL" ]; then
        if [ -n "$GIT_ORG" ]; then
          echo "$GIT_ORG/$RPTNAME.git"
        else
          echo ""
        fi
        return
      elif [ "$ITEM" == "URL_BRANCH" ]; then
        if [ -n "$GIT_ORG" ]; then
          echo "$GIT_ORG/$RPTNAME/tree/$odoo_fver"
        else
          echo ""
        fi
        return
      elif [ "$ITEM" == "UPSTREAM" ]; then
        if [ "$odoo_fver" == "6.1" ]; then
          echo ""
        elif [ -n "$ODOO_UPSTREAM" ]; then
          echo "$ODOO_UPSTREAM/$RPTNAME.git"
        else
          echo ""
        fi
        return
      elif [ "$ITEM" == "GIT_OPTS" ]; then
        echo "$GIT_OPTS"
        return
      elif [ "$ITEM" == "OPTS_ASM" ]; then
        echo "$OPTS_ASM"
        return
      elif [ "$ITEM" == "RUPSTREAM" -o "$ITEM" == "RORIGIN" -o "$ITEM" == "VCS" ]; then
        r=
        if $(git status -s &>/dev/null); then
          if [ "$ITEM" == "VCS" ]; then
            r="git"
          elif [ -n "$GIT_ORG" ]; then
            p=${ITEM,,}
            p=${p:1}
            IFS=- read x y <<<$GIT_ORGID
            r=$(git remote -v 2>/dev/null|grep "${p}_$x.*push"|head -n1|awk '{ print $2}')
            if [ -z "$r" ]; then
              r=$(git remote -v 2>/dev/null|grep "$p.*push"|head -n1|awk '{ print $2}')
            fi
          fi
        fi
        echo "$r"
        return
      fi
    elif [ "$ITEM" == "FULLVER" ]; then
      echo "$odoo_fver"
      return
    elif [ "$ITEM" == "MAJVER" ]; then
      echo "$odoo_ver"
      return
    elif [ "$ITEM" == "ROOT" ]; then
      echo "/opt/odoo/$odoo_vid"
      return
    elif [ "$ITEM" == "HOME" ]; then
      if [ "$2" == "." ]; then
        echo "$(readlink -f $PWD)"
      elif [ "$RPTNAME" == "OCB" ]; then
        echo "/opt/odoo/$odoo_vid"
      else
        echo "/opt/odoo/$odoo_vid/$RPTNAME"
      fi
      return
    elif [ "$ITEM" == "PARENTDIR" ]; then
      if [ "$RPTNAME" == "OCB" ]; then
        echo "/opt/odoo"
      else
        echo "/opt/odoo/$odoo_vid"
      fi
      return
    elif [ "$ITEM" == "DDIR" ]; then
      p="/opt/odoo/$odoo_vid/.local/share"
      if [[ $odoo_vid =~ ^(v|V|odoo|ODOO|ocb|OCB|oca|oia).* ]]; then
        p="$p/Odoo"
      elif [ $MULTIVER -ne 0 ]; then
        p="$p/Odoo$odoo_ver"
      elif [ $odoo_ver -lt 8 ]; then
        p="/opt/odoo/$odoo_vid/openerp/filestore"
      else
        p="$p/Odoo"
      fi
      echo $p
      return
    elif [ "$ITEM" == "MANIFEST" ]; then
      if [ $odoo_ver -ge 10 ]; then
        echo "__manifest__.py"
      else
        echo "__openerp__.py"
      fi
      return
    elif [ "$ITEM" == "USER" ]; then
      if [[ $odoo_vid =~ ^(v|V|odoo|ODOO|ocb|OCB|oca|oia).* ]]; then
        p="odoo"
      elif [ $MULTIVER -ne 0 ]; then
        p="odoo$odoo_ver"
      elif [ $odoo_ver -lt 8 ]; then
        [ -d /opt/openerp -a ! -d /opt/odoo ] && p="openerp" || p="odoo"
      else
        p="odoo"
      fi
      echo $p
      return
    elif [ "$ITEM" == "RPCPORT" ]; then
      if [ "$3" == "debug" ]; then
        ((p=18060+$odoo_ver))
      elif [[ $odoo_vid =~ ^(v|V|odoo|ODOO|ocb|OCB|oca|oia).* ]]; then
        p=8069
      elif [ $MULTIVER -ne 0 ]; then
        if [ "${2:0:3}" == "oca" ]; then
          ((p=8260+$odoo_ver))
        elif [ "${2:0:3}" == "oia" ]; then
          ((p=8360+$odoo_ver))
        else
          ((p=8160+$odoo_ver))
        fi
      else
        p=8069
      fi
      echo $p
      return
    elif [ "$ITEM" == "LCONFN" ]; then
      if [ $odoo_ver -ge 10 ]; then
        echo ".odoorc"
      else
        echo ".openerp_serverrc"
      fi
      return
    elif [ "$ITEM" == "CONFN" ]; then
      p1=/etc/odoo/
      p11=/etc/
      p4=.conf
    elif [ "$ITEM" == "FULL_SVCNAME" -o "$ITEM" == "SVCNAME" ]; then
      p1=/etc/init.d/
      p11=
      p4=
    elif [ "$ITEM" == "FLOG" ]; then
      p1=/var/log/odoo/
      p11=/var/log/
      p4=.log
    elif [ "$ITEM" == "FPID" ]; then
      p1=/var/run/odoo/
      p11=/var/run/
      p4=.pid
    elif [ "$ITEM" == "BIN" ]; then
      if [ $odoo_ver -lt 7 ]; then
        p1=/opt/odoo/$odoo_vid/server/
        p11=/opt/odoo/$odoo_vid/
      elif [ $odoo_ver -eq 7 -a "${odoo_vid:0:1}" == "v" ]; then
        p1=/opt/odoo/$odoo_vid/server/
        p11=/opt/odoo/$odoo_vid/
      else
        p1=/opt/odoo/$odoo_vid/
      fi
      p4=
    else
      echo "Invalid parameter $ITEM!"
      exit 1
    fi
    if [ $MULTIVER -ne 0 -a "$ITEM" != "BIN" ]; then
      if [ "$odoo_vid" == "v7" -o "$odoo_vid" == "v6" ]; then
        p2=openerp
      elif [ "${odoo_vid:0:1}" == "v" -o "${odoo_vid:0:1}" == "V" ]; then
        p2=odoo
      else
        p2="odoo${odoo_ver}"
      fi
    elif [ $MULTIVER -ne 0 -a "$ITEM" == "BIN" ]; then
      if [ $odoo_ver -ge 10 ]; then
        p2=odoo
      else
        p2=openerp
      fi
    elif [ $odoo_ver -lt 7 -o "$odoo_vid" == "v7" ]; then
      p2=openerp
    else
      p2="odoo"
    fi
    if [ "$ITEM" == "CONFN" ]; then
      if [ $MULTIVER -ne 0 -a "${2:0:3}" == "oca" ]; then
        p3="-oca"
      elif [ $MULTIVER -ne 0 -a  "${2:0:3}" == "oia" ]; then
        p3="-oia"
      elif [ $odoo_ver -ge 10 ]; then
        p3=
      else
        p3="-server"
      fi
    elif [ $odoo_ver -ge 10 ]; then
      if [ "$ITEM" == "BIN" ]; then
        p3=-bin
      else
        p3=
      fi
    else
      p3="-server"
    fi
    p="$p1$p2$p3$p4"
    if [ "$3" == "search" ]; then
      p=$(findpkg "$p2$p3$p4" "$p1 $p11")
      if [ -z "$p" ]; then
        p=$(findpkg "odoo$p3$p4" "$p1 $p11")
      fi
      if [ -z "$p" -a $odoo_ver -lt 7 ]; then
        p=$(findpkg "openerp$p4" "$p1 $p11")
        if [ -z "$p" ]; then
          p=$(findpkg "odoo$p3$p4" "$p1 $p11")
        fi
      elif [ -z "$p" -a $odoo_ver -ge 7 ]; then
        p=$(findpkg "odoo$p4" "$p1 $p11")
        if [ -z "$p" ]; then
          p=$(findpkg "openerp$p3$p4" "$p1 $p11")
        fi
      fi
    fi
    if [ "$ITEM" == "SVCNAME" ]; then
      p=$(basename $p)
    fi
    echo "$p"
}

discover_multi() {
    local v p m
    local c=0
    [ ${opt_multi:-0} -ne 0 ] && return
    for v in 6.1 7.0 8.0 9.0 10.0 11.0; do
      m=$(build_odoo_param MAJVER $v)
      for p in "" v odoo ocb; do
        odoo_bin=$(build_odoo_param BIN $p$v search)
        if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
          ((c++))
        else
          if [ -n "$p" ]; then
            odoo_bin=$(build_odoo_param BIN $p$m search)
          fi
          if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
            ((c++))
          else
            odoo_bin=$(build_odoo_param BIN $p-$v search)
            if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
              ((c++))
            else
              odoo_bin=$(build_odoo_param BIN ${p^^}$v search)
              if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
                ((c++))
              else
                if [ -n "$p" ]; then
                  odoo_bin=$(build_odoo_param BIN ${p^^}$m search)
                fi
                if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
                  ((c++))
                else
                  odoo_bin=$(build_odoo_param BIN ${p^^}-$v search)
                  if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
                    ((c++))
                  fi
                fi
              fi
            fi
          fi
        fi
      done
    done
    if [ $c -gt 1 ]; then
      opt_multi=1
    else
      opt_multi=0
    fi
}


module_list() {
#module_list(odoo_fver excl_list [oca|zero|zero-http|zero-git|oia|oia-git|oia-http])
    local res=
    local fn nm v
    local odoo_fver=$1
    local excl_list="${2//,/ }"
    local org=$3
    local GIT_ORGNM
    if [ -n "$3" ]; then
      if [[ " zeroincombenze zero zero-git zero-http " =~ " $3 " ]]; then
        org="zeroincombenze"
      elif [[ " oia oia-git oia-http " =~ " $3 " ]]; then
        org="Odoo-Italia-Associazione"
      else
        org="OCA"
      fi
    else
      org=
    fi
    for fn in $DEFMLIST; do
      v=$(dirname $fn)
      if [ "$v" == "." -o "$v" == "$odoo_fver" ]; then
        nm=$(basename $fn)
        if [[ ! " $excl_list " =~ [[:space:]]$nm[[:space:]] && ! " $excl_list " =~ [[:space:]]$odoo_fver/$nm[[:space:]] ]]; then
          if [ -n "$org" ]; then
            if [[ "$REPT_EXCL_MATRIX," =~ "/$nm," ]]; then
              for r in $(echo "$REPT_EXCL_MATRIX,"|grep -Eo "[A-Za-z0-9_-]+/$nm,"); do
                r=${r:0: -1}
                IFS=/ read GIT_ORGNM x <<<$r
                if [ "$GIT_ORGNM" == "$org" ]; then
                  break
                fi
              done
              if [ "$GIT_ORGNM" == "$org" ]; then
                continue
              fi
            fi
            if [[ "$REPT_ORG_MATRIX," =~ "/$nm," ]]; then
              for r in $(echo "$REPT_ORG_MATRIX,"|grep -Eo "[A-Za-z0-9_-]+/$nm,"); do
                r=${r:0: -1}
                IFS=/ read GIT_ORGNM x <<<$r
                if [ "$GIT_ORGNM" == "$org" ]; then
                  break
                fi
              done
            else
              GIT_ORGNM=$org
            fi
            if [ "$GIT_ORGNM" == "$org" ]; then
              res="$res $nm"
            fi
          else
            res="$res $nm"
          fi
        fi
      fi
    done
    echo $res
}
