#! /bin/bash
# -*- coding: utf-8 -*-
#
# Odoo Library
# Common function to manage Odoo
#

#__version__=0.3.3.4


get_odoo_major_ver() {
    local v=$(echo "$1"|grep -Eo "[0-9]*"|head -n1)
    echo "$v"
}

get_odoo_full_ver() {
    local v=$(echo "$1"|grep -Eo '[0-9]*(\.[0-9])?'|head -n1)
    if [ "$v" == "6" ]; then
      echo "6.1"
    elif [ "${v: -2:1}" == "." ]; then
      echo "$v"
    else
      echo "$v.0"
    fi
}

build_odoo_param() {
# build_odoo_param(BIN|CONFN|FLOG|FPID|FULLVER|FULL_SVCNAME|MAJVER|MANIFEST|OPTS_ASM|OPTS_GIT|ROOT|RORIGIN|RPCPORT|RPT|RUPSTREAM|SVCNAME|UPSTREAM|URL|URL_BRANCH|URL_GIT|USER
#                  version [{search|debug|<modname>}] [oca|zero|zero-http|zero-git|oia|oia-http])
    local ITEM=$1
    local odoo_fver odoo_ver odoo_vid MULTIVER MODNAME RPT
    local p p1 p11 p2 p3 p4 ldir r
    MODNAME=$3
    [ -z "$4" ] && RPT=zero-git || RPT=$4
    if [ ${opt_mult:-0} -ne 0 -o ${opt_multi:-0} -ne 0 ]; then
      MULTIVER=1
    else
      MULTIVER=0
    fi
    if [ -n "$2" ]; then
      if [[ $2 =~ (v|V|odoo|ODOO|ocb|OCB)?(11\.0|10\.0|9\.0|8\.0|7\.0|6\.1|11|10|9|8|7|6) ]]; then
        odoo_fver=$(get_odoo_full_ver "$2")
        odoo_ver=$(get_odoo_major_ver "$odoo_fver")
        odoo_vid="$2"
      elif [[ "$2" == "OCB" ]]; then
        for ldir in ~/OCB/server/openerp ~/OCB/openerp ~/OCB/odoo; do
          if [[ -d $ldir && -f $ldir/release.py ]]; then
            pushd $ldir &>/dev/null
            odoo_fver=$(echo -e "import release\nprint release.version\n"|python)
            popd &>/dev/null
            odoo_ver=$(get_odoo_major_ver "$odoo_fver")
            odoo_vid="$2"
            break
          fi
        done
      fi
      if [[ -z "$odoo_fver" ]]; then
        echo "Invalid Odoo version"
        # exit 1
      fi
    else
      odoo_ver=11
      odoo_fver=11.0
      odoo_vid=11.0
    fi
    if [[ "$ITEM" =~ (OPTS_ASM|OPTS_GIT|RORIGIN|RPT|RUPSTREAM|UPSTREAM|URL|URL_BRANCH|URL_GIT) ]]; then
      if [ "$MODNAME" == "openerp_gantt_chart_modification" ]; then
        local ODOO_RPT="https://github.com/acespritech"
        local ODOO_UPSTREAM=
        local OPTS_GIT="--depth 1 --single-branch"
        local OPTS_ASM="-1"
      elif [ "$MODNAME" == "l10n-italy-supplemental" ]; then
        if [ "$RPT" == "zero-http" ]; then
          local ODOO_RPT="https://github.com/zeroincombenze"
          local OPTS_GIT="--depth 1 --single-branch"
          local OPTS_ASM="-1"
        else
          local ODOO_RPT="git@github.com:zeroincombenze"
          local OPTS_GIT=""
          local OPTS_ASM=
        fi
        local ODOO_UPSTREAM=
      elif [ "$RPT" == "oca" ]; then
        local ODOO_RPT="https://github.com/OCA"
        local ODOO_UPSTREAM=
        local OPTS_GIT="--depth 1 --single-branch"
        local OPTS_ASM="-1"
      elif [ "$RPT" == "zero" -o "$RPT" == "zeroincombenze" -o "$RPT" == "zero-git" ]; then
        local ODOO_RPT="git@github.com:zeroincombenze"
        local ODOO_UPSTREAM="https://github.com/OCA"
        local OPTS_GIT=""
        local OPTS_ASM=""
      elif [ "$RPT" == "oia" ]; then
        local ODOO_RPT="git@github.com:Odoo-Italia-Associazione"
        local ODOO_UPSTREAM="https://github.com/OCA"
        local OPTS_GIT=""
        local OPTS_ASM=""
      elif [ "$RPT" == "zero-http" ]; then
        local ODOO_RPT="https://github.com/zeroincombenze"
        local ODOO_UPSTREAM="https://github.com/OCA"
        local OPTS_GIT="--depth 1 --single-branch"
        local OPTS_ASM="-1"
      elif [ "$RPT" == "oia-http" ]; then
        local ODOO_RPT="https://github.com/Odoo-Italia-Associazione"
        local ODOO_UPSTREAM="https://github.com/OCA"
        local OPTS_GIT="--depth 1 --single-branch"
        local OPTS_ASM="-1"
      else
        echo "Odoo repository is one of oca|oia|oia-http|zero|zero-http|zero-git"
        # exit 1
      fi
      if [ "$ITEM" == "RPT" ]; then
        echo "$ODOO_RPT"
      elif [ "$ITEM" == "URL" ]; then
        echo "$ODOO_RPT/$MODNAME"
      elif [ "$ITEM" == "URL_GIT" ]; then
        echo "$ODOO_RPT/$MODNAME.git"
      elif [ "$ITEM" == "URL_BRANCH" ]; then
        echo "$ODOO_RPT/$MODNAME/tree/$odoo_fver"
      elif [ "$ITEM" == "UPSTREAM" ]; then
        if [ "$odoo_fver" == "6.1" ]; then
          echo ""
        elif [ -n "$ODOO_UPSTREAM" ]; then
          echo "$ODOO_UPSTREAM/$MODNAME.git"
        else
          echo ""
        fi
      elif [ "$ITEM" == "OPTS_GIT" ]; then
        echo "$OPTS_GIT"
      elif [ "$ITEM" == "OPTS_ASM" ]; then
        echo "$OPTS_ASM"
      elif [ "$ITEM" == "RUPSTREAM" -o "$ITEM" == "RORIGIN" ]; then
        p=${ITEM,,}
        p=${p:1}
        IFS=- read x y <<<$RPT
        r=$(git remote -v 2>/dev/null|grep "$p_$x.*push"|head -n1|awk '{ print $2}')
        if [  -z "$r" ]; then
          r=$(git remote -v 2>/dev/null|grep "$p.*push"|head -n1|awk '{ print $2}')
        fi
        echo "$r"
      else
        echo ""
      fi
      return
    elif [ "$ITEM" == "FULLVER" ]; then
      echo "$odoo_fver"
      return
    elif [ "$ITEM" == "MAJVER" ]; then
      echo "$odoo_ver"
      return
    elif [ "$ITEM" == "ROOT" ]; then
      echo "/opt/odoo/$odoo_vid"
      return
    elif [ "$ITEM" == "MANIFEST" ]; then
      if [ $odoo_ver -ge 10 ]; then
        echo "__manifest__.py"
      else
        echo "__openerp__.py"
      fi
      return
    elif [ "$ITEM" == "USER" ]; then
      if [[ $odoo_vid =~ ^(v|V|odoo|ODOO|ocb|OCB).* ]]; then
        p="odoo"
      elif [ $MULTIVER -ne 0 ]; then
        p="odoo$odoo_ver"
      elif [ $odoo_ver -lt 8 ]; then
        [ -d /opt/openerp -a ! -d /opt/odoo ] && p="openerp" || p="odoo"
      else
        p="odoo"
      fi
      echo $p
      return
    elif [ "$ITEM" == "RPCPORT" ]; then
      if [ "$3" == "debug" ]; then
        let p="18060+$odoo_ver"
      elif [[ $odoo_vid =~ ^(v|V|odoo|ODOO|ocb|OCB).* ]]; then
        p=8069
      elif [ $MULTIVER -ne 0 ]; then
        let p="8160+$odoo_ver"
      else
        p=8069
      fi
      echo $p
      return
    elif [ "$ITEM" == "CONFN" ]; then
      p1=/etc/odoo/
      p11=/etc/
      p4=.conf
    elif [ "$ITEM" == "FULL_SVCNAME" -o "$ITEM" == "SVCNAME" ]; then
      p1=/etc/init.d/
      p11=
      p4=
    elif [ "$ITEM" == "FLOG" ]; then
      p1=/var/log/odoo/
      p11=/var/log/
      p4=.log
    elif [ "$ITEM" == "FPID" ]; then
      p1=/var/run/odoo/
      p11=/var/run/
      p4=.pid
    elif [ "$ITEM" == "BIN" ]; then
      if [ $odoo_ver -lt 7 ]; then
        p1=/opt/odoo/$odoo_vid/server/
        p11=/opt/odoo/$odoo_vid/
      elif [ $odoo_ver -eq 7 -a "${odoo_vid:0:1}" == "v" ]; then
        p1=/opt/odoo/$odoo_vid/server/
        p11=/opt/odoo/$odoo_vid/
      else
        p1=/opt/odoo/$odoo_vid/
      fi
      p4=
    else
      echo "Invalid parameter $ITEM"
      exit 1
    fi
    if [ $MULTIVER -ne 0 -a "$ITEM" != "BIN" ]; then
      if [ "$odoo_vid" == "v7" -o "$odoo_vid" == "v6" ]; then
        p2=openerp
      elif [ "${odoo_vid:0:1}" == "v" -o "${odoo_vid:0:1}" == "V" ]; then
        p2=odoo
      else
        p2="odoo${odoo_ver}"
      fi
    elif [ $MULTIVER -ne 0 -a "$ITEM" == "BIN" ]; then
      if [ $odoo_ver -ge 10 ]; then
        p2=odoo
      else
        p2=openerp
      fi
    elif [ $odoo_ver -lt 7 -o "$odoo_vid" == "v7" ]; then
      p2=openerp
    else
      p2="odoo"
    fi
    if [ $odoo_ver -ge 10 ]; then
      if [ "$ITEM" == "BIN" ]; then
        p3=-bin
      else
        p3=
      fi
    else
      p3="-server"
    fi
    p="$p1$p2$p3$p4"
    if [ "$3" == "search" ]; then
      p=$(findpkg "$p2$p3$p4" "$p1 $p11")
      if [ -z "$p" ]; then
        p=$(findpkg "odoo$p3$p4" "$p1 $p11")
      fi
      if [ -z "$p" -a $odoo_ver -lt 7 ]; then
        p=$(findpkg "openerp$p4" "$p1 $p11")
        if [ -z "$p" ]; then
          p=$(findpkg "odoo$p3$p4" "$p1 $p11")
        fi
      elif [ -z "$p" -a $odoo_ver -ge 7 ]; then
        p=$(findpkg "odoo$p4" "$p1 $p11")
        if [ -z "$p" ]; then
          p=$(findpkg "openerp$p3$p4" "$p1 $p11")
        fi
      fi
    fi
    if [ "$ITEM" == "SVCNAME" ]; then
      p=$(basename $p)
    fi
    echo "$p"
}

discover_multi() {
    local v p
    local c=0
    for v in 6.1 7.0 8.0 9.0 10.0 11.0; do
      for p in "" v odoo ocb; do
        odoo_bin=$(build_odoo_param BIN $p$v search)
        if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
          ((c++))
        else
          odoo_bin=$(build_odoo_param BIN $p-$v search)
          if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
            ((c++))
          else
            odoo_bin=$(build_odoo_param BIN ${p^^}$v search)
            if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
              ((c++))
            else
              odoo_bin=$(build_odoo_param BIN ${p^^}-$v search)
              if [ -n "$odoo_bin" ] && [ -f "$odoo_bin" ]; then
                ((c++))
              fi
            fi
          fi
        fi
      done
    done
    if [ $c -gt 2 ]; then
      opt_multi=1
    else
      opt_multi=0
    fi
}
