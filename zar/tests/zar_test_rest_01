#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on zar
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. . .. $TDIR/../../z0lib $TDIR/../z0lib /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. . .. $HOME/dev $TDIR/../../zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
__version__=1.3.24.1


test_01() {
    local RES TRES
    if [ -f $OUTF ]; then
      RES=$OUTF
    else
      RES=
    fi
    test_result "rest test log" "$OUTF" "$RES"
    return $?
}

test_02() {
    local RES TRES
    if [ -f $OUTF ]; then
      grep "DB to Restore: zi01234567" $OUTF  &>/dev/null
      RES=$?
    else
      RES=1
    fi
    test_result "rest list" "0" "$RES"
    return $?
}

test_03() {
    local RES TRES
    if [ -f $OUTF ]; then
      local dtc=$(date +%Y%m%d)
      grep "File .*/zi01234567-$dtc.sql .* yesterday" <<< $OUT &>/dev/null
      RES=$?
    else
      RES=1
    fi
    test_result "restore into" "0" "$RES"
    return $?
}

Z0BUG_setup() {
    rm -f $TESTDIR/restdb.log
    local cmd="$RUNDIR/zar_rest -T zi01234567"
    OUTF=$TESTDIR/restdb.log
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      OUT=$(eval $cmd)
    else
      OUT=
      rm -f $OUTF
    fi
}

Z0BUG_teardown() {
    :
}


Z0BUG_init
parseoptest -l$TESTDIR/test_zar.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_tlib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg "travisrc" "$TDIR $TDIR/..")
  if [ -z "$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . $TRAVISLIBDIR
fi
UT1_LIST=""
UT_LIST=""
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
