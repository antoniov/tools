#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on zar
#
# READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
# export READLINK
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=""
for p in $TDIR $TDIR/.. $TDIR/../.. $HOME/venv_tools/bin $HOME/venv_tools/lib $HOME/tools; do
  [[ -d $p ]] && PYPATH=$(find $(readlink -f $p) -maxdepth 3 -name z0librc)
  [[ -n $PYPATH ]] && break
done
PYPATH=$(echo -e "import os,sys;p=[os.path.dirname(x) for x in '$PYPATH'.split()];p.extend([x for x in os.environ['PATH'].split(':') if x not in p and not x.startswith('/usr') and not x.startswith('/sbin') and not x.startswith('/bin')]);p.extend([x for x in sys.path if x not in p]);print(' '.join(p))"|python)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$($READLINK -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

__version__=1.3.36.99


Z0BUG_setup() {
    fsql="zi01234567"
    fconf="$TESTDIR/zar.conf"
    bckdir=$TESTDIR/backups
    mkdir $bckdir &>/dev/null
    for fn in bckdb restdb purgedb; do
      rm -f $TESTDIR/$fn.log
    done
    rm -f $fconf
    rm -f bckdir/$fsql*
    echo "DBA_filter=$fsql" >>$fconf
    echo "DBA_keep_recent=7" >>$fconf
    echo "DBA_keep_monthly=3" >>$fconf
    echo "production_host=$HOSTNAME" >>$fconf
    echo "development_host=${HOSTNAME}-dev" >>$fconf
    echo "bck_db=yesterday" >>$fconf
    echo "PRD_num_days_before=0" >>$fconf
    for i in {10..1}; do
      dtc=$(date -d "today - $i day" +%Y%m%d)
      touch $bckdir/${fsql}-$dtc.sql
    done
    for i in {6..1}; do
      dtc=$(date -d "today - $i month" +%Y%m)01
      touch $bckdir/${fsql}-$dtc.sql
    done
}

Z0BUG_teardown() {
    bckdir=$TESTDIR/backups
    rm -f $bckdir/*.sql
}


Z0BUG_init
parseoptest -l$TESTDIR/test_zar.log "$@" "-Z"
sts=$?
[[ $sts -ne 127 ]] && exit $sts
if [ $opt_zLib -ne 0 ]; then
  ZARLIB=$(findpkg zarrc "$TDIR $TDIR/.. ${PYTHONPATH//:/ } . .. $HOME/tools/zar $HOME/dev")
  if [ -z "$ZARLIB" ]; then
    echo "Library file zarrc not found!"
    exit 2
  fi
  . $ZARLIB
fi


UT1_LIST=
UT_LIST="__version_1_${__version__}$RUNDIR/zarrc"
UT_LIST="$UT_LIST __version_V_${__version__}$RUNDIR/zar_bck"
UT_LIST="$UT_LIST __version_V_${__version__}$RUNDIR/zar_purge"
UT_LIST="$UT_LIST __version_V_${__version__}$RUNDIR/zar_rest"
UT_LIST="$UT_LIST zar_test_bck_01 zar_test_purge_01 zar_test_rest_01 zar_test_rest_02 zar_test_rest_03"
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
