#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on zar
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script cvt_script requires bash 4.0+!" && exit 4
[[ -d "$HOME/dev" ]] && HOME_DEV="$HOME/dev" || HOME_DEV="$HOME/devel"
PYPATH=$(echo -e "import os,sys;\nTDIR='"$TDIR"';HOME_DEV='"$HOME_DEV"'\nHOME=os.environ.get('HOME');y=os.path.join(HOME_DEV,'pypi');t=os.path.join(HOME,'tools')\ndef apl(l,p,x):\n  d2=os.path.join(p,x,x)\n  d1=os.path.join(p,x)\n  if os.path.isdir(d2):\n   l.append(d2)\n  elif os.path.isdir(d1):\n   l.append(d1)\nl=[TDIR]\nfor x in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n if TDIR.startswith(y):\n  apl(l,y,x)\n elif TDIR.startswith(t):\n  apl(l,t,x)\nl=l+os.environ['PATH'].split(':')\np=set()\npa=p.add\np=[x for x in l if x and x.startswith(HOME) and not (x in p or pa(x))]\nprint(' '.join(p))\n"|python)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

__version__=1.3.36


Z0BUG_setup() {
    fsql="zi01234567"
    fconf="$TESTDIR/zar.conf"
    bckdir=$TESTDIR/backups
    mkdir $bckdir &>/dev/null
    for fn in bckdb restdb purgedb; do
      rm -f $TESTDIR/$fn.log
    done
    rm -f $fconf
    rm -f bckdir/$fsql*
    echo "DBA_filter=$fsql" >>$fconf
    echo "DBA_keep_recent=7" >>$fconf
    echo "DBA_keep_monthly=3" >>$fconf
    echo "production_host=$HOSTNAME" >>$fconf
    echo "development_host=${HOSTNAME}-dev" >>$fconf
    echo "bck_db=yesterday" >>$fconf
    echo "PRD_num_days_before=0" >>$fconf
    for i in {10..1}; do
      dtc=$(date -d "today - $i day" +%Y%m%d)
      touch $bckdir/${fsql}-$dtc.sql
    done
    for i in {6..1}; do
      dtc=$(date -d "today - $i month" +%Y%m)01
      touch $bckdir/${fsql}-$dtc.sql
    done
}

Z0BUG_teardown() {
    bckdir=$TESTDIR/backups
    rm -f $bckdir/*.sql
}


Z0BUG_init
parseoptest -l$TESTDIR/test_tests.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts



UT1_LIST=
UT_LIST="__version_1_${__version__}$RUNDIR/zarrc"
UT_LIST="$UT_LIST __version_V_${__version__}$RUNDIR/zar_bck"
UT_LIST="$UT_LIST __version_V_${__version__}$RUNDIR/zar_purge"
UT_LIST="$UT_LIST __version_V_${__version__}$RUNDIR/zar_rest"
UT_LIST="$UT_LIST zar_test_bck_01 zar_test_purge_01 zar_test_rest_01 zar_test_rest_02 zar_test_rest_03"
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
