#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on travis emulator
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in "$TDIR" "." ".." "~" "/etc"; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
  fi
done
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
TRAVISDIR=$(findpkg "" "$TDIR . .. $HOME/dev" "_travis")
TRAVISLIBDIR=$(findpkg "travisrc" "$TDIR . .. $HOME/dev $HOME" "_travis")
if [ -z "$TRAVISLIBDIR" ]; then
  echo "Library file travisrc not found!"
  exit 2
fi
. $TRAVISLIBDIR
Z0TLIBDIR=$(findpkg "z0testrc" "$TDIR . .. $HOME/dev")
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.1.7


save_testenv() {
    local p
    for p in opt_dry_run opt_verbose TOOLS_PATH PRJNAME PRJPATH; do
      eval SAVE_$p=${!p}
    done
    SAVE_BRIEF="$1"
    for p in PKGPATHX; do
      if [ "$SAVE_BRIEF" != "brief" ]; then
        eval SAVE_$p=${!p}
      fi
    done
}

restore_testenv() {
    local p x
    for p in opt_dry_run opt_verbose TOOLS_PATH PRJNAME PRJPATH; do
      x=saved_$p
      eval $p=${!x}
      eval SAVE_$p=
    done
    for p in PKGPATHX; do
      x=saved_$p
      if [ "$SAVE_BRIEF" != "brief" ]; then
        eval $p=${!x}
      fi
      eval SAVE_$p=
    done
}


Z0BUG_init
parseoptest -l$TESTDIR/test_z0librc.log $@
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
sts=0

save_testenv
SAVE_PKGPATH=$PKGPATH
SAVE_PKGNAME=$PKGNAME
SAVE_REPOSNAME=$REPOSNAME
SAVE_VERSION=$VERSION
SAVE_ODOO_REPO=$ODOO_REPO

export opt_conf=$TESTDIR/test_travis.conf
touch $opt_conf
opt_verbose=-1
pkg=
DEV_ENVIRONMENT=$THIS
opts_travis
CFG_init
conf_default
link_cfg $TCONF
init_travis
tested_opt_verbose=$opt_verbose
tested_opt_dry_run=$opt_dry_run
restore_testenv
save_testenv
ci-test "echo \$TCONF" "$opt_conf" "$TCONF"
ci-test "echo \$FLOG_ECHO" "echo" "$FLOG_ECHO"
T=$(readlink -e $RUNDIR/..)
ci-test "echo \$PKGPATH" "$T" "$PKGPATH"
ci-test "echo \$repository" "local/" "$repository"
ci-test "echo \$test_mode" "1" "$test_mode"
ci-test "echo \$opt_dry_run" "1" "$tested_opt_dry_run"
ci-test "echo \$HOSTENV" "local" "$HOSTENV"
ci-test "echo \$opt_verbose" "1" "$tested_opt_verbose"

export opt_conf=$TESTDIR/test_travis.conf
if [ -f $opt_conf ]; then rm -f $opt_conf; fi
opt_verbose=2
pkg=
DEV_ENVIRONMENT=$THIS
opts_travis
CFG_init
conf_default
link_cfg $TCONF
init_travis
tested_opt_verbose=$opt_verbose
tested_opt_dry_run=$opt_dry_run
restore_testenv
save_testenv
ci-test "echo \$TCONF" "$TESTDIR/.travis.conf" "$TCONF"
ci-test "echo \$opt_verbose" "2" "$tested_opt_verbose"


TOOLS_PATH=~/dev/_travis
opt_verbose=1
opts=$(inherits_travis_opts "v")
restore_testenv
save_testenv
ci-test ". -v" "-v" "$opts"


TOOLS_PATH=~/maintainer-quality-tools/travis
opt_verbose=1
MQT_VERBOSE_MODE=
inherits_travis_opts "v" >/dev/null
restore_testenv
save_testenv
ci-test ". \$MQT_VERBOSE_MODE" "1" "$MQT_VERBOSE_MODE"


FOUT=$TESTDIR/test_lib.out
FTEST=$TESTDIR/test_lib.test
cat<<'EOF' >$FTEST
> coverage erase
> dropdb --if-exists openerp_template
> dropdb --if-exists openerp_test
> if [ -d /opt/odoo/dependencies ]; then rm -fR /opt/odoo/dependencies; fi
> if [ -L /opt/odoo/dependencies ]; then rm -f /opt/odoo/dependencies; fi
> if [ -L /opt/odoo/l10n_it_base-T.0 ]; then rm -f /opt/odoo/l10n_it_base-T.0; fi
> if [ -L /opt/odoo/odoo-T.0 ]; then rm -f /opt/odoo/odoo-T.0; fi
> cp_n_upd "/etc/odoo/odooT-server.conf"
> mkdir /opt/odoo/dependencies
> export INCLUDE=l10n_it_base
> ln -s /opt/odoo/odoo/T.0/l10n_italy /opt/odoo/dependencies/
> ln -s /opt/odoo/odoo/T.0 /opt/odoo/odoo-T.0
> ln -s /opt/odoo/dev/pypi/travis_emulator/l10n_it_base /opt/odoo/l10n_it_base-T.0
EOF
VERSION=T.0
ODOO_REPO=local/odoo
PRJNAME="Odoo"
REPOSNAME=l10n_italy
PKGNAME=l10n_it_base
PRJPATH=~/odoo/$VERSION/$REPOSNAME
PKGPATH=$PKGPATH/$PKGNAME
mkdir -p ~/odoo/$VERSION
mkdir -p $PRJPATH
mkdir -p $PKGPATH
opt_verbose=1
opt_dry_run=1
run_svr_test_init > $FOUT
restore_testenv
PKGPATH=$SAVE_PKGPATH
PKGNAME=$SAVE_PKGNAME
REPOSNAME=$SAVE_REPOSNAME
VERSION=$SAVE_VERSION
ODOO_REPO=$SAVE_ODOO_REPO
ci-test "run_svr_test_ini" "$FOUT" "$FTEST" "diff -qEbB"

if [ -f $FOUT ]; then rm -f $FOUT; fi
if [ -f $FTEST ]; then rm -f $FTEST; fi

if [ ${opt_dry_run:-0} -ne 0 ]; then
  echo "$ctr"
fi
exit $sts
