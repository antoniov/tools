#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on travis emulator
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../.. $HOME/dev $HOME/tools ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  elif [ -d $d/z0lib ] && [ -e $d/z0lib/z0librc ]; then
    . $d/z0lib/z0librc
    Z0LIBDIR=$d/z0lib
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $HOME/tools/zerobug $HOME/dev ${PYPATH//:/ } . .." "zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.2.1.31


save_testenv() {
    local p
    for p in opt_dry_run pkg opt_verbose opt_r opt_conf; do
      eval SAVE_$p=${!p}
    done
    LCLTEST_CWD=$PWD
    if [ "$1" == "run" ]; then
      cd $RUNDIR
    fi
}

restore_testenv() {
    local p x
    for p in opt_dry_run pkg opt_verbose opt_r opt_conf; do
      x=saved_$p
      eval $p=${!x}
      eval SAVE_$p=
    done
    cd $LCLTEST_CWD
}

result_testenv() {
    local p x
    for p in opt_dry_run pkg opt_verbose opt_r opt_conf; do
      eval tested_$p=${!p}
    done
    restore_testenv
    save_testenv
}

Z0BUG_setup() {
    LCLTEST_PRJNAME="travis_emulator"
    LCLTEST_REPOSNAME=travis_emulator
    LCLTEST_PRJPATH=$RUNDIR
    local PKGPATH=$PRJPATH/$PKGNAME
    LCLTEST_TMPDIR=$(readlink -e $RUNDIR/..)
    if [ -f $PWD/setup.py ]; then
      LCLTEST_SETUP=$PWD/setup.py
      rm -f $PWD/__openerp__.py
    else
      LCLTEST_SETUP=$LCLTEST_TMPDIR/setup.py
      rm -f $LCLTEST_TMPDIR/__openerp__.py
    fi
    LCLTEST_MQT_PATH=/opt/odoo/tools/maintainer-quality-tools/travis
    FOUT=$TESTDIR/test_lib.out
    FTEST=$TESTDIR/test_lib.test
    cat<<'EOF' >$FTEST
EOF
}

Z0BUG_teardown() {
    if [ -f $FOUT ]; then rm -f $FOUT; fi
    if [ -f $FTEST ]; then rm -f $FTEST; fi
}


test_01() {
    save_testenv
    local s sts res opts
    opt_conf=
    pkg=
    sts=0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      opts_travis "$pkg"
      result_testenv
    fi
    res=$TDIR/.travis.conf
    test_result "travis.conf" "$res" "$TCONF"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "travis.pkgpath" "$LCLTEST_TMPDIR" "$PKGPATH"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "travis.repository" "local" "$REMOTEREPO"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    restore_testenv
    return $sts
}

test_02() {
    save_testenv
    local s sts res opts
    opt_conf=
    pkg=
    sts=0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      opt_verbose=1
      PRJNAME=
      CFG_init
      conf_default
      init_travis
      result_testenv
    fi
    test_result "init_travis.dry_run" "" "$opts_dry_run"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.verbose" "-v" "$opts_verbose"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.FLOG_ECHO" "echo" "$FLOG_ECHO"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.setup" "$LCLTEST_SETUP" "$SETUP"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.reposname" "$LCLTEST_REPOSNAME" "$REPOSNAME"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.prjname" "$LCLTEST_PRJNAME" "$PRJNAME"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.prjpath" "$LCLTEST_PRJPATH" "$PRJPATH"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TOOLS_PATH=~/dev/_travis
      opt_verbose=1
      opts=$(inherits_travis_opts "v" "D")
      result_testenv
    fi
    test_result "init_travis opts" "-v" "$opts"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TOOLS_PATH=~/maintainer-quality-tools/travis
      opt_verbose=1
      MQT_VERBOSE_MODE=
      inherits_travis_opts "v" "T" >/dev/null
      result_testenv
    fi
    test_result "init_travis \$MQT_VERBOSE_MODE" "1" "$MQT_VERBOSE_MODE"
    restore_testenv
    return $sts
}


test_03() {
    save_testenv "run"
    local s sts res opts
    export opt_conf=$TESTDIR/test_travis.conf
    if [ -f $opt_conf ]; then rm -f $opt_conf; fi
    touch $opt_conf
    pkg=
    sts=0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      opts_travis "$pkg"
      result_testenv
    fi
    test_result "travis.conf" "$tested_opt_conf" "$TCONF"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    res=$LCLTEST_TMPDIR
    test_result "travis.pkgpath" "$res" "$PKGPATH"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "travis.repository" "local" "$REMOTEREPO"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    restore_testenv
    return $sts
}


test_04() {
    save_testenv "run"
    local s sts res opts
    opt_conf=
    pkg=
    sts=0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      opt_verbose=2
      opt_r=1
      TOOLS_PATH=
      PRJNAME=
      CFG_init
      conf_default
      init_travis
      result_testenv
    fi
    test_result "init_travis.dry_run" "" "$opts_dry_run"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.verbose" "-v" "$opts_verbose"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.FLOG_ECHO" "echo" "$FLOG_ECHO"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    # test_result "init_travis.setup" "$LCLTEST_SETUP" "$SETUP"
    # s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis.reposname" "$LCLTEST_REPOSNAME" "$REPOSNAME"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    # if [ -d $TDIR/_travis ]; then
    #   test_result "init_travis \$TOOLS_PATH" "$RUNDIR/_travis" "$TOOLS_PATH"
    # else
    #   test_result "init_travis \$TOOLS_PATH" "$HOME/dev/_travis" "$TOOLS_PATH"
    # fi
    # s=$?; [ ${s-0} -ne 0 ] && sts=$s
    test_result "init_travis \$MQT_PATH" "$LCLTEST_MQT_PATH" "$MQT_PATH"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      opt_verbose=1
      MQT_VERBOSE_MODE=
      TOOLS_PATH=~/maintainer-quality-tools/travis
      inherits_travis_opts "v" "T">/dev/null
      result_testenv
    fi
    test_result "init_travis \$MQT_VERBOSE_MODE" "1" "$MQT_VERBOSE_MODE"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      opt_verbose=1
      opt_dry_run=1
      prepare_env_travis
      run_svr_test_init > $FOUT
      result_testenv
    fi
    test_result "run_svr_test_ini" "$FOUT" "$FTEST" "diff -qEbB"
    s=$?; [ ${s-0} -ne 0 ] && sts=$s
    restore_testenv
    return $sts
}


Z0BUG_init
parseoptest -l$TESTDIR/test_travis_em.log "$@" "-JO"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_oeLib:-0} -ne 0 ]; then
  ODOOLIBDIR=$(findpkg odoorc "$TDIR $TDIR/.. $HOME/tools/clodoo $HOME/dev ${PYPATH//:/ } . .." "clodoo")
  if [ -z "$ODOOLIBDIR" ]; then
    echo "Library file odoorc not found!"
    exit 2
  fi
  . $ODOOLIBDIR
fi
if [ ${opt_tjLib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg travisrc "$TDIR $TDIR/.. $HOME/tools/travis_emulator $HOME/dev ${PYPATH//:/ } . .." "travis_emulator")
  if [ -z "$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . $TRAVISLIBDIR
fi






UT1_LIST=""
UT_LIST=""
Z0BUG_setup
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
