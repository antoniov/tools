#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on travis emulator
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. . .. $TDIR/../../z0lib /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. . .. $HOME/dev $TDIR/../../zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
__version__=0.1.12

test_01() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_01
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      rm -f $TESTDIR/res/*_01.out
      cat <<EOF >$TESTSRC
from osv import osv
import decimal_precision
from tools.translate import _
import netsvc
import pooler

report_sxw.report_sxw(
    'report.test_autopep8',
    'res.partner',
    './autopep8.mako',
    parser=autopep8)
EOF
      cat <<EOF >$TESTRES
from openerp.osv import osv
import openerp.addons.decimal_precision
from openerp.tools.translate import _
from openerp import netsvc
from openerp import pooler


report_sxw.report_sxw(
    'report.test_autopep8',
    'res.partner',
    './autopep8.mako',
    parser=autopep8)
EOF
      $RUNDIR/topep8 -q -u $TESTSRC -o $TESTOUT
    fi
    test_result "autopep8" "$TESTOUT" "$TESTRES" "diff -B"
}

Z0BUG_setup() {
    :
}


Z0BUG_init
parseoptest -l$TESTDIR/test_travis_em.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_tlib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg "travisrc" "$TDIR $TDIR/..")
  if [ -z "$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . $TRAVISLIBDIR
fi
UT1_LIST=""
UT_LIST=""
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
