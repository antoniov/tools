#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on travis emulator
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib . .. /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $TDIR/../zerobug $TDIR/../../zerobug  . .. $HOME/dev")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.1.14.10


test_01() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_01
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      rm -f $TESTDIR/res/*_01.out
      cat <<EOF >$TESTSRC
# (C) OpenERP (http://openerp.com)
import pdb
from osv import osv
import decimal_precision
from tools.translate import _
import netsvc
import pooler
from tndb import tndb

class res_user(osv.osv):
# This remark is longer than 80 characters in order to split a long line in two smaller lines
    def __init__(self):
        """ This help doc is longer than 80 characters in order to split a long line in two smaller lines """
        tndb.wstamp()
        pdb.set_trace()
        partner = pooler.get_pool(cr.dbname).get('res.partner')
        tndb.wlog('return',
                  partner)
        return (
            partner.name
            and partner.city
            or ''
        )

res_user()

report_sxw.report_sxw(
    'report.test_autopep8',
    'res.partner',
    './autopep8.mako',
    parser=autopep8)
EOF
      cat <<EOF >$TESTRES
# (C) Odoo (http://odoo.com)
# import pdb
from openerp import pooler
# from tndb import tndb


class res_user(orm.Model):
    # This remark is longer than 80 characters in order to split a long
    # line in two smaller lines
    def __init__(self):
        """ This help doc is longer than 80 characters in order to split a long
        line in two smaller lines """
        # tndb.wstamp()
        # pdb.set_trace()
        partner = pooler.get_pool(cr.dbname).get('res.partner')
        # tndb.wlog('return',
        #           partner)
        return (
            partner.name and
            partner.city or
            ''
        )


res_user()


report_sxw.report_sxw(
    'report.test_autopep8',
    'res.partner',
    './autopep8.mako',
    parser=autopep8)
EOF
      $RUNDIR/topep8 -q $TESTSRC -o $TESTOUT
    fi
    test_result "autopep8" "$TESTOUT" "$TESTRES" "diff"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTRES
# (C) Odoo (http://odoo.com)
# import pdb
from odoo import osv
import odoo.addons.decimal_precision
from odoo.tools.translate import _
from odoo import netsvc
from odoo import pooler
# from tndb import tndb


class res_user(models.Model):
    # This remark is longer than 80 characters in order to split a long
    # line in two smaller lines
    def __init__(self):
        """ This help doc is longer than 80 characters in order to split a long
        line in two smaller lines """
        # tndb.wstamp()
        # pdb.set_trace()
        partner = pooler.get_pool(cr.dbname).get('res.partner')
        # tndb.wlog('return',
        #           partner)
        return (
            partner.name and
            partner.city or
            ''
        )


res_user()


report_sxw.report_sxw(
    'report.test_autopep8',
    'res.partner',
    './autopep8.mako',
    parser=autopep8)
EOF
      $RUNDIR/topep8 -q -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "autopep8 -b10.0" "$TESTOUT" "$TESTRES" "diff"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTSRC
class res_user(models.Model):
    def __init__(self):
        return (
            partner.name and
            partner.city or
            ''
        )
EOF
      cat <<EOF >$TESTRES


class res_user(osv.osv):
    def __init__(self):
        return (
            partner.name and
            partner.city or
            ''
        )
EOF
      $RUNDIR/topep8 -q -b6.1 $TESTSRC -o $TESTOUT
    fi
    test_result "autopep8 -b6.1" "$TESTOUT" "$TESTRES" "diff"
}

test_02() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_02
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      rm -f $TESTDIR/res/*_02.out
      cat <<EOF >$TESTSRC
# import pdb
from openerp.osv import osv
import openerp.addons.decimal_precision
from openerp.tools.translate import _
from openerp import netsvc
from openerp import pooler
# from tndb import tndb

const1 = 10
const2 = 20

class res_user(osv.osv_memory):
    def __init__(self):
        # tndb.wstamp()
        # pdb.set_trace()
        partner = pooler.get_pool(cr.dbname).get('res.partner')
        # tndb.wlog('return',
        #           partner)
        return (
            partner.name
            and partner.city
            or ''
        )


res_user()


report_sxw.report_sxw(
    'report.test_autopep8',
    'res.partner',
    './autopep8.mako',
    parser=autopep8)
EOF
      cat <<EOF >$TESTRES
import pdb
from openerp import pooler
from tndb import tndb


const1 = 10
const2 = 20


class ResUser(orm.TransientModel):
    def __init__(self):
        tndb.wstamp()
        pdb.set_trace()
        partner = pooler.get_pool(cr.dbname).get('res.partner')
        tndb.wlog('return',
                  partner)
        return (
            partner.name and
            partner.city or
            ''
        )


ResUser()


report_sxw.report_sxw(
    'report.test_autopep8',
    'res.partner',
    './autopep8.mako',
    parser=autopep8)
EOF
      $RUNDIR/topep8 -qB -c $TESTSRC -o $TESTOUT
    fi
    test_result "autopep8 -Bc" "$TESTOUT" "$TESTRES" "diff"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTRES
import pdb
from odoo import osv
import odoo.addons.decimal_precision
from odoo.tools.translate import _
from odoo import netsvc
from odoo import pooler
from tndb import tndb


const1 = 10
const2 = 20


class ResUser(models.TransientModel):
    def __init__(self):
        tndb.wstamp()
        pdb.set_trace()
        partner = pooler.get_pool(cr.dbname).get('res.partner')
        tndb.wlog('return',
                  partner)
        return (
            partner.name and
            partner.city or
            ''
        )


ResUser()


report_sxw.report_sxw(
    'report.test_autopep8',
    'res.partner',
    './autopep8.mako',
    parser=autopep8)
EOF
      $RUNDIR/topep8 -qBc -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "autopep8 -Bc -b10.0" "$TESTOUT" "$TESTRES" "diff"
}

test_03() {
    local TESTOUT TESTRES TESTFN
    TESTFN=test_autopep_01
    TESTSRC=$TESTDIR/res/$TESTFN.py
    TESTRES=$TESTDIR/res/$TESTFN.test
    TESTOUT=$TESTDIR/res/$TESTFN.out
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      rm -f $TESTDIR/res/*_01.out
      cat <<EOF >$TESTSRC
from openerp.osv import fields, orm

class res_user(osv.osv):
    _columns = {
        'is_base': fields.boolean()
    }
EOF
      cat <<EOF >$TESTRES
from openerp.osv import fields


class res_user(orm.Model):
    _columns = {
        'is_base': fields.boolean()
    }
EOF
      $RUNDIR/topep8 -q -b8.0 $TESTSRC -o $TESTOUT
    fi
    test_result "autopep8 -b8.0" "$TESTOUT" "$TESTRES" "diff"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      cat <<EOF >$TESTRES
from odoo import fields, models


class res_user(models.Model):
    _columns = {
        'is_base': fields.boolean()
    }
EOF
      $RUNDIR/topep8 -q -b10.0 $TESTSRC -o $TESTOUT
    fi
    test_result "autopep8 -b10.0" "$TESTOUT" "$TESTRES" "diff"
}

Z0BUG_setup() {
    :
}


Z0BUG_init
parseoptest -l$TESTDIR/test_travis_em.log "$@ -J"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_tlib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg travisrc "$TDIR $TDIR/.. $TDIR/../travis_emulator $TDIR/../../travis_emulator . .. $HOME/dev")
  if [ -z "$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . $TRAVISLIBDIR
fi
UT1_LIST=""
UT_LIST=""
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
