#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests for submodule of travis_emulator module
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
if [ -d $TDIR/tests ]; then
  TESTDIR=$TDIR/tests
  RUNDIR=$TDIR
elif [ -d $TDIR/../tests ]; then
  TESTDIR=$TDIR
  RUNDIR=$TDIR/..
elif [ -d ./tests ]; then
  TESTDIR=./tests
  RUNDIR=./
elif [ -d ../tests ]; then
  TESTDIR=./
  RUNDIR=../
else
  TESTDIR=$TDIR
  RUNDIR=$TDIR/..
fi
if [ -d $TDIR/_travis ]; then
  TRAVISDIR=$TDIR
elif [ -d $TDIR/../_travis ]; then
  TRAVISDIR=$TDIR/..
elif [ -d ./_travis ]; then
  TRAVISDIR=./
elif [ -d ../_travis ]; then
  TRAVISDIR=../
else
  TRAVISDIR=~/dev/_travis
fi
if [ -e $TDIR/z0librc ]; then
. $TDIR/z0librc
elif [ -e ./z0librc ]; then
. ./z0librc
elif [ -e ../z0librc ]; then
. ../z0librc
elif [ -e ~/z0librc ]; then
. ~/z0librc
else
. /etc/z0librc
fi
if [ -e $TDIR/z0testrc ]; then
. $TDIR/z0testrc
elif [ -e ./z0testrc ]; then
. ./z0testrc
elif [ -e ../z0testrc ]; then
. ../z0testrc
else
. ~/dev/z0testrc
fi
TESTDIR=$(readlink -e $TESTDIR)
RUNDIR=$(readlink -e $RUNDIR)
TRAVISDIR=$(readlink -e $TRAVISDIR)

__version__=0.1.20
parseoptest -l$TESTDIR/test_z0librc.log $@
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
sts=0


$(init_cfg)
$(active_cfg)
FCONF="$TESTDIR/test.conf"

CRONCMD="$RUNDIR/cronow"
TESTOUT=$TESTDIR/cronow.out
TESTTMP=$TESTDIR/cronow.tmp
TESTRES=$TESTDIR/cronow.test
TESTSH=$TESTDIR/cronow.test.sh
TESTNOP=$TESTDIR/cronow.nop.sh
TESTOUCH=$TESTDIR/cron.touch
TESTSAVE=$TESTDIR/cronow.saved
if [ ${opt_dry_run:-0} -eq 0 ]; then
  if [ -f $TESTSAVE ]; then
    dtf=$(stat $RUNDIR/cronow -c %y|awk '{print $1}')
    tod=$(date +%Y-%m-%d)
    if [ "$dtf" != "$tod" ]; then
      crontab -l>$TESTSAVE
    fi
  else
    crontab -l>$TESTSAVE
  fi
  cat <<EOF >$TESTNOP
# Script to validate unit test of cronow
true
EOF
  cat <<EOF >$TESTSH
# Script to validate unit test of cronow
date>$TESTOUCH
EOF
  chmod +x $TESTSH
  if [ -f "$TESTOUCH" ]; then
    rm -f $TESTOUCH
  fi
  echo -e "00 00 * * * $TESTNOP\n10 00 * * * $TESTSH"|crontab
fi

if [ ${opt_dry_run:-0} -eq 0 ]; then
 cat <<EOF >$TESTRES
Usage: cronow [-heflnR][-s regex][-Vvw]
Run now a selected cron statement from crontab
 -h             this help
 -e             edit crontab [after selection or crash]
 -f             force execution after crash
 -l             list crontab entries
 -n             do nothing (dry-run)
 -R             rollbak from cron execution (never use this option!)
 -s regex       select statement to execute now
 -V             show version
 -v             verbose mode
 -w             wait for job activation

(C) 2015-2016 by zeroincombenze(R)
http://wiki.zeroincombenze.org/en/Linux/dev
Author: antoniomaria.vigliotti@gmail.com
EOF
  eval $CRONCMD>$TESTOUT
fi
ci-test "cronow" "$TESTOUT" "$TESTRES" "diff -Ztb"

if [ ${opt_dry_run:-0} -eq 0 ]; then
  crontab -l>$TESTRES
  eval $CRONCMD -l>$TESTOUT
fi
ci-test "cronow -l" "$TESTOUT" "$TESTRES" "diff -Ztb"
if [ ${opt_dry_run:-0} -eq 0 ]; then
  x=$(basename $TESTSH)
  eval $CRONCMD -s $x
  cp $TESTRES $TESTTMP
  echo "****************************************************************************">>$TESTTMP
  echo "cronow is waiting for cron activation, please do not execute crontab command!">>$TESTTMP
  eval $CRONCMD -l>$TESTOUT
fi
ci-test "cronow -s -l" "$TESTOUT" "$TESTTMP" "diff -Ztb"
if [ ${opt_dry_run:-0} -eq 0 ]; then
  eval $CRONCMD -R
  eval $CRONCMD -l>$TESTOUT
fi
ci-test "cronow -R" "$TESTOUT" "$TESTRES" "diff -Ztb"
if [ ${opt_dry_run:-0} -eq 0 ]; then
  x=$(basename $TESTSH)
  eval $CRONCMD -s $x
  eval $CRONCMD -w
  # echo "Waiting for execution in 70 seconds: please do not halt the test"
  # sleep 70
fi
if [ -f "$TESTOUCH" -o ${opt_dry_run:-0} -ne 0 ]; then
  RES=True
else
  RES=False
fi
ci-test "cronow -s" "True" "$RES"

eval $CRONCMD -l>$TESTOUT
ci-test "cronow -l" "$TESTOUT" "$TESTRES" "diff -Ztb"

if [ ${opt_dry_run:-0} -eq 0 ]; then
  for fn in $TESTOUT $TESTTMP $TESTRES $TESTSH $TESTNOP $TESTOUCH; do
    if [ -f "$fn" ]; then
      rm -f $fn
    fi
  done
fi


if [ ${opt_dry_run:-0} -eq 0 ]; then
  cat $TESTSAVE|crontab
fi

if [ ${opt_dry_run:-0} -ne 0 ]; then
  echo "$ctr"
fi
exit $sts
