#! /bin/bash
# -*- coding: utf-8 -*-
# Regression tests on travis emulator
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib . .. /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $TDIR/../zerobug $TDIR/../../zerobug  . .. $HOME/dev")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
__version__=0.1.77


test_result () {
  ((ctr++))
  wlog "Test $ctr: $1"
  if [ "$4" ]; then
    if [ "$($4 $2 $3)" ]; then
      echo "Test failed: $4 '$2' '$3'"
      exit 1
    fi
  else
    if [ "$2" != "$3" ]; then
      echo "Test failed: expected '$2', found '$3'"
      exit 1
    fi
  fi
}


testpath () {
  echo "**************************************************************************************"
  #echo "* $1"
  cd $1
  # echo "-->$(dir setup.py)"
  # make -f $MAKEF chkconfig
  p=$(make -f $MAKEF chkconfig|grep "Hosted"|awk -F"=" '{print $2}'|tr -d "\"', \r")
  test_result "$1: Hosted" "local" "$p"
  p2=$(make -f $MAKEF chkconfig|grep "Project name"|awk -F"=" '{print $2}'|tr -d "\"', \r")
  test_result "$1: Project name" "$2" "$p2"
  p3=$(make -f $MAKEF chkconfig|grep "Branch"|awk -F"=" '{print $2}'|tr -d "\"', \r")
  test_result "$1: Branch" "$3" "$p3"
  p4=$(make -f $MAKEF chkconfig|grep "Package name"|awk -F"=" '{print $2}'|tr -d "\"', \r")
  test_result "$1: Package name" "$4" "$p4"
  p5=$(make -f $MAKEF chkconfig|grep "Version"|awk -F"=" '{print $2}'|tr -d "\"', \r")
  test_result "$1: Version" "$5" "$p5"
  p6=$(make -f $MAKEF chkconfig|grep "Setup file"|awk -F"=" '{print $2}'|tr -d "\"', \r")
  test_result "$1: Setup file" "$6" "$p6"
  p7=$(make -f $MAKEF chkconfig|grep "Project path"|awk -F"=" '{print $2}'|tr -d "\"', \r")
  test_result "$1: Project path" "$7" "$p7"
  p8=$(make -f $MAKEF chkconfig|grep "Package path"|awk -F"=" '{print $2}'|tr -d "\"', \r")
  test_result "$1: Package path" "$8" "$p8"
  # read
}

# Previous test_wlog executed 49 unit test
#if [ ${ctr:-0} -eq 0 ]; then
  ctr=50
#fi
if [ -z "$FLOG" ]; then
  set_tlog_file "$TESTDIR/test_travis_em.log" "" "echo"
fi

MAKEF=/opt/odoo/dev/pypi/travis_emulator/travis_emulator/Makefile
# PYTHONPATH=/opt/odoo/dev/pypi/travis_emulator/travis_emulator
export DEVPATH=/opt/odoo/dev/pypi/travis_emulator/travis_emulator
OS_VER=0.2.1.60
BB_VER=7.0.0.2
echo "**************************************************************************************"
echo "Warning: test could fail if os version is not $OS_VER or l10n_it_bbone is not $BB_VER"

xtlver=$(grep "#__version__" $MAKEF|head -n1|awk -F\= '{print $2}')
test_result "version" "$__version__" "$xtlver"

WD=/opt/openerp/7.0/zeroincombenze
if [ -d "$WD" ]; then
  p2=Odoo
  p3=7.0
  p4="()"
  p5=$p3
  p6=__openerp__.py
  p7=/opt/openerp/7.0/zeroincombenze
  p8=$p7
  testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"
fi

WD=/opt/openerp/7.0/zeroincombenze/l10n_it_bbone
if [ -d "$WD" ]; then
  p2=Odoo
  p3=7.0
  p4="l10n_it_bbone(ItalianLocalization-Base)"
  p5=$BB_VER
  p6=__openerp__.py
  p7=/opt/openerp/7.0/zeroincombenze
  p8=$WD
 testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"
fi

WD=/opt/odoo/8.0
p2=Odoo
p3=8.0
p4="()"
p5=$p3
p6=__openerp__.py
p7=$WD
p8=$p7
testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

WD=/opt/odoo/7.0
p2=Odoo
p3=7.0
p4="()"
p5=$p3
p6=__openerp__.py
p7=$WD
p8=$p7
testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

WD=/opt/odoo/dev/pypi/os0
p2=os0
p3=
p4="$p2($p2)"
p5=$OS_VER
p6=/opt/odoo/dev/pypi/os0/setup.py
p7=/opt/odoo/dev/pypi/os0/os0
p8=/opt/odoo/dev/pypi/os0
testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

WD=/opt/odoo/dev/pypi/os0/os0
p2=os0
p3=
p4="$p2($p2)"
p5=$OS_VER
p6=/opt/odoo/dev/pypi/os0/setup.py
p7=/opt/odoo/dev/pypi/os0/os0
p8=/opt/odoo/dev/pypi/os0
testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

echo "**************************************************************************************"
