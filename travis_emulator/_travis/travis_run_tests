#! /bin/bash
# -*- coding: utf-8 -*-
#
# Run test in travis environment
# This script is default script to run syntax and regression tests
# Should be replaced by OCA maintainer-quality-tools os something like it!
#
# This free software is released under GNU Affero GPL3
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2016 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
if [ -e $TDIR/z0librc ]; then
. $TDIR/z0librc
elif [ -e ./z0librc ]; then
. ./z0librc
elif [ -e ../z0librc ]; then
. ../z0librc
elif [ -e ~/z0librc ]; then
. ~/z0librc
elif [ -f /etc/z0librc ]; then
. /etc/z0librc
else
  echo "Library file z0librc not found!"
  exit $STS_FAILED
fi
if [ -f $TDIR/travisrc ]; then
. $TDIR/travisrc
elif [ -f $TDIR/../travisrc ]; then
. $TDIR/../travisrc
elif [ -f ./travisrc ]; then
. ./travisrc
elif [ -f ~/travisrc ]; then
. ~/travisrc
else
  echo "Library file travisrc not found!"
  exit $STS_FAILED
fi

__version__=0.1.9

do_test () {
    if [ $opt_verbose -gt 0 ]; then
      echo "\$ do_test"
    fi
    if [ "$PRJNAME" == "Odoo" ]; then
      run_server_test
    else
      run_regression_test
    fi
    sts=$?
    return $sts
}


OPTOPTS=(h        c        j        K         n            q           r     T        t         V           v)
OPTDEST=(opt_help opt_conf opt_dprj opt_check opt_dry_run  opt_verbose opt_r opt_regr test_mode opt_version opt_verbose)
OPTACTI=(1        "="      1        1         1            0           1     1        1         "*>"        "+")
OPTDEFL=(0        ""       0        0         0            -1          0     0        0         ""          -1)
OPTMETA=("help"   "file"   "dprj"   "check"   "do nothing" "qiet"     "rxt"  "test"   "test"    "version"   "verbose")
OPTHELP=("this help"\
 "configuration file (def .travis.conf)"\
 "execute tests in project dir rather in test dir"\
 "do bash, flake8 and pylint checks"\
 "do nothing (dry-run)"\
 "silent mode"\
 "run rescricted mode (w/o parsing travis.yml file)"\
 "do regression tests"\
 "test mode (implies dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=(pkg PRJNAME)

parseoptargs "$@"
if [ "$opt_version" ]; then
  echo "$__version__"
  exit 0
fi
if [ $opt_help -gt 0 ]; then
  print_help "Run test in travis environment"\
  "(C) 2015-2016 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Linux/dev\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi

if [ "${MQT_DRY_RUN:-0}" == "1" ]; then opt_dry_run=1; fi
if [ "${MQT_VERBOSE_MODE:-0}" == "1" ]; then opt_verbose=1; fi
if [ "${MQT_VERBOSE_MODE:-1}" == "0" ]; then opt_verbose=0; fi
opts_travis
$(init_cfg)
$(active_cfg)
conf_default
link_cfg $TCONF
init_travis
if [ $opt_verbose -gt 1 ]; then set -x; fi
prepare_env_travis ""
sts=$STS_SUCCESS
if [ $test_mode -gt 0 ]; then
  do_chkconfig
  exit $STS_SUCCESS
fi
check_4_travis

if [ ${opt_regr:-0} -gt 0 ]; then
  LINT_CHECK="0"
  TESTS="1"
fi
if [ ${opt_check:-0} -gt 0 ]; then
  BASH_CHECK="1"
  LINT_CHECK="1"
fi
if [ "${BASH_CHECK:-0}" == "1" ]; then BASH_CHECK_ENABLED=1; else BASH_CHECK_ENABLED=0; fi
if [ "${LINT_CHECK:-0}" == "1" ]; then LINT_CHECK_ENABLED=1; else LINT_CHECK_ENABLED=0; fi
if [ "${LINT_CHECK:-1}" == "0" ]; then LINT_CHECK_DISABLED=1; else LINT_CHECK_DISABLED=0; fi
if [ "${TESTS:-0}" == "1" ]; then TEST_CHECK_ENABLED=1; else TEST_CHECK_ENABLED=0; fi
if [ -z "${TESTS}" ]; then TESTS_UNSPECIFIED=1; else TESTS_UNSPECIFIED=0; fi
if [ "${TRANSIFEX_CHECK:-0}" == "1" ]; then TRANSIFEX_CHECK_ENABLED=1; else TRANSIFEX_CHECK_ENABLED=0; fi
if [ $BASH_CHECK_ENABLED -gt 0 ]; then
  please_test_bash
  sts_bash=$?
else
  sts_bash=127
fi
if [ $LINT_CHECK_DISABLED -eq 0 ]; then
  please_test_flake8
  sts_flake8=$?
  please_test_pylint
  sts_pylint=$?
  if [ $sts_bash -ne 127 ]; then
    sts=$(($sts_bash || $sts_flake8 || $sts_pylint))
  else
    sts=$(($sts_flake8 || $sts_pylint))
  fi
else
  sts=$STS_SUCCESS
fi
if [ $sts -eq $STS_SUCCESS ]; then
  if [ $TESTS_UNSPECIFIED -gt 0 -a $LINT_CHECK_ENABLED -eq 0 ]; then
    do_test
    test_sts=$?
  elif [ $TEST_CHECK_ENABLED -gt 0 ]; then
    do_test
    test_sts=$?
  fi
  sts=$test_sts
else
  test_sts=
fi
do_summary "$sts_bash" "$sts_flake8" "$sts_pylint" "$test_sts"
exit $sts
