#! /bin/bash
# -*- coding: utf-8 -*-
#
# oe_wathcdog
# Odoo service watchdog
# Continously check for Odoo service runnig
#
# This free software is released under GNU Affero GPL3
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2017 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in "$TDIR" "$TDIR/.." "." ".." "$HOME/tools/z0lib" "/etc"; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TRAVISLIBDIR=$(findpkg "travisrc" "$TDIR . .. $HOME/dev $HOME/tools/travis_emulator")
if [ -z "$TRAVISLIBDIR" ]; then
  echo "Library file travisrc not found!"
  exit 2
fi
. $TRAVISLIBDIR
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)

__version__=0.1.22


detached_login () {
    if [ $opt_cron -gt 0 -a "$SHELL" == "/bin/sh" ]; then
      if [ $opt_dry_run -eq 0 ]; then
        fqcmd=$(readlink -f $0)
        SHELL=/bin/bash exec "$fqcmd" "$@"
      fi
    elif [ $opt_cron -gt 0 ]; then
      . ~/.bash_profile
    fi
    if [ $(echo ":$PATH:"|grep -v "/usr/local/bin" 2>/dev/null) ]; then
      export PATH=/usr/local/bin:$PATH
    fi
    if [ $(echo ":$PATH:"|grep -v "/dev/" 2>/dev/null) ]; then
      if [ -d ~/dev ]; then
        export PATH=$PATH:~/dev
      else
        export PATH=$PATH:/opt/odoo/dev
      fi
    fi
}


kill_daemon () {
  local pid=$(netstat -atunp|grep "8069.*LISTEN"|awk '{print $7}'|awk -F/ '{print $1}')
  if [ -n "$pid" ]; then
    kill $pid
  fi
}


set_db_list () {
    if [ -z "$DBLIST" ]; then
      wlog "Creating DB list ..."
      DBLIST=$(psql -Uodoo -l|grep "^ *\(demo\|zero.*\|zi[0-9]\{8\}\) *. odoo *"|awk '{print $1}'|tr "\n" " ")
      DB_ix=0
    fi
}

select_db () {
    set_db_list
    local c=0
    dbname=""
    for d in $DBLIST; do
      if [ $c -eq $DB_ix ]; then
        ((DB_ix++))
        dbname="$d"
        break
      fi
      ((c++))
    done
}

test_db () {
    if [ -n "$opt_DB" ]; then
      dbname="$opt_DB"
    else
      select_db
      if [ -z "$dbname" ]; then
        DBLIST=""
        select_db
      fi
      if [ -z "$dbname" ]; then
        dbname="demo"
      fi
    fi
    if [ $DEBUG_MODE -ne 0 ]; then
      elog "clodoo.py $opts -d=$dbname -A=unit_test"
    fi
    clodoo.py $opts -d=$dbname -A=unit_test
    sts=$?
}


test_hang_up () {
    HANG_UP=$(cat $ODOO_LOG|tail -n$HUPTST_TAIL|grep "RuntimeError: maximum recursion depth exceeded")
    if [ -z "$HANG_UP" ]; then
      HANG_UP=$(cat $ODOO_LOG|tail -n$HUPTST_TAIL|grep "FATAL: *connection slots.*reserved for.*superuser")
      if [ -n "$HANG_UP" ]; then
        local c=$(~/pg_db_active -c)
        if [ $c -gt 10 ]; then
          let c="$c-10"
        fi
        ~/pg_db_active -k -u $c>>$LOGFILE
      fi
    fi
}

conf_default () {
    set_cfg_def "DEV_HOST" "shsdev16"
    set_cfg_def "PRD_HOST" "shsprd14"
    set_cfg_def "ODOO_SETUP" "__openerp__.py"
    set_cfg_def "svc_name" "odoo-server"
    set_cfg_def "CLODIR" "/opt/odoo/clodoo"
    set_cfg_def "CLOBIN" "/opt/odoo/tools/clodoo"
    set_cfg_def "ODOO_CONF" "/opt/odoo/odoo-server.conf"
    set_cfg_def "ODOO_LOG" "/var/log/odoo/openerp-server.log"
    set_cfg_def "MAX_RETRY" "3"
    set_cfg_def "TIME_SLEEP" "90"
    set_cfg_def "HELLO_CTR" "21"
    set_cfg_def "HUPTST_CTR" "3"
    set_cfg_def "HUPTST_TAIL" "0"
    set_cfg_def "DEBUG_MODE" "0"
}



OPTOPTS=(h        D      K        n            s            V           v           X)
OPTDEST=(opt_help opt_DB opt_cron opt_dry_run  opt_svc_name opt_version opt_verbose opt_lxs)
OPTACTI=(1        "=>"   "1>"     "1>"         "=>"         "*>"        1           "1>")
OPTDEFL=(1        ""     0        0            ""           ""          0           0)
OPTMETA=("help"   "db"   "cron"   "do nothing" "svc_name"   "version"   "verbose"   "")
OPTHELP=("this help"\
 "DB to test"\
 "run in cron environment"\
 "do nothing (dry-run)"\
 "service name"\
 "show version"\
 "verbose mode"\
 "run continuosly")
OPTARGS=()

parseoptargs $@
if [ "$opt_version" ]
then
  echo "$__version__"
  exit 0
fi
if [ $opt_help -gt 0 ]
then
  print_help "Odoo watchdog"\
  "(C) 2016 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Odoo\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
PIDFILE=/var/run/odoo/oe_watchdog.pid
LOGFILE=/var/log/odoo/oe_watchdog.log
if [[ -t 0 || -p /dev/stdin ]]; then
   LECHO=echo
else
   LECHO=
fi
set_tlog_file "$LOGFILE" "" "$LECHO"
if [ $opt_cron -gt 0 ]; then
  chmod +r $LOGFILE
  wlog "Run cron mode"
  detached_login "$@"
  wlog "$PATH"
fi
if [ $opt_lxs -gt 0 ]; then
  chmod +r $LOGFILE
  echo $$ > $PIDFILE
  wlog "Odoo server watchdog $__version__ starting ..."
fi

opts_travis
eval $(init_cfg)
eval $(active_cfg)
conf_default
TCONF=/etc/odoo/oe_watchdog.conf
if [ ! -f $TCONF -a ! -f $TCONF.sample ]; then
  TCONF=/etc/oe_watchdog.conf
fi
if [ ! -f $TCONF -a ! -f $TCONF.sample ]; then
  if [ -d /etc/odoo ]; then
    TCONF=/etc/odoo/oe_watchdog.conf
  else
    TCONF=/etc/oe_watchdog.conf
  fi
fi
link_cfg $TCONF
init_travis
prepare_env_travis ""
sts=$STS_SUCCESS

if [ -n "$opt_svc_name" ]; then
  svc_name=$opt_svc_name
else
  svc_name=$(get_cfg_value "" "svc_name")
fi
CLODIR=$(get_cfg_value "" "CLODIR")
CLOBIN=$(get_cfg_value "" "CLOBIN")
ODOO_CONF=$(get_cfg_value "" "ODOO_CONF")
ODOO_LOG=$(get_cfg_value "" "ODOO_LOG")
MAX_RETRY=$(get_cfg_value "" "MAX_RETRY")
if [ $MAX_RETRY -gt 5 -o $MAX_RETRY -lt 1 ]; then
  MAX_RETRY=3
fi
TIME_SLEEP=$(get_cfg_value "" "TIME_SLEEP")
if [ $TIME_SLEEP -gt 300 -o $TIME_SLEEP -lt 30 ]; then
  TIME_SLEEP=90
fi
HELLO_CTR=$(get_cfg_value "" "HELLO_CTR")
if [ $HELLO_CTR -gt 30 -o $HELLO_CTR -lt 3 ]; then
  TIME_SLEEP=21
fi
HUPTST_CTR=$(get_cfg_value "" "HUPTST_CTR")
if [ $HUPTST_CTR -gt 30 -o $HUPTST_CTR -lt 3 ]; then
  HUPTST_CTR=7
fi
HUPTST_TAIL=$(get_cfg_value "" "HUPTST_TAIL")
if [ $HUPTST_TAIL -gt 300 -o $HUPTST_TAIL -lt 75 ]; then
  HUPTST_TAIL=$TIME_SLEEP
  if [ $HUPTST_TAIL -lt 75 ]; then
    HUPTST_TAIL=75
  fi
fi
DEBUG_MODE=$(get_cfg_value "" "DEBUG_MODE")
if [ $DEBUG_MODE -ne 0 ]; then
  set_tlog_file "$LOGFILE" "" "echo"
fi
# PG_MAX_SESS=$(get_cfg_value "" "PG_MAX_SESS")
# if [ $PG_MAX_SESS -gt 500 -o $PG_MAX_SESS -lt 50 ]; then
#   PG_MAX_SESS=100
# fi
if [ ! -d $CLODIR ]; then
  wlog "Directory $CLODIR not found!"
  exit 1
fi
clodir=$CLODIR/oe_watchdog
if [ ! -d $clodir ]; then
  mkdir $clodir
fi
cd $clodir
if [ ! -f clodoo.conf ]; then
  cat <<EOF >clodoo.conf
[options]
actions=unit_test
login_user=zeroadm
login_password=Wg"0JK!P
dbfilter=.*
EOF
fi
DBLIST=""
if [ $opt_verbose -gt -0 ]; then
   opts=-v
else
   opts=-q
fi
wlog "CLODIR=$clodir"
wlog "CLOBIN=$CLOBIN"
wlog "SVC_NAME=$svc_name"
wlog "ODOO_CONF=$ODOO_CONF"
wlog "ODOO_LOG=$ODOO_LOG"
wlog "MAX_RETRY=$MAX_RETRY"
wlog "TIME_SLEEP=$TIME_SLEEP"
wlog "HELLO_CTR=$HELLO_CTR"
wlog "HUPTST_CTR=$HUPTST_CTR"
wlog "HUPTST_TAIL=$HUPTST_TAIL"
# wlog "PG_MAX_SESS=$PG_MAX_SESS"
if [ $opt_lxs -gt 0 ]; then
  ctr=5256000
else
  ctr=1
fi
helloctr=0
huptstctr=0
OK_ctr=0
FAIL_ctr=0
TOT_OK_ctr=0
TOT_FAIL_ctr=0
DB_ix=0
PATH=$CLOBIN:$PATH
while [ $ctr -gt 0 ]; do
  if [ $DEBUG_MODE -ne 0 ]; then
     ~/pg_db_active -k -v >>$LOGFILE
  else
     ~/pg_db_active -k >>$LOGFILE
  fi
  test_db
  HANG_UP=
  if [ $sts -ne 0 ]; then
    dt=$(date)
    wlog "$dt Warning: invalid response"
    test_hang_up
  elif [ $huptstctr -eq 0 ]; then
    test_hang_up
    huptstctr=$HUPTST_CTR
  else
    ((huptstctr--))
  fi
  if [ -n "$HANG_UP" ]; then
    ctr2=0
    huptstctr=$HUPTST_CTR
    sts=1
    dt=$(date)
    wlog "$dt Warning: hang-up detected"
  else
    ctr2=$MAX_RETRY
  fi
  while [ $sts -ne 0 -a $ctr2 -gt 0 ]; do
    ((ctr2--))
    sleep 5
    test_db
  done
  if [ $sts -ne 0 ]; then
    OK_ctr=0
    ((FAIL_ctr++))
    ((TOT_FAIL_ctr++))
    service $svc_name restart>>$LOGFILE
    dt=$(date)
    wlog "$dt $HANG_UP"
  else
    ((OK_ctr++))
    FAIL_ctr=0
    ((TOT_OK_ctr++))
  fi
  if [ $FAIL_ctr -ge 3 ]; then
    wlog "???? SERVICE FAILURE ????"
    service $svc_name stop>>$LOGFILE
    sleep 15
    kill_daemon
    sleep 15
    service $svc_name start>>$LOGFILE
  fi
  ((ctr--))
  if [ $ctr -gt 0 ]; then
    if [ $helloctr -eq 0 ]; then
      helloctr=$HELLO_CTR
      wlog "Odoo server watchdog $__version__ is running"
    else
      ((helloctr--))
    fi
    sleep $TIME_SLEEP
  fi
done
exit $sts
