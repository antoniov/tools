#! /bin/bash
# -*- coding: utf-8 -*-
# Version file copy
# Make copy of file to another Odoo version
#
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2016 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com
# This free software is released under GNU Affero GPL3

if [ -f z0librc ]; then
. ./z0librc
elif [ -f ~/z0librc ]; then
. ~/z0librc
elif [ -f /etc/z0librc ]; then
. /etc/z0librc
else
  echo "Libreria z0librc non trovata!"
  exit 1
fi

__version__="0.1.7"

get_odoo_ver() {
  local i=
  local v=
  local p=$1
  if [ -z "$1" ]; then
    p=$PWD
  fi
  for i in {2..4}; do
    local t=$(echo "$p"|awk -F/ '{ print $'$i'}')
    if [ -z "$t" ]; then
      break
    elif [ "$t" == "7.0" -o "$t" == "8.0" -o "$t" == "9.0" -o "$t" == "10.0" ]; then
      local v=$t
      break
    else
      v=$(echo "$t"|grep -Eo '[0-9]+\.[0-9]+')
      if [ -n "$v" ]; then
        break
      fi
      v=$(echo "$t"|grep -Eo '[vV][0-9]+')
      if [ -n "$v" ]; then
        v=$V{1:}.0
        break
      fi
    fi
  done
  echo "$v"
}

get_name_zeroincombenze() {
# get_name_zeroincombenze(name odoo_ver)
    if [ "$1" == "zeroincombenze" ]; then
      if [ "$2" == "7.0" -o "$2" == "8.0" -o "$2" == "9.0" -o "$2" == "10.0" ]; then
        result="$result/l10n-italy-supplemental"
      else
        result="$result/$1"
      fi
      if [ -z "$opt_rep" ]; then
        opt_rep=l10n-italy-supplemental
      fi
      msts=2
    fi
}

get_name_supplemental() {
# get_name_zeroincombenze(name odoo_ver)
    if [ "$1" == "l10n-italy-supplemental" ]; then
      if [ "$2" == "v7" ]; then
        result="$result/zeroincombenze"
      else
        result="$result/$1"
      fi
      if [ -z "$opt_rep" ]; then
        opt_rep=$1
      fi
      msts=2
    fi
}

get_path_ver() {
# get_path_ver(path odoo_ver rep pkg)
  result=
  msts=0
  local i=
  local ov=$2
  local r=$1
  local re="(7\.0|8\.0|9\.0|10\.0|v7)"
  if [ -z "$r" ]; then
    r=/opt/odoo
  elif [ "${r:0:1}" != "/" -a "${r:0:1}" != "~" ]; then
    r=/opt/odoo/$r
  fi
  for i in {2..9}; do
    local t=$(echo "$r"|awk -F/ '{ print $'$i'}')
    if [ -z "$t" ]; then
      break
    elif [ "$t" == "7.0" -o "$t" == "8.0" -o "$t" == "9.0"  -o "$t" == "10.0" -o "$t" == "v7" ]; then
      result="$result/$t"
      ov=$t
      msts=1
    elif [ $msts -eq 0 ] && [[ $t =~ $re ]]; then
      result="$result/$t"
      ov=$t
      msts=1
    elif [ "$t" == "zeroincombenze" ]; then
      get_name_zeroincombenze "$t" "$ov"
    elif [ "$t" == "l10n-italy-supplemental" ]; then
      get_name_supplemental "$t" "$ov"
    else
      result="$result/$t"
      if [ $msts -eq 1 ]; then
        if [ -z "$opt_rep" ]; then
          opt_rep=$t
        fi
        msts=2
      elif [ $msts -eq 2 ]; then
        if [ -z "$opt_pkg" ]; then
          opt_pkg=$t
        fi
        msts=3
      elif [ $msts -eq 3 ]; then
        if [ -z "$opt_fn" ]; then
          opt_fn=$t
        fi
        msts=4
      fi
    fi
  done
  if [ $msts -eq 0 ]; then
    result="$result/$ov"
    msts=1
  fi
  if [ $msts -eq 1 ]; then
    if [ "$3" == "zeroincombenze" ]; then
      get_name_zeroincombenze "$3" "$ov"
    elif [ "$3" == "l10n-italy-supplemental" ]; then
      get_name_supplemental "$3" "$ov"
    elif [ -n "$3" ]; then
      result="$result/$3"
      msts=2
    elif [ -n "$opt_rep" ]; then
      result="$result/$opt_rep"
      msts=2
    fi
  fi
  if [ $msts -eq 2 ]; then
    if [ -n "$4" ]; then
      result="$result/$4"
      msts=3
    elif [ -n "$opt_pkg" ]; then
      result="$result/$opt_pkg"
      msts=3
    fi
  fi
  if [ $msts -eq 3 ]; then
    if [ -n "$opt_fn" ]; then
      result="$result/$opt_fn"
      msts=4
    fi
  fi
}

OPTOPTS=(h        n            O         p         R         r            V           v)
OPTDEST=(opt_help opt_dry_run  odoo_ver  opt_pkg   opt_rest  opt_rep      opt_version opt_verbose)
OPTACTI=(1        "1"          "="       "="       1         "="          "*>"        1)
OPTDEFL=(0        0            ""        ""        0         ""           ""          0)
OPTMETA=("help"   "do nothing" "version" "package" "restore" "repository" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "select target Odoo version (may be 7, 8, 9 o 10)"\
 "select package name"\
 "reverse copy from target to source rather source to target"\
 "select repository name"\
 "show version"\
 "verbose mode")
OPTARGS=(source target)

parseoptargs "$@"
if [ "$opt_version" ]; then
  echo "$__version__"
  exit 0
fi
if [ -z "$odoo_ver" -a -z "$source" ]; then
  opt_help=1
fi
if [ $opt_help -gt 0 ]; then
  print_help "Copy file between Odoo versions"\
  "(C) 2015-2016 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Odoo/dev\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
# set -x
if [ "$odoo_ver" == "7" -o "$odoo_ver" == "8" -o "$odoo_ver" == "9" -o "$odoo_ver" == "10" ]; then
  odoo_ver="$odoo_ver.0"
fi
cv=$(get_odoo_ver)
if [ -z "$source" ]; then
  filenames=$PWD
  ovs=$cv
else
  filenames=$(readlink -f $source)
  ovs=$(get_odoo_ver $source)
fi
if [ -z "$target" ]; then
  filenamet=
  ovt=$odoo_ver
elif [ "${target:0:1}" == "/" -o "${target:0:1}" == "~" ]; then
  filenamet=$(readlink -f $target)
  ovt=$odoo_ver
else
  filenamet=$target
  ovt=$(get_odoo_ver $target)
fi
if [ -z "$ovt" ]; then
  ovt=$ovs
fi
get_path_ver "$filenames" "$ovs" "$opt_rep" "$opt_pkg"
filenames=$result
get_path_ver "$filenamet" "$ovt" "$opt_rep" "$opt_pkg"
filenamet=$result
if [ -d "$filenames" ]; then
  opts="-R"
else
  opts=
fi
if [ $opt_rest -gt 0 ]; then
  tmp=$filenamet
  filenamet=$filenames
  filenames=$tmp
fi
if [ $opt_verbose -gt 0 ]; then
  echo "cp $opts $filenames $filenamet"
fi
if [ $opt_dry_run -eq 0 ]; then
  cp $opts $filenames $filenamet
fi
