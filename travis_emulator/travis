#! /bin/bash
# -*- coding: utf-8 -*-
#
# Travis-ci emulator
# Emulate travis-ci on local machine, to test before upgrade git project
# Deploy:
# ~/dev                          -> this script
# ~/dev/_travis                  -> default script (travis_install_pkgs, travis_runs_tests, travis_after_tests_success)
# ~/dev/maintainer-quality-tools -> actual scripts, mainly for Odoo environment by OCA; thery replaces default scripts
# When developping travis emulator itself, deployment is:
# ~/dev/pypi/travis_em/travis_em -> this script
# ~/dev/pypi/travis_em/travis_em/_travis -> default script (travis_install_pkgs, travis_runs_tests, travis_after_tests_success)
#
# This free software is released under GNU Affero GPL3
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
if [ -f $TDIR/z0librc ]; then
. $TDIR/z0librc
elif [ -f ./z0librc ]; then
. ./z0librc
elif [ -f ~/z0librc ]; then
. ~/z0librc
else
. /etc/z0librc
fi
. $TDIR/travisrc

__version__=0.1.30


run_traced () {
    # set -x  #debug
    if [ $opt_r -eq 0 ]; then
      if [ $opt_verbose -gt 0 ]; then
        echo "$@"
      fi
      if [ $opt_dry_run -eq 0 ]; then
        $@
      fi
    else
      if [ $opt_verbose -gt 0 ]; then
        echo "$1 $opts_dry_run $opts_verbose $PKGPATH $PRJNAME"
      fi
      $1 $opts_dry_run $opts_verbose $PKGPATH $PRJNAME
    fi
    # et +x  #debug
}


OPTOPTS=(h        c        n            r     V           v           b)
OPTDEST=(opt_help opt_conf opt_dry_run  opt_r opt_version opt_verbose opt_branch)
OPTACTI=(1        "="      "1>"         "1"   "*>"        1           "=")
OPTDEFL=(1        ""       0            0     ""          0           8.0)
OPTMETA=("help"   "file"   "do nothing" "res" "version"   "verbose"   "branch")
OPTHELP=("this help"\
 "configuration file"\
 "do nothing (dry-run)"\
 "run rescricted mode (w/o maintainer-quality-tools)"\
 "show version"\
 "verbose mode",
 "branch: must be 7.0 or 8.0 (def 8.0)")
OPTARGS=(pkg_path action)
parseoptargs $@

if [ "$opt_version" ]; then
  echo "$__version__"
  exit 0
fi
if [ $opt_help -gt 0 ]; then
  print_help "Travis-ci emulator for local developer environment\nAction may be: check, test, all (default) or setup"\
  "(C) 2015 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Linux/dev\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
DEVPATH=$TDIR
if [ "$opt_conf" -a -f "$opt_conf" ]; then
  TCONF=$opt_conf
else
  TCONF=$TDIR/.$THIS.conf
fi

if [ "$pkg_path" ]; then
  PKGPATH=$pkg_path
else
  PKGPATH=$PWD
fi
PKGPATH=$(set_pkgpath "$PKGPATH")
pkgname=$(basename $PKGPATH)
$(active_cfg)
conf_default
link_cfg $TCONF
init_travis
if [ -z "$PRJNAME" ]; then
  PRJNAME=$(basename $PKGPATH)
fi

if [ $opt_verbose -eq 0 ]; then
  opt_verbose=$(get_cfg_value "" "loglevel")
fi
if [ $opt_verbose -gt 1 ]; then
  set -x
fi

if [ "$opt_conf" -a -f "$opt_conf" ]; then
  TCONF=$opt_conf
fi

if [ -z "$action" ]; then action=all; fi
if [ "$action" != "check" -a "$action" != "test" -a "$action" != "all" -a "$action" != "setup" ]; then
  echo "Invalid action!"
  echo "action should be one of check, test, all or setup"
  exit 1
fi

if [ $opt_dry_run -ne 0 ]; then
  opts_dry_run=-n
else
  opts_dry_run=
fi
if [ $opt_verbose -ne 0 ]; then
  opts_verbose=-v
else
  opts_verbose=
fi
if [ "$action" == "setup" ]; then
  opt_r=0
  DEF_DEVPATH=$(readlink -f ~/dev)
  if [ ! -d $DEF_DEVPATH ]; then
    run_traced mkdir -p $DEF_DEVPATH
  fi
  if [ ! -d $DEF_DEVPATH/_travis ]; then
    run_traced  mkdir -p $DEF_DEVPATH/_travis
  fi
  if [ ! -d $DEF_DEVPATH/_travis/cfg ]; then
    run_traced mkdir -p $DEF_DEVPATH/_travis/cfg
  fi
  if [ "$TDIR" != $DEF_DEVPATH ]; then
    run_traced cp $TDIR/$THIS $DEF_DEVPATH/$THIS
    for f in travis_install_pkgs travis_run_tests travis_after_tests_success; do
      run_traced cp $TDIR/_travis/$f $DEF_DEVPATH/_travis/$f
    done
  fi
  exit 0
fi

if [ ! -d $PKGPATH ]; then
  echo "Invalid package path $PKGPATH"
  exit 1
elif [ "$PRJNAME" != "Odoo" ]; then
  if [ ! -d $PKGPATH/$pkgname ]; then
    echo "Invalid package path $PKGPATH/$pkgname"
    exit 1
  fi
fi
repository=local/$pkgname

if [ -z "$TOOLS_PATH" ]; then
  if [ -d $DEVPATH/maintainer-quality-tools/travis ]; then
    TOOLS_PATH=$DEVPATH/maintainer-quality-tools/travis
  elif [ -d $HOME/dev/maintainer-quality-tools/travis ]; then
    TOOLS_PATH=$HOME/dev/maintainer-quality-tools/travis
  elif [ -d /opt/odoo/dev/maintainer-quality-tools/travis ]; then
    TOOLS_PATH=/opt/odoo/dev/maintainer-quality-tools/travis
  else
    unset -v TOOLS_PATH
  fi
fi
if [ -n "$TOOLS_PATH" -a $opt_r -eq 0 ]; then
  if [ $(echo $PATH|grep -v "$TOOLS_PATH"  2>/dev/null) ]; then
    export PATH=$TOOLS_PATH:$PATH
  fi
  export FLAKE8_CONFIG_DIR=$TOOLS_PATH/cfg
else
  TOOLS_PATH=$DEVPATH/_travis
  opt_r=1
  export FLAKE8_CONFIG_DIR=$TOOLS_PATH/cfg
fi

if [ "$action" == "check" ]; then
  export LINT_CHECK=1
elif [ "$action" == "test" ]; then
  export LINT_CHECK=0
elif [ "$PRJNAME" != "Odoo" ]; then
  export LINT_CHECK=1
else
  unset -v LINT_CHECK
fi
# Default value for local environment
if [ -z $BRANCH ]; then
  BRANCH=$opt_branch
fi
export VERSION=$BRANCH
export TRAVIS_BUILD_DIR=$PKGPATH
export ODOO_REPO=$repository
export VERBOSE_MODE=$opt_verbose


sts=0
if [ -f $TOOLS_PATH/travis_install_pkgs ]; then
  run_traced $TOOLS_PATH/travis_install_pkgs
  if [ $? -ne 0 ]; then sts=$?; fi
fi
if [ $sts -eq 0 ]; then
  if [ $TOOLS_PATH/travis_run_tests ]; then
    run_traced $TOOLS_PATH/travis_run_tests
    if [ $? -ne 0 ]; then sts=$?; fi
  else
    sts=127
  fi
fi
if [ $sts -eq 0 -a "$action" != "check" ]; then
  run_traced $TOOLS_PATH/travis_after_tests_success
  if [ $? -ne 0 ]; then sts=$?; fi
  if [ $sts -eq 0 ]; then
    coverage report
  fi
fi
exit $sts
