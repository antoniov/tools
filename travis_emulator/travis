#! /bin/bash
# -*- coding: utf-8 -*-
#
# Travis-ci emulator
# Emulate travis-ci on local machine, to test before upgrade git project
#
# This free software is released under GNU Affero GPL3
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
if [ -f $TDIR/z0librc ]; then
. $TDIR/z0librc
elif [ -f ./z0librc ]; then
. ./z0librc
elif [ -f ~/z0librc ]; then
. ~/z0librc
else
. /etc/z0librc
fi
. $TDIR/travisrc
TCONF=$TDIR/.$THIS.conf

__version__=0.1.28


OPTOPTS=(h        c        n            V           v           b)
OPTDEST=(opt_help opt_conf opt_dry_run  opt_version opt_verbose opt_branch)
OPTACTI=(1        "="      "1>"         "*>"        1           "=")
OPTDEFL=(1        ""       0            ""          0           8.0)
OPTMETA=("help"   "file"   "do nothing" "version"   "verbose"   "branch")
OPTHELP=("this help"\
 "configuration file"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode",
 "branch: must be 7.0 or 8.0 (def 8.0)")
OPTARGS=(repository action)
parseoptargs $@

if [ "$opt_version" ]; then
  echo "$__version__"
  exit 0
fi
if [ $opt_help -gt 0 ]; then
  print_help "Travis-ci emulator for local developer environment\nAction may be: check, test or all (default)"\
  "(C) 2015 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Linux/dev\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
DEVPATH=$TDIR
if [ "$opt_conf" -a -f "$opt_conf" ]; then
  TCONF=$opt_conf
fi
if [ "$repository" == "." ]; then repository=$(echo "local/$(basename $PWD)"); fi
if [ -z "$repository" ]; then repository=$(echo "local/$(basename $PWD)"); fi
if [ -z $PKGPATH ]; then
  PKGPATH=$PWD
fi
PKGPATH=$(set_pkgpath "$PKGPATH")
pkgname=$(basename $PKGPATH)
$(init_cfg)
$(active_cfg)
conf_default
link_cfg $TCONF
init_travis
PRJNAME=$(basename $repository)


if [ $opt_verbose -eq 0 ]; then
  opt_verbose=$(get_cfg_value "" "loglevel")
fi
if [ $opt_verbose -gt 1 ]; then
  set -x
fi

if [ -z "$TOOLS_PATH" ]; then
  if [ -d $DEVPATH/maintainer-quality-tools/travis ]; then
    TOOLS_PATH=$DEVPATH/maintainer-quality-tools/travis
  elif [ -d $HOME/dev/maintainer-quality-tools/travis ]; then
    TOOLS_PATH=$HOME/dev/maintainer-quality-tools/travis
  elif [ -d /opt/odoo/dev/maintainer-quality-tools/travis ]; then
    TOOLS_PATH=/opt/odoo/dev/maintainer-quality-tools/travis
  else
    unset -v TOOLS_PATH
  fi
fi
if [ "$TOOLS_PATH" ]; then
  if [ $(echo $PATH|grep -v "$TOOLS_PATH"  2>/dev/null) ]; then
    export PATH=$TOOLS_PATH:$PATH
  fi
fi

if [ -z "$action" ]; then action=all; fi
export FLAKE8_CONFIG_DIR=$TOOLS_PATH/cfg
if [ "$action" == "check" ]; then
  export LINT_CHECK=1
elif [ "$action" == "test" ]; then
  export LINT_CHECK=0
elif [ "$PRJNAME" != "Odoo" ]; then
  export LINT_CHECK=1
else
  unset -v LINT_CHECK
fi
# Default value for local environment
if [ -z $BRANCH ]; then
  BRANCH=$opt_branch
fi
export VERSION=$BRANCH
export TRAVIS_BUILD_DIR=$PKGPATH
export ODOO_REPO=$repository
export VERBOSE_MODE=$opt_verbose
if [ ! -d $PKGPATH ]; then
  echo "Invalid repository $PKGPATH"
  exit 1
elif [ "$PRJNAME" != "Odoo" ]; then
  if [ ! -d $PKGPATH/$pkgname ]; then
    echo "Invalid repository $PKGPATH/$pkgname"
    exit 1
  fi
fi
if [ "$PRJNAME" == "Odoo" ]; then
  if [ $opt_dry_run -eq 0 ]; then
    dropdb  openerp_template 2>/dev/null||true
  fi
fi
if [ $opt_dry_run -eq 0 ]; then
  if [ "$TOOLS_PATH" ]; then
    if [ $opt_verbose -gt 0 ]; then
      echo "$TOOLS_PATH/travis_run_tests"
    fi
    $TOOLS_PATH/travis_run_tests
  else
    if [ $opt_verbose -gt 0 ]; then
      echo "travis_run_tests"
    fi
    travis_run_tests
  fi
fi
if [ $? -eq 0 -a "$action" != "check" ]; then
  if [ "$PRJNAME" != "Odoo" ]; then
    cd $PKGPATH/$PRJNAME;
    if [ $opt_dry_run -eq 0 ]; then
      find . -name "*$PRJNAME*.log" -exec rm -f '{}' \;
      coverage erase
      DEV_ENVIRONMENT=$PRJNAME PYTHONPATH=$PKGPATH coverage run --source $PRJNAME __main__.py
    fi
  fi
  if [ $opt_verbose -gt 0 ]; then
    echo ""
    echo "The command \"travis_run_tests\" exited with 0."
    echo "coveralls"
  fi
  if [ $opt_dry_run -eq 0 ]; then
    coverage report
  fi
fi
