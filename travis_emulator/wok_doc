#! /bin/bash
# -*- coding: utf-8 -*-
# Temporary documentation generator
# Tool for internal use
#
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2017 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com

THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  elif [ -d $d/z0lib ]; then
    . $d/z0lib/z0librc
    Z0LIBDIR=$d/z0lib
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi

__version__=0.1.6


# main
OPTOPTS=(h        n            V           v)
OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
OPTACTI=(1        "1>"         "*>"        1)
OPTDEFL=(1        0            ""          0)
OPTMETA=("help"   "do nothing" "version"   "verbose")
OPTHELP=("this help"\
 "do nothing (dry-run)"\
 "show version"\
 "verbose mode")
OPTARGS=(module)

parseoptargs "$@"
if [ "$opt_version" ]; then
  echo "$__version__"
  exit 0
fi
if [ $opt_help -gt 0 ]; then
  print_help "Write module documentation\nTemporary: do not use in production!"\
  "(C) 2015-2017 by zeroincombenze(R)\nhttp://www.zeroincombenze.it\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi
if [ -z "$module" ]; then
  echo "Missing module"
  exit 1
fi
if [ -f $TDIR/wok_doc.py ]; then
  WOK_DOC_PY=$TDIR/wok_doc.py
elif [ -f wok_doc.py ]; then
  WOK_DOC_PY=wok_doc.py
else
  exit 1
fi
if [ $opt_dry_run -eq 0 ]; then
  if [ -f wok_doc_tmp.py ]; then
    rm -f wok_doc_tmp.py
  fi
  if [ -f ${module}_doc.txt ]; then
    rm -f ${module}_doc.txt
  fi
  mkdir -p ./docs
  for f in $(dir *.py); do
    let l=${#f}-3
    fn=${f:0:l}
    if [ "$fn" == "__main__" ]; then
      PAGER=cat pydoc $fn &>./docs/${fn}_doc.txt
    elif [[ "$fn" =~ ${module} ]]; then
      PAGER=cat pydoc $fn &>./docs/${fn}_doc.txt
    fi
  done
fi
if [ -f wok_doc_tmp.py ]; then
  rm -f wok_doc_tmp.py
fi
if [ $opt_verbose -gt 0 ]; then
  if [ -f ./docs/main_doc.txt ]; then
    cat ./docs/main_doc.txt
  fi
  cat ./docs/${module}*_doc.txt
fi

