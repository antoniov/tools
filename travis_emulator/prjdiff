#! /bin/bash
# -*- coding: utf-8 -*-
# Copy package for git push on github.com
# Tool for internal use
#
# author: Antonio M. Vigliotti - antoniomaria.vigliotti@gmail.com
# (C) 2015-2017 by SHS-AV s.r.l. - http://www.shs-av.com - info@shs-av.com

THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYTHONPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib ${PYTHONPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  elif [ -d $d/z0lib ]; then
    . $d/z0lib/z0librc
    Z0LIBDIR=$d/z0lib
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi

__version__=0.1.17.1



OPTOPTS=(h        c        n            s       V           v           0       1       2)
OPTDEST=(opt_help opt_conf opt_dry_run  opt_sel opt_version opt_verbose opt_sts opt_sts opt_2nd)
OPTACTI=(1        "="      "1>"         "=>"    "*>"        1           0       1       1)
OPTDEFL=(1        ""       0            "^$"    ""          0           0       0       0)
OPTMETA=("help"   "file"   "do nothing" "regex" "version"   "verbose"   "sts"   "sts"   "2nd")
OPTHELP=("this help"\
 "configuration file"\
 "do nothing (dry-run)"\
 "show detail of selected files (conflict with -v)"\
 "show version"\
 "verbose mode"\
 "initial status is true"\
 "initial status is false"\
 "2nd level")
OPTARGS=(left right)

parseoptargs "$@"
if [ "$opt_version" ]; then
  echo "$__version__"
  exit 0
fi
if [ $opt_help -gt 0 ]; then
  print_help "Diff files of project"\
  "(C) 2015-2017 by zeroincombenze(R)\nhttp://wiki.zeroincombenze.org/en/Linux/dev\nAuthor: antoniomaria.vigliotti@gmail.com"
  exit 0
fi

opts_travis
CFG_init
conf_default
link_cfg $DIST_CONF $TCONF
if [ $opt_verbose -gt 1 ]; then set -x; fi
init_travis
if [ $opt_verbose -gt 1 ]; then set -x; fi
prepare_env_travis ""
sts=$STS_SUCCESS

#if [ "$opt_conf" -a -f "$opt_conf" ]; then
#  CONFN=$opt_conf
#fi

param=""
if [ "$opt_sel" ]; then param="$param -s$opt_sel"; fi
if [ $opt_verbose -gt 0 ]; then param="$param -v"; fi
difpar=""
if [ $opt_verbose -eq 0 ]; then difpar="$difpar -q"; fi
robocopy_init
sts=$opt_sts
remdir=$(echo "$right"|awk -F: '{print $2}')
if [ "$remdir" ]; then
  remhost=$(echo "$right"|awk -F: '{print $1}')
fi
if [ -d $left ]; then
  for f in $(ls -1 $left); do
    if [ $opt_verbose -gt 0 ]; then
      echo "> $0 $param $left/$f $right/$f"
    fi
    if $(matches1of "$f" "$XRGX"); then
      true
    else
      $0 -$sts $param -2 $left/$f $right/$f
      if [ $? -gt 0 ]; then
        sts=$STS_FAILED
      fi
    fi
  done
  if [ -d $right ]; then
    for f in $(ls -1 $right); do
      if $(matches1of "$f" "$XRGX $XXDF"); then
        true
      else
        if [ ! -e $left/$f ]; then
          echo "Only in $right: $f"
          sts=$STS_FAILED
        fi
      fi
    done
  fi
  if [ $opt_2nd -eq 0 -a $sts -eq $STS_SUCCESS ]; then
     echo "No diff found"
  fi
else
  if [ $opt_verbose -gt 0 ]; then
    echo "> $0 $left $right"
  fi
  if $(matches1of "$left" "$XRGX $XXDF"); then
    true
  else
    if [ -f $right ]; then
      if [[ "$left" =~ $opt_sel ]]; then
        diff $left $right
      else
        diff $difpar $left $right
      fi
      if [ $? -gt 0 ]; then
        # echo "Files $left and $right differ"
        sts=$STS_FAILED
      fi
    elif [ ! -f $right ]; then
      fd=$(dirname $left)
      fb=$(basename $left)
      echo "Only in $fd: $fb"
      sts=$STS_FAILED
    fi
  fi
fi
exit $sts
