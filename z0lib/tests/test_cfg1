# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib . .. /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $TDIR/../zerobug $TDIR/../../zerobug  . .. $HOME/dev")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
__version__=0.1.27


test_01() {
    CFG_init
    FCONF="$TESTDIR/test.conf"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $FCONF ]; then rm -f $FCONF; fi
      if [ -f $FCONF.sample ]; then rm -f $FCONF.sample; fi
      link_cfg $FCONF
      set_cfg_def "param1" "Value1"
      set_cfg_def "param2" "Value2"
      set_cfg_def "param3" "Value3"
      set_cfg_def "param4" "Value4"
    fi
    for i in 1 2 3 4; do
      TRES=$(get_cfg_value "" "param$i")
      test_result "find param$i" "Value$i" "$TRES"
    done

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      echo "param1= VALUE1 ">$FCONF
      echo "param3=VALUE3">>$FCONF
      link_cfg $FCONF
    fi
    for i in 1 2 3 4; do
      TRES=$(get_cfg_value "" "param$i")
      if [ $i -eq 1 ]; then
        test_result "find param$i" "VALUE$i" "$TRES"
      elif [ $i -eq 3 ]; then
        test_result "find param$i" "VALUE$i" "$TRES"
      else
        test_result "find param$i" "Value$i" "$TRES"
      fi
    done
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      echo "param4=\" VALUE4 \"">>$FCONF
      link_cfg $FCONF
    fi
    TRES=$(get_cfg_value "" "param4")
    test_result "find param4" " VALUE4 " "$TRES"

    CFG_init
    FCONF="$TESTDIR/test.conf"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $FCONF ]; then rm -f $FCONF; fi
      echo "#param1=NOVALUE ">$FCONF.sample
      echo "param1= value1 ">>$FCONF.sample
      echo "param2=\"value2\"">>$FCONF.sample
      echo "param3=value3">>$FCONF.sample
      echo "param4= \"value4\" ">>$FCONF.sample
      link_cfg $FCONF
    fi
    for i in 1 2 3 4; do
      TRES=$(get_cfg_value "" "param$i")
      test_result "find param$i" "value$i" "$TRES"
    done
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      echo "param1= VALUE1 ">$FCONF
      echo "param3=VALUE3">>$FCONF
      link_cfg $FCONF
    fi
    for i in 1 2 3 4; do
      TRES=$(get_cfg_value "" "param$i")
      if [ $i -eq 1 ]; then
        test_result "find param$i" "VALUE$i" "$TRES"
      elif [ $i -eq 3 ]; then
        test_result "find param$i" "VALUE$i" "$TRES"
      else
        test_result "find param$i" "value$i" "$TRES"
      fi
    done

    CFG_init
    FCONF="$TESTDIR/test.conf"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $FCONF ]; then rm -f $FCONF; fi
      set_cfg_def "param1" "defval1"
      set_cfg_def "param2" "defval2"
      set_cfg_def "param3" "defval3"
      set_cfg_def "param4" "defval4"
      echo "#param1=NOVALUE ">$FCONF.sample
      echo "param2=\"value2\"">>$FCONF.sample
      echo "param3=value3">>$FCONF.sample
      echo "param3= VALUE3 ">$FCONF
      echo "param4=None ">>$FCONF
      echo "param9=Long long \\">>$FCONF
      echo "       value \\">>$FCONF
      echo "       parameter">>$FCONF
      link_cfg $FCONF $FCONF.sample
    fi
    TRES=$(get_cfg_value "" "param1")
    test_result "find param1" "defval1" "$TRES"
    TRES=$(get_cfg_value "" "param2")
    test_result "find param2" "value2" "$TRES"
    TRES=$(get_cfg_value "" "param3")
    test_result "find param3" "VALUE3" "$TRES"
    TRES=$(get_cfg_value "" "param4")
    test_result "find param4" "" "$TRES"
    TRES=$(get_cfg_value "" "param9")
    test_result "find param9" "Long long value parameter" "$TRES"

    CFG_init
    FCONF="$TESTDIR/test.conf"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $FCONF ]; then rm -f $FCONF; fi
      echo "#">$FCONF.sample
      echo "param1=Invalid">$FCONF
      local FH=$(xuname "-f")
      echo "[_${FH}_]">>$FCONF
      echo "param1=Right">>$FCONF
      if [ "$FH" == "RHEL" ]; then
        echo "[_Debian_]">>$FCONF
      else
        echo "[_RHEL_]">>$FCONF
      fi
      echo "param1=Wrong">>$FCONF
      link_cfg $FCONF
    fi
    TRES=$(get_cfg_value "" "param1")
    test_result "find param1 OS" "Right" "$TRES"
}


Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_tlib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg travisrc "$TDIR $TDIR/.. $TDIR/../travis_emulator $TDIR/../../travis_emulator . .. $HOME/dev")
  if [ -z "$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . $TRAVISLIBDIR
fi
UT1_LIST=
UT_LIST=
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
