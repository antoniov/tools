#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../.. $TDIR/../../z0lib $TDIR/../../z0lib/z0lib $HOME/dev $HOME/tools ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $HOME/tools/zerobug $HOME/dev ${PYPATH//:/ } . .." "zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.2.8.7


PASSED=0

store_cfg_param_value() {
#store_cfg_param_value(tid key value [-f|-d] [-D|1] [section] )
    if [ ${5:-0} -gt 0 -o "$5" == "-D" ] ; then
      PASSED=2
    else
      PASSED=1
    fi
    CFG_set "$1" "$2" "$3" "$4" "$6"
}

test_01() {
    for tid in 0 1 2 3; do
      CFG_init $tid
      FCONF="$TESTDIR/test.conf"
      if [ ${opt_dry_run:-0} -eq 0 ]; then
        link_cfg $FCONF "" $tid
      fi
      TRES=$(get_cfg_value $tid "param1")
      test_result "find param1 OS ($tid)" "Right" "$TRES"
      test_result "param managed" "1" "$PASSED"
      PASSED=0
      TRES=$(get_cfg_value $tid "param2")
      test_result "find param2 OS ($tid)" "NoDebug" "$TRES"
    done
}

test_02() {
    for tid in 0; do
      CFG_init $tid
      FCONF="$TESTDIR/test.conf"
      if [ ${opt_dry_run:-0} -eq 0 ]; then
        link_cfg $FCONF "" $tid "" "1"
      fi
      TRES=$(get_cfg_value $tid "param1")
      test_result "find param1 OS ($tid)" "Right" "$TRES"
      TRES=$(get_cfg_value $tid "param2")
      test_result "find param2 OS ($tid)" "Debug" "$TRES"
      test_result "param managed" "2" "$PASSED"
      PASSED=0
    done
    for tid in 0; do
      CFG_init $tid
      FCONF="$TESTDIR/test.conf"
      if [ ${opt_dry_run:-0} -eq 0 ]; then
        link_cfg $FCONF "" $tid "" "-D"
      fi
      TRES=$(get_cfg_value $tid "param1")
      test_result "find param1 OS ($tid)" "Right" "$TRES"
      TRES=$(get_cfg_value $tid "param2")
      test_result "find param2 OS ($tid)" "Debug" "$TRES"
      test_result "param managed" "2" "$PASSED"
      PASSED=0
    done
}

Z0BUG_setup() {
    FCONF="$TESTDIR/test.conf"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ -f $FCONF ]; then rm -f $FCONF; fi
      echo "#">$FCONF.sample
      echo "param1=Invalid">>$FCONF
      local FH=$(xuname "-f")
      local x=$(xuname "-v")
      local v=$(echo $x|awk -F. '{print $1}')
      local DISTO=$(xuname "-d")$v
      echo "">>$FCONF
      echo "[_${DISTO}_]">>$FCONF
      echo "param1=Right">>$FCONF
      echo "param2=NoDebug">>$FCONF
      echo "[_${DISTO}_DEV_]">>$FCONF
      echo "param2=Debug">>$FCONF
      echo "">>$FCONF
      if [ "$DISTO" == "CentOS7" ]; then
        echo "[_Ubuntu14_]">>$FCONF
      else
        echo "[_CentOS7_]">>$FCONF
      fi
      echo "param1=Wrong">>$FCONF
      echo "param2=WrongDebug">>$FCONF
    fi
}


Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi






UT1_LIST=
UT_LIST=
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
