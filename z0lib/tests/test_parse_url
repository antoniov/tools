#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib . .. /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $TDIR/../zerobug $TDIR/../../zerobug  . .. $HOME/dev")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.2.5.1


test_01() {
    local RES TRES URI
    URI="https://www.zeroincombenze.it"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT")
    fi
    test_result "parse $URI" "https:" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+DOMAIN")
    fi
    test_result "parse $URI" "www.zeroincombenze.it" "$TRES"
    URI="https://www.zeroincombenze.it/main_page/z0"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT")
    fi
    test_result "parse $URI" "https:" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+DOMAIN")
    fi
    test_result "parse $URI" "www.zeroincombenze.it" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+FULLNAME")
    fi
    test_result "parse $URI" "/main_page/z0" "$TRES"
    URI="https://www.zeroincombenze.it:8080/main_page/z0"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT")
    fi
    test_result "parse $URI" "https:" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+DOMAIN")
    fi
    test_result "parse $URI" "www.zeroincombenze.it" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+FULLNAME")
    fi
    test_result "parse $URI" "/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PORT")
    fi
    test_result "parse $URI" "8080" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT+DOMAIN")
    fi
    test_result "parse $URI" "https://www.zeroincombenze.it" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT+DOMAIN+FULLNAME")
    fi
    test_result "parse $URI" "https://www.zeroincombenze.it/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "" "$URI" "+PROT+DOMAIN+FULLNAME")
    fi
    test_result "parse $URI" "https://www.zeroincombenze.it/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+DIRNAME+BASENAME")
    fi
    test_result "parse $URI" "/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "" "$URI" "+DIRNAME+BASENAME")
    fi
    test_result "parse $URI" "/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "" "$URI" "+ALL-PORT")
    fi
    test_result "parse $URI" "https://www.zeroincombenze.it/main_page/z0" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" ".c" "+NAMEID+EXT+LOCAL")
    fi
    test_result "parse $URI" "z0.c" "$TRES"
    RES=$(readlink -f $PWD/..)
    RES="$RES/example.sh"
    URI="../example"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" ".sh" "+DIRNAME+NAMEID+EXT+LOCAL+ABS")
    fi
    test_result "parse $URI" "$RES" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" ".sh" "+FULLNAME+ABS+LOCAL")
    fi
    test_result "parse $URI" "$RES" "$TRES"
    URI="git@github.com:zeroincombenze/tools.git"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+PROT")
    fi
    test_result "parse $URI" "git@github.com:" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "" "+HOST")
    fi
    test_result "parse $URI" "zeroincombenze" "$TRES"
    URI="tools"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "git@github.com:zeroincombenze/.git" "+LOCAL+ALL")
    fi
    test_result "parse $URI" "git@github.com:zeroincombenze/tools.git" "$TRES"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      TRES=$(parse_URI "$URI" "https://github.com/zeroincombenze/.git" "+LOCAL+ALL")
    fi
    test_result "parse $URI" "https://github.com/zeroincombenze/tools.git" "$TRES"
}


Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@" 
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_tjlib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg travisrc "$TDIR $TDIR/.. $TDIR/../travis_emulator $TDIR/../../travis_emulator . .. $HOME/dev")
  if [ -z "$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . $TRAVISLIBDIR
fi
if [ ${opt_oelib:-0} -ne 0 ]; then
  ODOOLIBDIR=$(findpkg odoorc "$TDIR $TDIR/.. $TDIR/../clodoo $TDIR/../../clodoo . .. $HOME/dev")
  if [ -z "$ODOOLIBDIR" ]; then
    echo "Library file odoorc not found!"
    exit 2
  fi
  . $ODOOLIBDIR
fi
UT1_LIST=
UT_LIST=
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
