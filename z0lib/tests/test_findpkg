#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../.. $TDIR/../../z0lib $TDIR/../../z0lib/z0lib $HOME/dev $HOME/tools ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $HOME/tools/zerobug $HOME/dev ${PYPATH//:/ } . .." "zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=1.0.0.2


test_01() {
    local f p result TRES
    local f=$(basename $0)
    local p=$(dirname $0)
    local result=$(findpkg "$f" "$p")
    local TRES=$(readlink -e $0)
    test_result "find myself" "$TRES" "$result"
}

test_02() {
    local p p1 p2 Y1 Y2 result TRES
    p=$(dirname $0)
    p=$(readlink -e $p)
    Y1=pgsql
    Y2=postgresql
    mkdir -p $p/$Y1
    mkdir -p $p/$Y2
    mkdir -p $p/$Y2/9.1
    touch $p/$Y2/psql
    touch $p/$Y2/9.1/psql9

    result=$(findpkg "" "$p" "$Y1")
    TRES=$(readlink -e $p/$Y1)
    test_result "find myself ($Y1)" "$TRES" "$result"

    result=$(findpkg "" "$p" "$Y2")
    TRES=$(readlink -e $p/$Y2)
    test_result "find myself ($Y2)" "$TRES" "$result"

    result=$(findpkg "" "$p" "$Y2 $Y1" "9.1")
    TRES=$(readlink -e $p/$Y2/9.1)
    test_result "find myself ($Y2 $Y1)" "$TRES" "$result"

    result=$(findpkg "psql" "$p" "$Y1 $Y2" "9.1")
    TRES=$(readlink -e $p/$Y2/psql)
    test_result "find myself ($Y2/psql)" "$TRES" "$result"

    result=$(findpkg "psql9" "$p" "$Y1 $Y2" "9.1")
    TRES=$(readlink -e $p/$Y2/9.1/psql9)
    test_result "find myself ($Y2/psql9)" "$TRES" "$result"

    p1=$(basename $p)
    p=$(dirname $p)
    result=$(findpkg "psql9" "$p" "$p1" "$Y1 $Y2" "9.1")
    test_result "find myself ($Y2/psql9 2)" "$TRES" "$result"

    p2=$(basename $p)
    p=$(dirname $p)
    result=$(findpkg "psql9" "$p" "$p2" "$p1" "$Y1 $Y2" "9.1")
    test_result "find myself ($Y2/psql9 3)" "$TRES" "$result"

    result=$(findpkg "" "$p" "$p2" "$p1" "$Y1 $Y2" "9.2")
    TRES=$(readlink -e $p/$p2/$p1/$Y1)
    test_result "find myself ($Y1)" "$TRES" "$result"
}

test_03() {
    local f p result TRES
    f=""
    p="/etc /usr"
    result=$(findpkg "$f" "$p")
    TRES="/etc"
    test_result "find /etc dir" "$TRES" "$result"
}

test_04() {
    local f p result TRES
    f=""
    p="./Non_Exists /etc /usr"
    result=$(findpkg "$f" "$p")
    TRES="/etc"
    test_result "find /etc dir" "$TRES" "$result"
}

test_05() {
    local f p result TRES
    f="bash"
    p="./Non_Exists /etc /bin"
    result=$(findpkg "$f" "$p")
    if [ -s /bin ]; then
      TRES=$(readlink -e /bin)/bash
    else
      TRES="/bin/bash"
    fi
    test_result "find $f" "$TRES" "$result"
}

test_06() {
    local f p s result TRES
    p="/usr /etc /bin"
    s="init hosts init.d"
    if [ -h /etc/init.d ]; then
      TRES=$(readlink -e /etc/init.d)
    else
      TRES=/etc/init.d
    fi
    if [ -f $TRES/network ]; then
      TRES=$TRES/network
      f="network"
      result=$(findpkg "$f" "$p" "$s")
    elif [ -f $TRES/networking ]; then
      TRES=$TRES/networking
      f="networking"
      result=$(findpkg "$f" "$p" "$s")
    else
      f=failed
      result=$(findpkg "$f" "$p" "$s")
    fi
    [ "$f" == "failed" ] || test_result "find $f in $p" "$TRES" "$result"
}

test_07() {
    local f p s result TRES
    f="mail/"
    p="/var  /usr /etc /bin"
    s="spool mail log lib"
    result=$(findpkg "$f" "$p" "$s")
    if [ -h  /var/spool/mail ]; then
      TRES=$(readlink -e /var/spool/mail)
    else
      TRES=/var/spool/mail
    fi
    test_result "find $f in $p" "$TRES" "$result"
}

test_09() {
    local p p1 p2 Y1 Y2 result TRES
    p=$(dirname $0)
    p=$(readlink -e $p)
    Y1=pgsql
    Y2=postgresql
    rm -fR $p/$Y1
    rm -fR $p/$Y2
}

Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi






UT1_LIST=
UT_LIST=
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
