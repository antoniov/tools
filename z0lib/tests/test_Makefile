# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
THIS=$(basename $0)
TDIR=$(readlink -f $(dirname $0))
for x in "$TDIR" "$TDIR/.." "." ".." "~" "/etc"; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg "z0testrc" "$TDIR . .. $HOME/dev")
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)


__version__=0.1.83

testpath () {
  if [ ${opt_dry_run:-0} -eq 0 ]; then
    if [ ${opt_verbose:-0} -gt 0 ]; then
      echo "**************************************************************************************"
    fi
    cd $1
    p=$(make -f $MAKEF chkconfig|grep "Hosted"|awk -F"=" '{print $2}'|tr -d "\"', \r")
    test_result "$1: Hosted" "local" "$p"
    p2=$(make -f $MAKEF chkconfig|grep "Project name"|awk -F"=" '{print $2}'|tr -d "\"', \r")
    test_result "$1: Project name" "$2" "$p2"
    p3=$(make -f $MAKEF chkconfig|grep "Branch"|awk -F"=" '{print $2}'|tr -d "\"', \r")
    test_result "$1: Branch" "$3" "$p3"
    p4=$(make -f $MAKEF chkconfig|grep "Package name"|awk -F"=" '{print $2}'|tr -d "\"', \r")
    test_result "$1: Package name" "$4" "$p4"
    p5=$(make -f $MAKEF chkconfig|grep "Version"|awk -F"=" '{print $2}'|tr -d "\"', \r")
    test_result "$1: Version" "$5" "$p5"
    p6=$(make -f $MAKEF chkconfig|grep "Setup file"|awk -F"=" '{print $2}'|tr -d "\"', \r")
    test_result "$1: Setup file" "$6" "$p6"
    p7=$(make -f $MAKEF chkconfig|grep "Project path"|awk -F"=" '{print $2}'|tr -d "\"', \r")
    test_result "$1: Project path" "$7" "$p7"
    p8=$(make -f $MAKEF chkconfig|grep "Package path"|awk -F"=" '{print $2}'|tr -d "\"', \r")
    test_result "$1: Package path" "$8" "$p8"
  else
    for i in {1..8}; do
      test_result "dry_run" "" ""
   done
  fi
}

test_01() {
    MAKEF=/opt/odoo/dev/pypi/z0lib/z0lib/Makefile
    export DEVPATH=/opt/odoo/dev
    OS_VER=0.2.12
    BB_VER=7.0.0.2
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ ${opt_verbose:-0} -gt 0 ]; then
        echo "**************************************************************************************"
        echo "Warning: test could fail if os version is not $OS_VER or l10n_it_bbone is not $BB_VER"
      fi
    fi
    xtlver=$(grep "__version__" $MAKEF|head -n1|awk -F\= '{print $2}')
    test_result "Makefile version" "$__version__" "$xtlver"

    WD=/opt/openerp/7.0/zeroincombenze
    if [ -d $WD ]; then
      p2=Odoo
      p3=7.0
      p4="()"
      p5=$p3
      p6=__openerp__.py
      p7=/opt/openerp/7.0/zeroincombenze
      p8=$p7/
      testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"
    fi

    if [ "${HOSTNAME:0:3}" == "shs" ]; then
      WD=/opt/openerp/7.0/zeroincombenze/l10n_it_bbone
      if [ -d $WD ]; then
        p2=Odoo
        p3=7.0
        p4="l10n_it_bbone(ItalianLocalization-Base)"
        p5=$BB_VER
        p6=__openerp__.py
        p7=/opt/openerp/7.0/zeroincombenze
        p8=$WD/
        testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"
      fi
    fi

    WD=/opt/odoo/8.0
    p2=Odoo
    p3=8.0
    p4="()"
    p5=$p3
    p6=__openerp__.py
    p7=$WD
    p8=$p7/
    testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

    WD=/opt/odoo/7.0
    p2=Odoo
    p3=7.0
    p4="()"
    p5=$p3
    p6=__openerp__.py
    p7=$WD
    p8=$p7/
    testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

    WD=/opt/odoo/dev/pypi/os0
    p2=os0
    p3=
    p4="$p2($p2)"
    p5=$OS_VER
    p6=/opt/odoo/dev/pypi/os0/setup.py
    p7=/opt/odoo/dev/pypi/os0/os0
    p8=/opt/odoo/dev/pypi/os0/
    testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

    WD=/opt/odoo/dev/pypi/os0/os0
    p2=os0
    p3=
    p4="$p2($p2)"
    p5=$OS_VER
    p6=/opt/odoo/dev/pypi/os0/setup.py
    p7=/opt/odoo/dev/pypi/os0/os0
    p8=/opt/odoo/dev/pypi/os0/
    testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

    WD=/opt/odoo/7.0/openerp/workflow
    p2=Odoo
    p3=7.0
    p4="workflow()"
    p5=$p3
    p6=__openerp__.py
    p7=/opt/odoo/7.0/openerp
    p8=$p7/workflow/
    testpath "$WD" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      if [ ${opt_verbose:-0} -gt 0 ]; then
        echo "**************************************************************************************"
      fi
    fi
}

Z0BUG_init
parseoptest -l$TESTDIR/test_z0librc.log $@
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi

Z0BUG_main_file "" ""
exit $?
