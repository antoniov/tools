#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
THIS=$(basename "$0")
TDIR=$($READLINK -f $(dirname $0))
[[ -d "$HOME/dev" ]] && HOME_DEV="$HOME/dev" || HOME_DEV="$HOME/devel"
PYPATH=$(echo -e "import os,sys\np=[x for x in (os.environ['PATH']+':$TDIR:..:$HOME_DEV').split(':') if x not in sys.path];p.extend(sys.path);print(' '.join(p))"|python)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$($READLINK -e $Z0LIBDIR)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$($READLINK -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

__version__=1.0.1.1


test_01() {
    if [ "$LECHO" == "echo" ]; then
      WLOGCMD="wecho-1"
    else
      WLOGCMD="wecho-0"
    fi
    FLOG=
    FLOGTMP="test_z0librc.log"
    set_tlog_file "$FLOGTMP"
    test_result "set logfile (1)" "$HOME/$FLOGTMP" "$FLOG"
    test_result "set logfile (2)" "#" "$FLOG_ECHO"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      touch $HOME/$FLOGTMP
      if [ ! -f $HOME/$FLOGTMP ]; then
        echo "Test failed due impossible internal error!!"
        exit 1
      fi
      set_tlog_file "$FLOGTMP" "new"
      if [ -f $HOME/test_z0librc.log ]; then TRES="1"; else TRES="0"; fi
    fi
    test_result "rm logfile (1)" "0" "$TRES"
    test_result "rm logfile (2)" "#" "$FLOG_ECHO"

    FLOGTMP="./test_tmp.log"
    set_tlog_file "$FLOGTMP" "new"
    FLOGTMP=$($READLINK -f $FLOGTMP)
    test_result "set logfile (3)" "$FLOGTMP" "$FLOG"
    test_result "set logfile (4)" "#" "$FLOG_ECHO"

    FLOGTMP="$TESTDIR/test_tmp.log"
    set_tlog_file "$FLOGTMP" "new"
    test_result "set logfile (5)" "$FLOGTMP" "$FLOG"
    test_result "set logfile (6)" "#" "$FLOG_ECHO"

    set_tlog_file "$FLOGTMP" "new" "echo"
    test_result "set logfile (7)" "$FLOGTMP" "$FLOG"
    test_result "set logfile (8)" "echo" "$FLOG_ECHO"
    if [ -f $FLOGTMP ]; then rm -f $FLOGTMP; fi


    WLOGCMD=
    set_tlog_file "$logfn" "$LNEW" "$LECHO"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      wlog "Since now, test messages are store in $FLOG"
    fi
    test_result "echoing with wlog (1)" "$TESTDIR/test_z0lib.log" "$FLOG"
    if [ "$LECHO" == "echo" ]; then
      test_result "echoing with wlog (2)" "echo" "$FLOG_ECHO"
    else
      test_result "echoing with wlog (2)" "#" "$FLOG_ECHO"
    fi
}

Z0BUG_init
parseoptest -l$TESTDIR/test_UNKNOWN.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts
