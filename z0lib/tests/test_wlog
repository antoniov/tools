#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../.. $TDIR/../../z0lib $TDIR/../../z0lib/z0lib $HOME/dev $HOME/tools ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $HOME/tools/zerobug $HOME/dev ${PYPATH//:/ } . .." "zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.2.9.2


test_01() {
    if [ "$LECHO" == "echo" ]; then
      WLOGCMD="wecho-1"
    else
      WLOGCMD="wecho-0"
    fi
    FLOG=
    FLOGTMP="test_z0librc.log"
    set_tlog_file "$FLOGTMP"
    test_result "set logfile (1)" "$HOME/$FLOGTMP" "$FLOG"
    test_result "set logfile (2)" "#" "$FLOG_ECHO"

    if [ ${opt_dry_run:-0} -eq 0 ]; then
      touch $HOME/$FLOGTMP
      if [ ! -f $HOME/$FLOGTMP ]; then
        echo "Test failed due impossible internal error!!"
        exit 1
      fi
      set_tlog_file "$FLOGTMP" "new"
      if [ -f $HOME/test_z0librc.log ]; then TRES="1"; else TRES="0"; fi
    fi
    test_result "rm logfile (1)" "0" "$TRES"
    test_result "rm logfile (2)" "#" "$FLOG_ECHO"

    FLOGTMP="./test_tmp.log"
    set_tlog_file "$FLOGTMP" "new"
    FLOGTMP=$(readlink -f $FLOGTMP)
    test_result "set logfile (3)" "$FLOGTMP" "$FLOG"
    test_result "set logfile (4)" "#" "$FLOG_ECHO"

    FLOGTMP="$TESTDIR/test_tmp.log"
    set_tlog_file "$FLOGTMP" "new"
    test_result "set logfile (5)" "$FLOGTMP" "$FLOG"
    test_result "set logfile (6)" "#" "$FLOG_ECHO"

    set_tlog_file "$FLOGTMP" "new" "echo"
    test_result "set logfile (7)" "$FLOGTMP" "$FLOG"
    test_result "set logfile (8)" "echo" "$FLOG_ECHO"
    if [ -f $FLOGTMP ]; then rm -f $FLOGTMP; fi


    WLOGCMD=
    set_tlog_file "$logfn" "$LNEW" "$LECHO"
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      wlog "Since now, test messages are store in $FLOG"
    fi
    test_result "echoing with wlog (1)" "$TESTDIR/test_z0lib.log" "$FLOG"
    if [ "$LECHO" == "echo" ]; then
      test_result "echoing with wlog (2)" "echo" "$FLOG_ECHO"
    else
      test_result "echoing with wlog (2)" "#" "$FLOG_ECHO"
    fi
}

Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi






