#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
THIS=$(basename "$0")
TDIR=$($READLINK -f $(dirname $0))
[[ -d "$HOME/dev" ]] && HOME_DEV="$HOME/dev" || HOME_DEV="$HOME/devel"
PYPATH=$(echo -e "import os,sys\np=[x for x in (os.environ['PATH']+':$TDIR:..:$HOME_DEV').split(':') if x not in sys.path];p.extend(sys.path);print(' '.join(p))"|python)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$($READLINK -e $Z0LIBDIR)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$($READLINK -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

__version__=1.0.2


PASSED=0

store_cfg_param_value() {
#store_cfg_param_value(tid key value [opt] [section])
    PASSED=1
    a_add "$1" "$2" "$3" "$4"
}

test_01() {
    for tid in 0 1 2 3; do
      eval $(init_cfg $tid)
      eval $(active_cfg $tid)
      FCONF="$TESTDIR/test.conf"
      if [ ${opt_dry_run:-0} -eq 0 ]; then
        if [ -f $FCONF ]; then rm -f $FCONF; fi
        echo "#">$FCONF.sample
        echo "param1=Invalid">$FCONF
        local FH=$(xuname "-f")
        local x=$(xuname "-v")
        local v=$(echo $x|awk -F. '{print $1}')
        local DISTO=$(xuname "-d")$v
        echo "[_${DISTO}_]">>$FCONF
        echo "param1=Right">>$FCONF
        if [ "$DISTO" == "CentOS7" ]; then
          echo "[_Ubuntu14_]">>$FCONF
        else
          echo "[_CentOS7_]">>$FCONF
        fi
        echo "param1=Wrong">>$FCONF
        link_cfg $FCONF "" $tid
      fi
      TRES=$(get_cfg_value $tid "param1")
      test_result "find param1 OS ($tid)" "Right" "$TRES"
      test_result "param managed" "1" "$PASSED"
      PASSED=0
    done
}


Z0BUG_init
parseoptest -l$TESTDIR/test_UNKNOWN.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts




UT1_LIST=
UT_LIST=
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
# Follow code must be executed at main level due bash limitations
for tid in 0 1 2 3; do
  eval $(init_cfg $tid)
  eval $(active_cfg $tid)
done
# /End Included Block/
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
