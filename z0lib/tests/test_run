# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
for x in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib . .. /etc; do
  if [ -e $x/z0librc ]; then
    . $x/z0librc
    Z0LIBDIR=$x
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $TDIR/../zerobug $TDIR/../../zerobug  . .. $HOME/dev")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.1.5.1


test_run() {
   # set -x
   local SAVE_FLOG_ECHO=$FLOG_ECHO
   local SAVE_FLOG=$FLOG
   local SAVE_opt_verbose=$opt_verbose
   local SAVE_opt_dry_run=$opt_dry_run
   FLOG_ECHO=
   FLOG=
   opt_verbose=
   if [ "${1:0:3}" == "cd " -o "$1" == "cd" ]; then
     opt_dry_run=1
   fi
   run_traced "$1"
   local s=$?
   opt_dry_run=$SAVE_opt_dry_run
   opt_verbose=$SAVE_opt_verbose
   FLOG=$SAVE_FLOG
   FLOG_ECHO=$SAVE_FLOG_ECHO
   # set +x
   return $s
}

test_01() {
    local s
    test_run "true"
    s=$?
    test_result "run true" "$s" "$STS_SUCCESS"
}

test_02() {
    local s
    test_run "false"
    s=$?
    test_result "run false" "$s" "$STS_FAILED"
}

test_03() {
    local f s
    f="NOT_EXISTS"
    if [ -f $f ]; then rm -f $f; fi
    test_run "touch $f"
    s=$?
    if [ -f $f ]; then
      test_result "run touch $f" "$s" "$STS_SUCCESS"
    else
      test_result "run touch $f" "$s" "$STS_FAILED"
    fi

    test_run "rm -f $f"
    s=$?
    if [ -f $f ]; then
      test_result "rm -f $f" "$s" "$STS_FAILED"
    else
      test_result "rm -f $f" "$s" "$STS_SUCCESS"
    fi
}

test_04() {
    local f s
    f="NOT_EXISTS"
    test_run "cd /not/exists/directory"
    s=$?
    test_result "cd $f" "$s" "$STS_SUCCESS"
}


Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@" 
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi
if [ ${opt_tjlib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg travisrc "$TDIR $TDIR/.. $TDIR/../travis_emulator $TDIR/../../travis_emulator . .. $HOME/dev")
  if [ -z "$TRAVISLIBDIR" ]; then
    echo "Library file travisrc not found!"
    exit 2
  fi
  . $TRAVISLIBDIR
fi
if [ ${opt_oelib:-0} -ne 0 ]; then
  ODOOLIBDIR=$(findpkg odoorc "$TDIR $TDIR/.. $TDIR/../clodoo $TDIR/../../clodoo . .. $HOME/dev")
  if [ -z "$ODOOLIBDIR" ]; then
    echo "Library file odoorc not found!"
    exit 2
  fi
  . $ODOOLIBDIR
fi
UT1_LIST=
UT_LIST=
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
