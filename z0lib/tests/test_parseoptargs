#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYTHONPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../../z0lib ${PYTHONPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  elif [ -d $d/z0lib ]; then
    . $d/z0lib/z0librc
    Z0LIBDIR=$d/z0lib
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $HOME/tools/zerobug $HOME/dev ${PYTHONPATH//:/ } . .." "zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=0.2.6


Z0BUG_setup() {
    # This test could fail because opt_dry_run is parsed by test itself
    # So opt_dry_run is saved and restored
    SAVED_OPT_DRY_RUN=$opt_dry_run
    FOUT=$TESTDIR/z0librc.out
    FTEST=$TESTDIR/z0librc.test
}

Z0BUG_teardown() {
    :
}

test_01() {
    local tested_opt_dry_run
    OPTOPTS=(h        n            V           v)
    OPTDEST=(opt_help opt_dry_run  opt_version opt_verbose)
    OPTACTI=(1        "1>"         "*>"        1)
    OPTDEFL=(1        0            ""          0)
    OPTMETA=("help"   "do nothing" "version"   "verbose")
    OPTHELP=("this help"\
     "do nothing (dry-run)"\
     "show version"\
     "verbose mode")
    OPTARGS=()

    parseoptargs "-V"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -V [-h]" "$opt_help" "0"
    test_result "cmd -V" "$opt_version" "-V"
    test_result "cmd -V [-n]" "$tested_opt_dry_run" "0"
    test_result "cmd -V [-v]" "$opt_verbose" "0"
    echo "Usage: test_parseoptargs [-hnVv]">$FTEST
    echo "Unit test">>$FTEST
    echo " -h             this help">>$FTEST
    echo " -n             do nothing (dry-run)">>$FTEST
    echo " -V             show version">>$FTEST
    echo " -v             verbose mode">>$FTEST
    print_help "Unit test"\
      "">$FOUT
    test_result "print_help" "$FOUT" "$FTEST" "diff -qEbB"
}

test_02() {
    local tested_opt_dry_run
    OPTOPTS=(h        n            V           p        q           v)
    OPTDEST=(opt_help opt_dry_run  opt_version opt_path opt_verbose opt_verbose)
    OPTACTI=(1        "1>"         "*>"        "=>"     0           1)
    OPTDEFL=(1        0            ""          "~/"     "#"         "#")
    OPTMETA=("help"   "do nothing" "version"   "path"   "quiet"     "verbose")
    OPTHELP=("this help"\
     "do nothing (dry-run)"\
     "show version"\
     "path"
     "silent mode"\
     "verbose mode")
    OPTARGS=(tgt)

    opt_verbose=-1
    parseoptargs "mytarget"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd mytarget [-h]" "$opt_help" "0"
    test_result "cmd mytarget [-V]" "$opt_version" ""
    test_result "cmd mytarget [-n]" "$tested_opt_dry_run" "0"
    test_result "cmd mytarget [-p]" "$opt_path" "~/"
    if [ "$VERBOSE_MODE" == "1" -o "$VERBOSE_MODE" == "0" ]; then
      test_result "cmd mytarget [-qv]" "$opt_verbose" "$VERBOSE_MODE"
    elif [[ -t 0 || -p /dev/stdin ]]; then
      test_result "cmd mytarget [-qv]" "$opt_verbose" "0"
    else
      test_result "cmd mytarget [-qv]" "$opt_verbose" "1"
    fi

    opt_verbose=-1
    parseoptargs "mytarget" "-q"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd mytarget [-q]" "$opt_verbose" "0"

    opt_verbose=-1
    parseoptargs "mytarget" "-v"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd mytarget [-v]" "$opt_verbose" "1"

    echo "Usage: test_parseoptargs [-hnV][-p path][-qv] tgt">$FTEST
    echo "Unit test">>$FTEST
    echo " -h             this help">>$FTEST
    echo " -n             do nothing (dry-run)">>$FTEST
    echo " -V             show version">>$FTEST
    echo " -p path        path">>$FTEST
    echo " -q             silent mode">>$FTEST
    echo " -v             verbose mode">>$FTEST
    print_help "Unit test"\
      "">$FOUT
    test_result "print_help" "$FOUT" "$FTEST" "diff -qEbB"

    parseoptargs "-p" "./mypath" "yourtarget"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -p ./mypath yourtarget [-h]" "$opt_help" "0"
    test_result "cmd -p ./mypath yourtarget [-V]" "$opt_version" ""
    test_result "cmd -p ./mypath yourtarget [-n]" "$tested_opt_dry_run" "0"
    test_result "cmd -p ./mypath yourtarget [-p]" "$opt_path" "./mypath"
    test_result "cmd -p ./mypath yourtarget [\$1]" "$tgt" "yourtarget"
}

test_03() {
    local tested_opt_dry_run
    OPTOPTS=(h        n            O       p        V)
    OPTDEST=(opt_help opt_dry_run  opt_own opt_path opt_version)
    OPTACTI=(1        "1>"         "="     "=>"     "*>")
    OPTDEFL=(1        0            "$USER" "~/"     "")
    OPTMETA=("help"   "do nothing" "own"   "path"   "version")
    OPTHELP=("this help"\
     "do nothing (dry-run)"\
     "owner username"\
     "path"\
     "show version")
    OPTARGS=(tgt)

    parseoptargs "mytarget"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd mytarget [-h]" "$opt_help" "0"
    test_result "cmd mytarget [-V]" "$opt_version" ""
    test_result "cmd mytarget [-n]" "$tested_opt_dry_run" "0"
    test_result "cmd mytarget [-p]" "$opt_path" "~/"
    test_result "cmd mytarget [-O]" "$opt_own" "$USER"
    test_result "cmd mytarget [\$1]" "$tgt" "mytarget"
    echo "Usage: test_parseoptargs [-hn][-O own][-p path][-V] tgt">$FTEST
    echo "Unit test">>$FTEST
    echo " -h             this help">>$FTEST
    echo " -n             do nothing (dry-run)">>$FTEST
    echo " -O own owner username">>$FTEST
    echo " -p path        path">>$FTEST
    echo " -V             show version">>$FTEST
    print_help "Unit test"\
      "">$FOUT
    test_result "print_help" "$FOUT" "$FTEST" "diff -qEbB"

    parseoptargs "mytarget" "-x"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -x mytarget [-h]" "$opt_help" "1"
    if [ -f $FOUT ]; then rm -f $FOUT; fi
    if [ -f $FTEST ]; then rm -f $FTEST; fi
}

test_04() {
    local tested_opt_dry_run
    OPTOPTS=(h        a     b     c     d     e     f     g     i     j     k     l     V)
    OPTDEST=(opt_help opt_a opt_b opt_c opt_d opt_e opt_f opt_g opt_i opt_j opt_k opt_l opt_version)
    OPTACTI=(1        1     1     1     1     1     1     1     1     1     1     1     "*>")
    OPTDEFL=(0        0     0     0     0     0     0     0     0     0     0     0     "")
    OPTMETA=("help"   "o_a" "o_b" "o_c" "0_d" "o_e" "o_f" "o_g" "o_i" "o_j" "o_k" "o_l" "version")
    OPTHELP=("this help"\
     "opt_a"\
     "opt_b"\
     "opt_c"\
     "opt_d"\
     "opt_e"\
     "opt_f"\
     "opt_g"\
     "opt_i"\
     "opt_j"\
     "opt_k"\
     "opt_l"\
     "show version")
    OPTARGS=()

    parseoptargs "-a" "-b" "-c" "-d" "-e" "-f" "-g" "-i" "-j" "-k" "-l"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    for i in {a..l}; do
      if [ "$i" == "h" ]; then
        test_result "cmd -a -b -c ... [-h]" "$opt_help" "0"
      else
        o="opt_$i"
        test_result "cmd -a -b -c ... [-$i]" "${!o}" "1"
      fi
    done
}

test_05() {
    local tested_opt_dry_run
    OPTOPTS=(h        n            v           V)
    OPTDEST=(opt_help opt_dry_run  opt_verbose opt_version)
    OPTACTI=(1        1            "+"         "*>")
    OPTDEFL=(0        0            0           "")
    OPTMETA=("help"   "do nothing" "verbose"   "version")
    OPTHELP=("this help"\
     "do nothing (dry-run)"\
     "verbose mode"\
     "show version")
    OPTARGS=()

    parseoptargs "-v"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -v [-h]" "$opt_help" "0"
    test_result "cmd -v" "$opt_verbose" "1"

    parseoptargs "-vv"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -vv" "$opt_verbose" "2"

    parseoptargs "-v" "-v"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -v -v" "$opt_verbose" "2"

    parseoptargs "-v" "-n" "-v"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -v -v" "$opt_verbose" "2"
}

test_06() {
    local tested_opt_dry_run
    OPTOPTS=(h        n            v           V)
    OPTDEST=(opt_help opt_dry_run  opt_verbose opt_version)
    OPTACTI=(1        1            "+"         "*>")
    OPTDEFL=(0        0            -1          "")
    OPTMETA=("help"   "do nothing" "verbose"   "version")
    OPTHELP=("this help"\
     "do nothing (dry-run)"\
     "verbose mode"\
     "show version")
    OPTARGS=()

    parseoptargs "-v"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -v" "$opt_verbose" "1"

    parseoptargs "-vv"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -vv" "$opt_verbose" "2"

    parseoptargs "-v" "-v"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -v -v" "$opt_verbose" "2"

    parseoptargs "-v" "-n" "-v"
    tested_opt_dry_run=$opt_dry_run
    opt_dry_run=$SAVED_OPT_DRY_RUN
    test_result "cmd -v -v" "$opt_verbose" "2"
}

Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi



UT1_LIST=
UT_LIST=
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
