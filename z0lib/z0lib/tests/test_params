#!/bin/bash
# -*- coding: utf-8 -*-
# Regression tests on z0lib
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
# Based on template 1.0.8
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script $0 requires bash 4.0+!" && exit 4
if [[ -z $HOME_DEVEL ]]; then
  [[ -d $HOME/odoo/devel ]] && HOME_DEVEL="$HOME/odoo/devel" || HOME_DEVEL="$HOME/devel"
fi
[[ -x $TDIR/../bin/python ]] && PYTHON=$(readlink -f $TDIR/../bin/python) || [[ -x $TDIR/python ]] && PYTHON="$TDIR/python" || PYTHON="python"
[[ -z $PYPATH ]] && PYPATH=$(echo -e "import os,sys\no=os.path\na=o.abspath\nj=o.join\nd=o.dirname\nb=o.basename\nf=o.isfile\np=o.isdir\nC=a('"$TDIR"')\nD='"$HOME_DEVEL"'\nN= 'venv_tools'\nU='setup.py'\nO='tools'\nH=o.expanduser('~')\nT=j(d(D),O)\nR=j(d(D),'pypi') if b(D) == N else j(D, 'pypi')\nW=D if b(D) == N else j(D, 'venv')\nS='site-packages'\nX='scripts'\ndef isk(P):\n return P.startswith((H,D,C,W)) and p(P) and p(j(P,X)) and f(j(P,'__init__.py')) and f(j(P,'__main__.py'))\ndef adk(L,P):\n if P not in L:\n  L.append(P)\nL=[C]\nfor B in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n for P in [C]+sys.path+os.environ['PATH'].split(':')+[W,R,T]:\n  P=a(P)\n  if b(P) in (X,'tests','travis','_travis'):\n   P=d(P)\n  if b(P)==b(d(P)) and f(j(P,'..',U)):\n   P=d(d(P))\n  elif b(d(C))==O and f(j(P,U)):\n   P=d(P)\n  if B==b(P) and isk(P):\n   adk(L,P)\n   break\n  elif isk(j(P,B,B)):\n   adk(L,j(P,B,B))\n   break\n  elif isk(j(P,B)):\n   adk(L,j(P,B))\n   break\n  elif isk(j(P,S,B)):\n   adk(L,j(P,S,B))\n   break\nadk(L,os.getcwd())\nprint(' '.join(L))\n"|$PYTHON)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$(readlink -e $d)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found in <$PYPATH>!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"

TRAVISLIBDIR=$(findpkg travisrc "$PYPATH" "travis_emulator")
if [[ -z "$TRAVISLIBDIR" ]]; then
  echo "Library file travisrc not found!"
  exit 72
fi
. $TRAVISLIBDIR
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TRAVISLIBDIR=$TRAVISLIBDIR"

TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"

Z0TLIBDIR=$(findpkg z0testrc "$PYPATH ." "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

DIST_CONF=$(findpkg ".z0tools.conf" "$PYPATH")
TCONF="$HOME/.z0tools.conf"
CFG_init "ALL"
link_cfg_def
link_cfg $DIST_CONF $TCONF
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "DIST_CONF=$DIST_CONF" && echo "TCONF=$TCONF"
get_pypi_param ALL
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"

__version__=1.0.9

test_common() {
    # test_common(simulate_cmd, [N])
    local res tag tres
    tag="RUNDIR"
    [[ $1 =~ ^$HOME/devel/venv/bin ]] && tag="VENV"
    [[ $1 =~ ^$HOME/devel/pypi/z0lib/z0lib ]] && tag="DEVEL"
    [[ $1 =~ ^$TESTDIR ]] && tag="TESTDIR"
    [[ $1 =~ TRAVIS/ ]] && tag="TRAVIS"
    [[ $1 =~ _TRAVIS/ ]] && tag="_TRAVIS"
    [[ -f ./travisrc ]] && rm -f ./travisrc
    [[ -f $RUNDIR/travisrc ]] && rm -f $RUNDIR/travisrc
    res=$($1 PYPATH|cut -f1 -d" ")
    test_result "$PWD> $tag/simulate_cmd PYPATH" "$(dirname $1)" "$res"
    res=$($1 Z0LIBDIR)
    tres="$RUNDIR"
    [[ $tag == "DEVEL" ]] && tres="$HOME/devel/pypi/z0lib/z0lib"
    [[ $tag == "VENV" ]] && tres="$HOME/devel/venv/bin"
    test_result "$PWD> $tag/simulate_cmd Z0LIBDIR" "$tres" "$res"
    # travisrc is found in python site packages or in source dir
    if [[ $tag == "DEVEL" ]]; then
      tres="$HOME/devel/pypi"
    elif [[ $tag == "VENV" ]]; then
      tres=$(echo "import sys;print([x for x in sys.path if '/site-packages' in x][0].split('/site-packages')[0])"|~/devel/venv/bin/python)
    else
      tres="$HOME/tools"
    fi
    tres="$tres/travis_emulator"
    res=$($1 PYPATH|grep -Eo $tres)
    # TODO
    # [[ $tag == "VENV" ]] && tres="$res"
    test_result "$PWD> $tag/simulate_cmd PYPATH #travis_emulator" "$tres" "$res"
    res=$($1 TRAVISLIBDIR)
    [[ $tag == "DEVEL" ]] && tres="$tres/travis_emulator"
    # TODO
    [[ $tag == "VENV" ]] && tres=$(dirname $res)
    test_result "$PWD> $tag/simulate_cmd TRAVISLIBDIR" "$tres/travisrc" "$res"
    # Ignore travisrc in current directory
    cp $HOME/tools/travis_emulator/travisrc ./
    res=$($1 TRAVISLIBDIR)
    [[ $1 =~ ^$PWD ]] && tres=$PWD
    test_result "$PWD> $tag/simulate_cmd TRAVISLIBDIR #(2)" "$tres/travisrc" "$res"
    rm -f ./travisrc
    if [[ $1 =~ ^$RUNDIR ]]; then
      cp $HOME/tools/travis_emulator/travisrc $RUNDIR
      res=$($1 TRAVISLIBDIR)
      test_result "$PWD> $tag/simulate_cmd TRAVISLIBDIR #(3)" "$RUNDIR/travisrc" "$res"
    fi
    rm -f $RUNDIR/travisrc
    res=$($1 PKGNAME)
    test_result "$PWD> $tag/simulate_cmd PKGNAME" "z0lib" "$res"
    res=$($1 PKGPATH)
    tres="$TRAVIS_BUILD_DIR"
    [[ $tag == "DEVEL" ]] && tres="$HOME/devel/pypi/z0lib"
    [[ $tag == "VENV" ]] && tres="$HOME/devel/pypi/z0lib"
    test_result "$PWD> $tag/simulate_cmd PKGPATH" "$tres" "$res"
    res=$($1 PRJNAME)
    test_result "$PWD> $tag/simulate_cmd PRJNAME" "z0lib" "$res"
    res=$($1 PRJPATH)
    tres="$TRAVIS_BUILD_DIR"
    [[ $tag == "DEVEL" ]] && tres="$HOME/devel/pypi/z0lib/z0lib"
    [[ $tag == "VENV" ]] && tres="$HOME/devel/pypi/z0lib/z0lib"
    test_result "$PWD> $tag/simulate_cmd PRJPATH" "$tres" "$res"
}

test_01() {
    local res
    cd $TESTDIR
    res=$($TESTDIR/simulate_cmd THIS)
    test_result "$PWD> TESTDIR/simulate_cmd THIS" "simulate_cmd" "$res"
    res=$($TESTDIR/simulate_cmd TDIR)
    test_result "$PWD> TESTDIR/simulate_cmd TDIR" "$TESTDIR" "$res"
    res=$($TESTDIR/simulate_cmd HOME_DEVEL)
    test_result "$PWD> TESTDIR/simulate_cmd HOME_DEVEL" "$HOME/devel" "$res"
    test_common $TESTDIR/simulate_cmd
    cd $RUNDIR
    test_common $TESTDIR/simulate_cmd

    mv $TESTDIR/simulate_cmd $RUNDIR/simulate_cmd
    cd $TESTDIR
    test_common $RUNDIR/simulate_cmd "N"
    cd $RUNDIR
    test_common $RUNDIR/simulate_cmd

    mv $RUNDIR/simulate_cmd $HOME/tools/z0lib/simulate_cmd
    cd $HOME/tools/z0lib
    res=$($HOME/tools/z0lib/simulate_cmd TDIR)
    test_result "$PWD> TOOLS/z0lib/simulate_cmd TDIR" "$HOME/tools/z0lib" "$res"
    res=$($HOME/tools/z0lib/simulate_cmd PRJNAME)
    test_result "$PWD> TOOLS/z0lib/simulate_cmd PRJNAME" "tools" "$res"
    res=$($HOME/tools/z0lib/simulate_cmd PKGNAME)
    test_result "$PWD> TOOLS/z0lib/simulate_cmd PKGNAME" "z0lib" "$res"
    res=$($HOME/tools/z0lib/simulate_cmd PRJPATH)
    test_result "$PWD> TOOLS/z0lib/simulate_cmd PRJPATH" "$HOME/tools/z0lib" "$res"
    res=$($HOME/tools/z0lib/simulate_cmd PKGPATH)
    test_result "$PWD> TOOLS/z0lib/simulate_cmd PKGPATH" "$HOME/tools" "$res"

    mv $HOME/tools/z0lib/simulate_cmd $HOME/tools/zerobug/_travis
    res=$($HOME/tools/zerobug/_travis/simulate_cmd PRJNAME)
    test_result "$PWD> _TRAVIS/z0lib/simulate_cmd PRJNAME" "tools" "$res"
    res=$($HOME/tools/zerobug/_travis/simulate_cmd PKGNAME)
    test_result "$PWD> _TRAVIS/z0lib/simulate_cmd PKGNAME" "z0lib" "$res"
    res=$($HOME/tools/zerobug/_travis/simulate_cmd PRJPATH)
    test_result "$PWD> _TRAVIS/z0lib/simulate_cmd PRJPATH" "$HOME/tools/z0lib" "$res"
    res=$($HOME/tools/zerobug/_travis/simulate_cmd PKGPATH)
    test_result "$PWD> _TRAVIS/z0lib/simulate_cmd PKGPATH" "$HOME/tools" "$res"

    mv $HOME/tools/zerobug/_travis/simulate_cmd $HOME/tools/z0bug_odoo/travis
    res=$($HOME/tools/z0bug_odoo/travis/simulate_cmd PRJNAME)
    test_result "$PWD> TRAVIS/z0lib/simulate_cmd PRJNAME" "tools" "$res"
    res=$($HOME/tools/z0bug_odoo/travis/simulate_cmd PKGNAME)
    test_result "$PWD> TRAVIS/z0lib/simulate_cmd PKGNAME" "z0lib" "$res"
    res=$($HOME/tools/z0bug_odoo/travis/simulate_cmd PRJPATH)
    test_result "$PWD> TRAVIS/z0lib/simulate_cmd PRJPATH" "$HOME/tools/z0lib" "$res"
    res=$($HOME/tools/z0bug_odoo/travis/simulate_cmd PKGPATH)
    test_result "$PWD> TRAVIS/z0lib/simulate_cmd PKGPATH" "$HOME/tools" "$res"

    mkdir -p $HOME/devel/pypi/z0lib
    cp -R $HOME/build/local/z0lib/ $HOME/devel/pypi/z0lib/
    mv $HOME/devel/pypi/z0lib/z0lib/scripts/setup.info $HOME/devel/pypi/z0lib/setup.py
    mkdir -p $HOME/devel/pypi/travis_emulator/
    cp -R $HOME/tools/travis_emulator/ $HOME/devel/pypi/travis_emulator/
    mv $HOME/devel/pypi/travis_emulator/travis_emulator/setup.py $HOME/devel/pypi/travis_emulator/setup.py
    cd $HOME/devel/pypi/z0lib/z0lib
    mv $HOME/tools/z0bug_odoo/travis/simulate_cmd $HOME/devel/pypi/z0lib/z0lib/simulate_cmd
    # [[ -f $HOME/devel/pypi/z0lib/z0lib/travisrc ]] && rm -f $HOME/devel/pypi/z0lib/z0lib/travisrc
    test_common $HOME/devel/pypi/z0lib/z0lib/simulate_cmd
    mv $HOME/devel/pypi/z0lib/z0lib/simulate_cmd $HOME/devel/venv/bin/simulate_cmd
    test_common $HOME/devel/venv/bin/simulate_cmd "N"
    mv $HOME/devel/venv/bin/simulate_cmd $TESTDIR/simulate_cmd
}

Z0BUG_setup() {
    local f
    [[ -f $TESTDIR/simulate_cmd ]] && rm -f $TESTDIR/simulate_cmd
    [[ -f $HOME/devel/venv/bin/simulate_cmd ]] && rm -f $HOME/devel/venv/bin/simulate_cmd
    [[ -d $HOME/devel/pypi/z0lib ]] && rm -fR $HOME/devel/pypi/z0lib
    [[ -d $HOME/devel/pypi/travis_emulator ]] && rm -fR $HOME/devel/pypi/travis_emulator
    # echo "set -x" >>$TESTDIR/simulate_cmd
    while IFS= read -r line || [[ -n "$line" ]]; do
      [[ $line =~ ^DIST_CONF= ]] && break
      echo "$line" >>$TESTDIR/simulate_cmd
    done <$0
    echo "#############################" >>$TESTDIR/simulate_cmd
    f=0
    while IFS= read -r line || [[ -n "$line" ]]; do
      [[ $line =~ ^\[\[\ -x\ \$TDIR/../bin/python ]] && f=1
      [[ $line =~ ^DIST_CONF= ]] && f=1
      [[ $f -ne 0 && $line =~ ^\[\[\ -z\ \$PYPATH ]] && line="${line:20}"
      [[ $f -ne 0 ]] && echo "$line" >>$TESTDIR/simulate_cmd
      [[ $f -ne 0 && $line =~ ^done ]] && echo -e "#############################\n" >>$TESTDIR/simulate_cmd && f=0
      [[ $line =~ ^__version__= ]] && break
    done <$0
    echo "" >>$TESTDIR/simulate_cmd
    echo "echo \${!1}" >>$TESTDIR/simulate_cmd
    chmod +x $TESTDIR/simulate_cmd
}

Z0BUG_teardown() {
    rm -f $TESTDIR/simulate_cmd
}


Z0BUG_init
parseoptest -l$TESTDIR/test_z0lib.log "$@" "-J"
sts=$?
[[ $sts -ne 127 ]] && exit $sts
if [ ${opt_tjLib:-0} -ne 0 ]; then
  TRAVISLIBDIR=$(findpkg travisrc "$PYPATH" "travis_emulator")
  if [[ -z "$TRAVISLIBDIR" ]]; then
    echo "Library file travisrc not found!"
    exit 72
  fi
  . $TRAVISLIBDIR
  [[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TRAVISLIBDIR=$TRAVISLIBDIR"
fi


UT1_LIST=
UT_LIST=
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
