#! /bin/bash
# Copyright (C) 2015-2020 SHS-AV s.r.l. (<http://www.zeroincombenze.org>)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).
#
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
PYPATH=$(echo -e "import sys\nprint(str(sys.path).replace(' ','').replace('\"','').replace(\"'\",\"\").replace(',',':')[1:-1])"|python)
for d in $TDIR $TDIR/.. $TDIR/../z0lib $TDIR/../.. $TDIR/../../z0lib $TDIR/../../z0lib/z0lib $HOME/dev $HOME/tools ${PYPATH//:/ } /etc; do
  if [ -e $d/z0librc ]; then
    . $d/z0librc
    Z0LIBDIR=$d
    Z0LIBDIR=$(readlink -e $Z0LIBDIR)
    break
  fi
done
if [ -z "$Z0LIBDIR" ]; then
  echo "Library file z0librc not found!"
  exit 2
fi
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
RUNDIR=$(readlink -e $TESTDIR/..)
Z0TLIBDIR=$(findpkg z0testrc "$TDIR $TDIR/.. $HOME/tools/zerobug $HOME/dev ${PYPATH//:/ } . .." "zerobug")
if [ -z "$Z0TLIBDIR" ]; then
  echo "Library file z0testrc not found!"
  exit 2
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)

__version__=1.0.0.6

OS_TREE="10.0 10.0/l10n-italy 10.0/l10n-italy/l10n_it_base /tmp/zerobug"


test_01() {
    local path sts RES
    sts=0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      Z0BUG_build_os_tree "$OS_TREE"
    fi
    for path in $OS_TREE; do
      if [ ${opt_dry_run:-0} -eq 0 ]; then
        [ "${path:0:1}" != "/" ] && path=$Z0BUG_root/$path
        [ -d $path ] && RES=1 || RES=0
        test_result "mkdir $path" "1" "$RES"
        sts+=$?
      fi
    done
    return $sts
}

test_09() {
    local path sts RES
    sts=0
    if [ ${opt_dry_run:-0} -eq 0 ]; then
      Z0BUG_remove_os_tree "$OS_TREE"
    fi
    for path in $OS_TREE; do
      if [ ${opt_dry_run:-0} -eq 0 ]; then
        [ "${path:0:1}" != "/" ] && path=$Z0BUG_root/$path
        [ -d $path ] && RES=0 || RES=1
        test_result "rmdir $path" "1" "$RES"
        sts+=$?
      fi
    done
    return $sts
}


Z0BUG_init
parseoptest -l$TESTDIR/test_zerobug.log "$@"
sts=$?
if [ $sts -ne 127 ]; then
  exit $sts
fi


UT1_LIST=""
UT_LIST=""
if [ "$(type -t Z0BUG_setup)" == "function" ]; then Z0BUG_setup; fi
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
if [ "$(type -t Z0BUG_teardown)" == "function" ]; then Z0BUG_teardown; fi
exit $sts
