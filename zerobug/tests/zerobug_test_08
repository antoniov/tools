#! /bin/bash
# Copyright (C) 2015-2020 SHS-AV s.r.l. (<http://www.zeroincombenze.org>)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).
#
READLINK=$(which greadlink 2>/dev/null) || READLINK=$(which readlink 2>/dev/null)
export READLINK
# Based on template 1.0.2.7
THIS=$(basename "$0")
TDIR=$(readlink -f $(dirname $0))
[ $BASH_VERSINFO -lt 4 ] && echo "This script $0 requires bash 4.0+!" && exit 4
HOME_DEV="$HOME/devel"
[[ -x $TDIR/../bin/python ]] && PYTHON=$(readlink -f $TDIR/../bin/python) || [[ -x $TDIR/python ]] && PYTHON="$TDIR/python" || PYTHON="python"
PYPATH=$(echo -e "import os,sys;\nTDIR='"$TDIR"';HOME_DEV='"$HOME_DEV"'\no=os.path\nHOME=os.environ.get('HOME');t=o.join(HOME,'tools')\nn=o.join(HOME,'pypi') if o.basename(HOME_DEV)=='venv_tools' else o.join(HOME,HOME_DEV, 'pypi')\nd=HOME_DEV if o.basename(HOME_DEV)=='venv_tools' else o.join(HOME_DEV,'venv')\ndef apl(l,p,b):\n if p:\n  p2=o.join(p,b,b)\n  p1=o.join(p,b)\n  if o.isdir(p2):\n   l.append(p2)\n  elif o.isdir(p1):\n   l.append(p1)\nl=[TDIR]\nv=''\nfor x in sys.path:\n if not o.isdir(t) and o.isdir(o.join(x,'tools')):\n  t=o.join(x,'tools')\n if not v and o.basename(x)=='site-packages':\n  v=x\nfor x in os.environ['PATH'].split(':'):\n if x.startswith(d):\n  d=x\n  break\nfor b in ('z0lib','zerobug','odoo_score','clodoo','travis_emulator'):\n if TDIR.startswith(d):\n  apl(l,d,b)\n elif TDIR.startswith(n):\n  apl(l,n,b)\n apl(l,v,b)\n apl(l,t,b)\nl=l+os.environ['PATH'].split(':')\ntdir=o.dirname(TDIR)\np=set()\npa=p.add\np=[x for x in l if x and (x.startswith(HOME) or x.startswith(HOME_DEV) or x.startswith(tdir)) and not (x in p or pa(x))]\nprint(' '.join(p))\n"|$PYTHON)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "PYPATH=$PYPATH"
for d in $PYPATH /etc; do
  if [[ -e $d/z0librc ]]; then
    . $d/z0librc
    Z0LIBDIR=$(readlink -e $d)
    break
  fi
done
if [[ -z "$Z0LIBDIR" ]]; then
  echo "Library file z0librc not found in <$PYPATH>!"
  exit 72
fi
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0LIBDIR=$Z0LIBDIR"
TESTDIR=$(findpkg "" "$TDIR . .." "tests")
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "TESTDIR=$TESTDIR"
RUNDIR=$(readlink -e $TESTDIR/..)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "RUNDIR=$RUNDIR"
Z0TLIBDIR=$(findpkg z0testrc "$PYPATH" "zerobug")
if [[ -z "$Z0TLIBDIR" ]]; then
  echo "Library file z0testrc not found!"
  exit 72
fi
. $Z0TLIBDIR
Z0TLIBDIR=$(dirname $Z0TLIBDIR)
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "Z0TLIBDIR=$Z0TLIBDIR"

DIST_CONF=$(findpkg ".z0tools.conf" "$PYPATH")
TCONF="$HOME/.z0tools.conf"
CFG_init "ALL"
link_cfg_def
link_cfg $DIST_CONF $TCONF
[[ $TRAVIS_DEBUG_MODE -ge 8 ]] && echo "DIST_CONF=$DIST_CONF" && echo "TCONF=$TCONF"
get_pypi_param ALL
RED="\e[1;31m"
GREEN="\e[1;32m"
CLR="\e[0m"

__version__=1.0.9




test_01() {
    local path sts RES b v x
    sts=0
    for v in 6.1 7.0 8.0 10.0 12.0 13.0 14.0 v7; do
        if [[ $v == "v7" ]]; then
            OS_TREE="$v $v/addons $v/server/openerp"
        elif [[ $v =~ (6.1|7.0|8.0|9.0) ]]; then
            OS_TREE="$v $v/addons $v/openerp"
        else
            OS_TREE="$v $v/addons $v/odoo"
        fi
        [ ${opt_dry_run:-0} -eq 0 ] && Z0BUG_build_odoo_env "$v"
        for path in $OS_TREE; do
          if [ ${opt_dry_run:-0} -eq 0 ]; then
            [[ $path =~ ^[/~] ]] || path=$Z0BUG_root/$path
            [[ -d $path ]] && RES=1 || RES=0
            test_result "odoo flat $path" "1" "$RES"
            sts=$?
          fi
        done

        x=$Z0BUG_root/$(echo $OS_TREE|awk '{print $3}')
        [[ -f $x/release.py ]] && RES=1 || RES=0
        test_result "odoo flat $x/release.py" "1" "$RES"
        sts+=$?

        x=$($READLINK -m $Z0BUG_root/$(echo $OS_TREE|awk '{print $3 "/.."}'))
        [[ $v =~ (6.1|7.0|8.0|9.0|v7) ]] && b="openerp-server" || b="odoo-bin"
        [[ -f $x/$b ]] && RES=1 || RES=0
        test_result "odoo flat $x/$b" "1" "$RES"
        sts+=$?
    done
    return $sts
}

test_02() {
    local path sts RES
    sts=0
    for v in 6.1 7.0 8.0 10.0 12.0 13.0 14.0 v7; do
       if [[ $v == "v7" ]]; then
            OS_TREE="$v $v/addons $v/server/openerp"
        elif [[ $v =~ (6.1|7.0) ]]; then
            OS_TREE="$v $v/addons $v/server/openerp"
        elif [[ $v =~ (8.0|9.0) ]]; then
            OS_TREE="$v $v/addons $v/openerp"
        else
            OS_TREE="$v $v/addons $v/odoo/odoo"
        fi
        [ ${opt_dry_run:-0} -eq 0 ] && Z0BUG_remove_os_tree "$OS_TREE"
        for path in $OS_TREE; do
          if [ ${opt_dry_run:-0} -eq 0 ]; then
            [ "${path:0:1}" != "/" ] && path=$Z0BUG_root/$path
            [ -d $path ] && RES=0 || RES=1
            test_result "odoo rmdir $path" "1" "$RES"
            sts=$?
          fi
        done
    done
    return $sts
}

test_03() {
    local path sts RES b v x hy
    sts=0
    for v in 6.1 7.0 8.0 10.0 12.0 13.0 14.0 v7; do
        if [[ $v == "v7" ]]; then
            OS_TREE="$v $v/addons $v/server/openerp"
            hy=
        elif [[ $v =~ (6.1|7.0) ]]; then
            OS_TREE="$v $v/addons $v/server/openerp"
            hy="server"
        elif [[ $v =~ (8.0|9.0) ]]; then
            OS_TREE="$v $v/addons $v/openerp"
            hy=
        else
            OS_TREE="$v $v/addons $v/odoo/odoo"
            hy="tree"
        fi
        [ ${opt_dry_run:-0} -eq 0 ] && Z0BUG_build_odoo_env "$v" "$hy"
        for path in $OS_TREE; do
          if [ ${opt_dry_run:-0} -eq 0 ]; then
            [[ $path =~ ^[/~] ]] || path=$Z0BUG_root/$path
            [[ -d $path ]] && RES=1 || RES=0
            test_result "odoo tree $path" "1" "$RES"
            sts=$?
          fi
        done

        x=$Z0BUG_root/$(echo $OS_TREE|awk '{print $3}')
        [[ -f $x/release.py ]] && RES=1 || RES=0
        test_result "odoo tree $x/release.py" "1" "$RES"
        sts+=$?

        x=$($READLINK -m $Z0BUG_root/$(echo $OS_TREE|awk '{print $3 "/.."}'))
        [[ $v =~ (6.1|7.0|8.0|9.0|v7) ]] && b="openerp-server" || b="odoo-bin"
        [[ -f $x/$b ]] && RES=1 || RES=0
        test_result "odoo tree $x/$b" "1" "$RES"
        sts+=$?
    done
    return $sts
}

test_04() {
    local path sts RES
    sts=0
    for v in 6.1 7.0 8.0 10.0 12.0 13.0 14.0 v7; do
        if [[ $v == "v7" ]]; then
            OS_TREE="$v $v/addons $v/server/openerp"
        elif [[ $v =~ (6.1|7.0) ]]; then
            OS_TREE="$v $v/addons $v/server/openerp"
        elif [[ $v =~ (8.0|9.0) ]]; then
            OS_TREE="$v $v/addons $v/openerp"
        else
            OS_TREE="$v $v/addons $v/odoo/odoo"
        fi
        [ ${opt_dry_run:-0} -eq 0 ] && Z0BUG_remove_os_tree "$OS_TREE"
        for path in $OS_TREE; do
          if [ ${opt_dry_run:-0} -eq 0 ]; then
            [ "${path:0:1}" != "/" ] && path=$Z0BUG_root/$path
            [ -d $path ] && RES=0 || RES=1
            test_result "odoo rmdir $path" "1" "$RES"
            sts=$?
          fi
        done
    done
    return $sts
}

test_05() {
    local path sts RES hy
    sts=0
    for v in 6.1 7.0 8.0 10.0 12.0 13.0 14.0; do
        if [[ $v == "v7" ]]; then
            OS_TREE="$HOME/$v $HOME/$v/addons $HOME/$v/server/openerp"
            hy=
        elif [[ $v =~ (6.1|7.0) ]]; then
            OS_TREE="$HOME/$v $HOME/$v/addons $HOME/$v/server/openerp"
            hy="server"
        elif [[ $v =~ (8.0|9.0) ]]; then
            OS_TREE="$HOME/$v $HOME/$v/addons $HOME/$v/openerp"
            hy=
        else
            OS_TREE="$HOME/$v $HOME/$v/addons $HOME/$v/odoo/odoo"
            hy="tree"
        fi
        [ ${opt_dry_run:-0} -eq 0 ] && Z0BUG_remove_os_tree "$OS_TREE"
        [ ${opt_dry_run:-0} -eq 0 ] && Z0BUG_build_odoo_env "$HOME/$v" "$hy"
        for path in $OS_TREE; do
          if [ ${opt_dry_run:-0} -eq 0 ]; then
            [[ $path =~ ^[/~] ]] || path=$Z0BUG_root/$path
            [[ -d $path ]] && RES=1 || RES=0
            test_result "odoo $path" "1" "$RES"
            sts=$?
          fi
        done
    done
    return $sts
}

test_06() {
    local path sts RES
    sts=0
    for v in 6.1 7.0 8.0 10.0 12.0 13.0 14.0 v7; do
        if [[ $v == "v7" ]]; then
            OS_TREE="$HOME/$v $HOME/$v/addons $HOME/$v/server/openerp"
        elif [[ $v =~ (6.1|7.0) ]]; then
            OS_TREE="$HOME/$v $HOME/$v/addons $HOME/$v/server/openerp"
        elif [[ $v =~ (8.0|9.0) ]]; then
            OS_TREE="$HOME/$v $HOME/$v/addons $HOME/$v/openerp"
        else
            OS_TREE="$HOME/$v $HOME/$v/addons $HOME/$v/odoo/odoo"
        fi
        [ ${opt_dry_run:-0} -eq 0 ] && Z0BUG_remove_os_tree "$OS_TREE"
        for path in $OS_TREE; do
          if [ ${opt_dry_run:-0} -eq 0 ]; then
            [ "${path:0:1}" != "/" ] && path=$Z0BUG_root/$path
            [ -d $path ] && RES=0 || RES=1
            test_result "odoo rmdir $path" "1" "$RES"
            sts=$?
          fi
        done
    done
    return $sts
}


Z0BUG_setup() {
    Z0BUG_remove_os_tree "$OS_TREE"
}


Z0BUG_init
parseoptest -l$TESTDIR/test_zerobug.log "$@"
sts=$?
[[ $sts -ne 127 ]] && exit $sts




UT1_LIST=""
UT_LIST=""
[[ "$(type -t Z0BUG_setup)" == "function" ]] && Z0BUG_setup
Z0BUG_main_file "$UT1_LIST" "$UT_LIST"
sts=$?
[[ "$(type -t Z0BUG_teardown)" == "function" ]] && Z0BUG_teardown
exit $sts
